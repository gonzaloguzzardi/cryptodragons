{
  "contractName": "DragonGoldERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SpenderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SpenderRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSpender",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSpender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "spendFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405233600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620000dc33620000e2640100000000026401000000009004565b620003d9565b620001068160056200014c6401000000000262001819179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6200020b8282620002dd640100000000026401000000009004565b156200027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611c3180620003e96000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100ca578063a9059cbb1161008e578063a9059cbb14610545578063aa271e1a146105ab578063dd62ed3e14610607578063e7e31e7a1461067f578063f2fde38b146106c35761013e565b80638f32d59b14610413578063983b2d561461043557806398650275146104795780639a206ece14610483578063a457c2d7146104df5761013e565b806340c10f191161011157806340c10f19146102b35780636aade2881461031957806370a0823114610367578063715018a6146103bf5780638da5cb5b146103c95761013e565b8063095ea7b31461014357806318160ddd146101a957806323b872dd146101c7578063395093511461024d575b600080fd5b61018f6004803603604081101561015957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b604051808215151515815260200191505060405180910390f35b6101b161071e565b6040518082815260200191505060405180910390f35b610233600480360360608110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610728565b604051808215151515815260200191505060405180910390f35b6102996004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d9565b604051808215151515815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087e565b604051808215151515815260200191505060405180910390f35b6103656004803603604081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f2565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095e565b6040518082815260200191505060405180910390f35b6103c76109a6565b005b6103d1610ac4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041b610aee565b604051808215151515815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b46565b005b610481610baf565b005b6104c56004803603602081101561049957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bba565b604051808215151515815260200191505060405180910390f35b61052b600480360360408110156104f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd7565b604051808215151515815260200191505060405180910390f35b6105916004803603604081101561055b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7c565b604051808215151515815260200191505060405180910390f35b6105ed600480360360208110156105c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c93565b604051808215151515815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb0565b6040518082815260200191505060405180910390f35b6106c16004803603602081101561069557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d37565b005b610705600480360360208110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b6000610714338484610e09565b6001905092915050565b6000600254905090565b6000610735848484610f68565b6107ce84336107c985600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b600190509392505050565b6000610874338461086f85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b610e09565b6001905092915050565b600061088933610c93565b6108de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611bcc6031913960400191505060405180910390fd5b6108e88383611209565b6001905092915050565b6108fb33610bba565b610950576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b61095a828261135b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109ae610aee565b610a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b4e610aee565b610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610bac816114ad565b50565b610bb833611507565b565b6000610bd082600461156190919063ffffffff16565b9050919050565b6000610c723384610c6d85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b6001905092915050565b6000610c89338484610f68565b6001905092915050565b6000610ca982600561156190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d3f610aee565b610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610d9d8161165c565b50565b610da8610aee565b610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610e06816116b6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e7d57600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa257600080fd5b610ff3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611b3b603a913960400191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156111ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b156026913960400191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561124357600080fd5b6112588160025461119e90919063ffffffff16565b6002819055506112af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561139557600080fd5b6113aa8160025461113290919063ffffffff16565b600281905550611401816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6114c181600561181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61151b81600561199790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61167081600461181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3139419c41cdd7abca84fa19dd21118cd285d3e2ce1a9444e8161ce9fa62fdcd60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6118c68282611561565b15611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b611a448282611561565b611ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4163636f756e7420646f6573206e6f742068617665207468697320726f6c650081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe726573756c742063616e742062652067726561746572207468616e20706172616d657465727361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e4d757374206861766520746865207370656e64657220726f656c20746f20706572666f726d207468697320616374696f6e4d757374206861766520746865206d696e74657220726f6c657220746f20706572666f726d207468697320616374696f6ea265627a7a72315820d1938f45a3c128d9de1362e368c6f2283281af95dcb0e2dec1253f9ea469bdb164736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100ca578063a9059cbb1161008e578063a9059cbb14610545578063aa271e1a146105ab578063dd62ed3e14610607578063e7e31e7a1461067f578063f2fde38b146106c35761013e565b80638f32d59b14610413578063983b2d561461043557806398650275146104795780639a206ece14610483578063a457c2d7146104df5761013e565b806340c10f191161011157806340c10f19146102b35780636aade2881461031957806370a0823114610367578063715018a6146103bf5780638da5cb5b146103c95761013e565b8063095ea7b31461014357806318160ddd146101a957806323b872dd146101c7578063395093511461024d575b600080fd5b61018f6004803603604081101561015957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b604051808215151515815260200191505060405180910390f35b6101b161071e565b6040518082815260200191505060405180910390f35b610233600480360360608110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610728565b604051808215151515815260200191505060405180910390f35b6102996004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d9565b604051808215151515815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087e565b604051808215151515815260200191505060405180910390f35b6103656004803603604081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f2565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095e565b6040518082815260200191505060405180910390f35b6103c76109a6565b005b6103d1610ac4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041b610aee565b604051808215151515815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b46565b005b610481610baf565b005b6104c56004803603602081101561049957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bba565b604051808215151515815260200191505060405180910390f35b61052b600480360360408110156104f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd7565b604051808215151515815260200191505060405180910390f35b6105916004803603604081101561055b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7c565b604051808215151515815260200191505060405180910390f35b6105ed600480360360208110156105c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c93565b604051808215151515815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb0565b6040518082815260200191505060405180910390f35b6106c16004803603602081101561069557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d37565b005b610705600480360360208110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b6000610714338484610e09565b6001905092915050565b6000600254905090565b6000610735848484610f68565b6107ce84336107c985600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b600190509392505050565b6000610874338461086f85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b610e09565b6001905092915050565b600061088933610c93565b6108de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611bcc6031913960400191505060405180910390fd5b6108e88383611209565b6001905092915050565b6108fb33610bba565b610950576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b61095a828261135b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109ae610aee565b610a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b4e610aee565b610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610bac816114ad565b50565b610bb833611507565b565b6000610bd082600461156190919063ffffffff16565b9050919050565b6000610c723384610c6d85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b6001905092915050565b6000610c89338484610f68565b6001905092915050565b6000610ca982600561156190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d3f610aee565b610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610d9d8161165c565b50565b610da8610aee565b610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610e06816116b6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e7d57600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa257600080fd5b610ff3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611b3b603a913960400191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156111ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b156026913960400191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561124357600080fd5b6112588160025461119e90919063ffffffff16565b6002819055506112af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561139557600080fd5b6113aa8160025461113290919063ffffffff16565b600281905550611401816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6114c181600561181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61151b81600561199790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61167081600461181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3139419c41cdd7abca84fa19dd21118cd285d3e2ce1a9444e8161ce9fa62fdcd60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6118c68282611561565b15611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b611a448282611561565b611ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4163636f756e7420646f6573206e6f742068617665207468697320726f6c650081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe726573756c742063616e742062652067726561746572207468616e20706172616d657465727361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e4d757374206861766520746865207370656e64657220726f656c20746f20706572666f726d207468697320616374696f6e4d757374206861766520746865206d696e74657220726f6c657220746f20706572666f726d207468697320616374696f6ea265627a7a72315820d1938f45a3c128d9de1362e368c6f2283281af95dcb0e2dec1253f9ea469bdb164736f6c63430005110032",
  "sourceMap": "261:795:8:-;;;564:10:14;555:6;;:19;;;;;;;;;;;;;;;;;;623:6;;;;;;;;;;;590:40;;619:1;590:40;;;;;;;;;;;;331:22:10;342:10;331;;;:22;;;:::i;:::-;261:795:8;;812:121:10;869:20;881:7;869;:11;;;;;;:20;;;;;:::i;:::-;917:7;905:20;;;;;;;;;;;;812:121;:::o;273:246:9:-;369:1;350:21;;:7;:21;;;;342:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:18;423:4;429:7;419:3;;;:18;;;:::i;:::-;418:19;410:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:4;484;:11;;:20;496:7;484:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;273:246;;:::o;943:192::-;1015:4;1059:1;1040:21;;:7;:21;;;;1032:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1107:4;:11;;:20;1119:7;1107:20;;;;;;;;;;;;;;;;;;;;;;;;;1100:27;;943:192;;;;:::o;261:795:8:-;;;;;;;",
  "deployedSourceMap": "261:795:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:795:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2813:148:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2813:148:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;964:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3434:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3434:228:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4177:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4177:203:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;563:131:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;563:131:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;949:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;949:104:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1275:106:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1275:106:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1469:140:14;;;:::i;:::-;;708:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1086:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;628:91:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;628:91:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;727:77;;;:::i;:::-;;447:110:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:110:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4900:213:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4900:213:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2026:140;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2026:140:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;512:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:108:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1720:131:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1720:131:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;565:93:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;565:93:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1789:109:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1789:109:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;2813:148:16;2878:4;2895:36;2904:10;2916:7;2925:5;2895:8;:36::i;:::-;2949:4;2942:11;;2813:148;;;;:::o;964:91::-;1008:7;1035:12;;1028:19;;964:91;:::o;3434:228::-;3513:4;3530:26;3540:4;3546:2;3550:5;3530:9;:26::i;:::-;3567:65;3576:4;3582:10;3594:37;3625:5;3594:8;:14;3603:4;3594:14;;;;;;;;;;;;;;;:26;3609:10;3594:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3567:8;:65::i;:::-;3650:4;3643:11;;3434:228;;;;;:::o;4177:203::-;4257:4;4274:76;4283:10;4295:7;4304:45;4338:10;4304:8;:20;4313:10;4304:20;;;;;;;;;;;;;;;:29;4325:7;4304:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4274:8;:76::i;:::-;4368:4;4361:11;;4177:203;;;;:::o;563:131:8:-;631:4;410:20:10;419:10;410:8;:20::i;:::-;402:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:16:8;654:2;658:5;648;:16::i;:::-;682:4;675:11;;563:131;;;;:::o;949:104::-;344:21:11;354:10;344:9;:21::i;:::-;336:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1027:18:8;1033:4;1039:5;1027;:18::i;:::-;949:104;;:::o;1275:106:16:-;1330:7;1357:9;:16;1367:5;1357:16;;;;;;;;;;;;;;;;1350:23;;1275:106;;;:::o;1469:140:14:-;921:9;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:1;1531:40;;1552:6;;;;;;;;;;;1531:40;;;;;;;;;;;;1599:1;1582:6;;:19;;;;;;;;;;;;;;;;;;1469:140::o;708:78::-;745:7;772:6;;;;;;;;;;;765:13;;708:78;:::o;1086:92::-;1126:4;1164:6;;;;;;;;;;;1150:20;;:10;:20;;;1143:27;;1086:92;:::o;628:91:10:-;921:9:14;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:19:10;703:7;692:10;:19::i;:::-;628:91;:::o;727:77::-;771:25;785:10;771:13;:25::i;:::-;727:77::o;447:110:11:-;504:4;528:21;541:7;528:8;:12;;:21;;;;:::i;:::-;521:28;;447:110;;;:::o;4900:213:16:-;4985:4;5002:81;5011:10;5023:7;5032:50;5066:15;5032:8;:20;5041:10;5032:20;;;;;;;;;;;;;;;:29;5053:7;5032:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5002:8;:81::i;:::-;5101:4;5094:11;;4900:213;;;;:::o;2026:140::-;2087:4;2104:32;2114:10;2126:2;2130:5;2104:9;:32::i;:::-;2154:4;2147:11;;2026:140;;;;:::o;512:108:10:-;568:4;592:20;604:7;592;:11;;:20;;;;:::i;:::-;585:27;;512:108;;;:::o;1720:131:16:-;1792:7;1819:8;:15;1828:5;1819:15;;;;;;;;;;;;;;;:24;1835:7;1819:24;;;;;;;;;;;;;;;;1812:31;;1720:131;;;;:::o;565:93:11:-;921:9:14;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:20:11;642:7;630:11;:20::i;:::-;565:93;:::o;1789:109:14:-;921:9;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:28;1881:8;1862:18;:28::i;:::-;1789:109;:::o;6999:254:16:-;7111:1;7092:21;;:7;:21;;;;7084:30;;;;;;7150:1;7133:19;;:5;:19;;;;7125:28;;;;;;7193:5;7166:8;:15;7175:5;7166:15;;;;;;;;;;;;;;;:24;7182:7;7166:24;;;;;;;;;;;;;;;:32;;;;7230:7;7214:31;;7223:5;7214:31;;;7239:5;7214:31;;;;;;;;;;;;;;;;;;6999:254;;;:::o;5340:262::-;5442:1;5428:16;;:2;:16;;;;5420:25;;;;;;5476:26;5496:5;5476:9;:15;5486:4;5476:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5458:9;:15;5468:4;5458:15;;;;;;;;;;;;;;;:44;;;;5529:24;5547:5;5529:9;:13;5539:2;5529:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5513:9;:13;5523:2;5513:13;;;;;;;;;;;;;;;:40;;;;5584:2;5569:25;;5578:4;5569:25;;;5588:5;5569:25;;;;;;;;;;;;;;;;;;5340:262;;;:::o;1274:212:13:-;1332:7;1365:1;1360;:6;;1352:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:9;1456:1;1452;:5;1440:17;;1477:1;1470:8;;;1274:212;;;;:::o;1574:192::-;1632:7;1652:9;1668:1;1664;:5;1652:17;;1693:1;1688;:6;;1680:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:1;1750:8;;;1574:192;;;;:::o;5954:269:16:-;6048:1;6029:21;;:7;:21;;;;6021:30;;;;;;6079:23;6096:5;6079:12;;:16;;:23;;;;:::i;:::-;6064:12;:38;;;;6134:29;6157:5;6134:9;:18;6144:7;6134:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6113:9;:18;6123:7;6113:18;;;;;;;;;;;;;;;:50;;;;6200:7;6179:36;;6196:1;6179:36;;;6209:5;6179:36;;;;;;;;;;;;;;;;;;5954:269;;:::o;6457:::-;6551:1;6532:21;;:7;:21;;;;6524:30;;;;;;6582:23;6599:5;6582:12;;:16;;:23;;;;:::i;:::-;6567:12;:38;;;;6637:29;6660:5;6637:9;:18;6647:7;6637:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6616:9;:18;6626:7;6616:18;;;;;;;;;;;;;;;:50;;;;6708:1;6682:36;;6691:7;6682:36;;;6712:5;6682:36;;;;;;;;;;;;;;;;;;6457:269;;:::o;812:121:10:-;869:20;881:7;869;:11;;:20;;;;:::i;:::-;917:7;905:20;;;;;;;;;;;;812:121;:::o;941:129::-;1001:23;1016:7;1001;:14;;:23;;;;:::i;:::-;1054:7;1040:22;;;;;;;;;;;;941:129;:::o;943:192:9:-;1015:4;1059:1;1040:21;;:7;:21;;;;1032:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1107:4;:11;;:20;1119:7;1107:20;;;;;;;;;;;;;;;;;;;;;;;;;1100:27;;943:192;;;;:::o;752:124:11:-;810:21;823:7;810:8;:12;;:21;;;;:::i;:::-;860:7;847:21;;;;;;;;;;;;752:124;:::o;2051:216:14:-;2145:1;2125:22;;:8;:22;;;;2117:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2222:8;2193:38;;2214:6;;;;;;;;;;;2193:38;;;;;;;;;;;;2251:8;2242:6;;:17;;;;;;;;;;;;;;;;;;2051:216;:::o;273:246:9:-;369:1;350:21;;:7;:21;;;;342:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:18;423:4;429:7;419:3;:18::i;:::-;418:19;410:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:4;484;:11;;:20;496:7;484:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;273:246;;:::o;598:251::-;697:1;678:21;;:7;:21;;;;670:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:18;750:4;756:7;746:3;:18::i;:::-;738:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:5;813:4;:11;;:20;825:7;813:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;598:251;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./token/ERC20.sol\";\r\nimport \"./access/roles/Spender.sol\";\r\nimport \"./access/roles/Minter.sol\";\r\n\r\n/**\r\n * @title DragonGold\r\n * @dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency\r\n */\r\ncontract DragonGoldERC20 is ERC20, Spender, Minter {\r\n\r\n    /**\r\n    * @dev Function to mint tokens\r\n    * @param to The address that will receive the minted tokens.\r\n    * @param value The amount of tokens to mint.\r\n    * @return A boolean that indicates if the operation was successful.\r\n    */\r\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\r\n        _mint(to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @dev Burns a specific amount of tokens from the target address and decrements allowance\r\n    * @param from address The address which you want to send tokens from\r\n    * @param value uint256 The amount of token to be burned\r\n    */\r\n    function spendFrom(address from, uint256 value) public onlySpender {\r\n        _burn(from, value);\r\n    }\r\n}\r\n",
  "sourcePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/DragonGoldERC20.sol",
  "ast": {
    "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/DragonGoldERC20.sol",
    "exportedSymbols": {
      "DragonGoldERC20": [
        2246
      ]
    },
    "id": 2247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2202,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2203,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 3277,
        "src": "27:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/access/roles/Spender.sol",
        "file": "./access/roles/Spender.sol",
        "id": 2204,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2551,
        "src": "56:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/access/roles/Minter.sol",
        "file": "./access/roles/Minter.sol",
        "id": 2205,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2453,
        "src": "94:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2206,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3276,
              "src": "289:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3276",
                "typeString": "contract ERC20"
              }
            },
            "id": 2207,
            "nodeType": "InheritanceSpecifier",
            "src": "289:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2208,
              "name": "Spender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2550,
              "src": "296:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Spender_$2550",
                "typeString": "contract Spender"
              }
            },
            "id": 2209,
            "nodeType": "InheritanceSpecifier",
            "src": "296:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2210,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2452,
              "src": "305:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$2452",
                "typeString": "contract Minter"
              }
            },
            "id": 2211,
            "nodeType": "InheritanceSpecifier",
            "src": "305:6:8"
          }
        ],
        "contractDependencies": [
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "contractKind": "contract",
        "documentation": "@title DragonGold\n@dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
        "fullyImplemented": true,
        "id": 2246,
        "linearizedBaseContracts": [
          2246,
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "name": "DragonGoldERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "637:57:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "654:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2224,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2215,
                        "src": "658:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2222,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "648:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "648:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "682:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2221,
                  "id": 2228,
                  "nodeType": "Return",
                  "src": "675:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2217,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "611:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "611:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2213,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "577:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "589:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "576:27:8"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "631:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "630:6:8"
            },
            "scope": 2246,
            "src": "563:131:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "1016:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1033:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2241,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1039:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "1027:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:18:8"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2236,
                  "name": "onlySpender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "1004:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1004:11:8"
              }
            ],
            "name": "spendFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "968:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "982:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:29:8"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:8"
            },
            "scope": 2246,
            "src": "949:104:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2247,
        "src": "261:795:8"
      }
    ],
    "src": "0:1058:8"
  },
  "legacyAST": {
    "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/DragonGoldERC20.sol",
    "exportedSymbols": {
      "DragonGoldERC20": [
        2246
      ]
    },
    "id": 2247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2202,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2203,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 3277,
        "src": "27:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/access/roles/Spender.sol",
        "file": "./access/roles/Spender.sol",
        "id": 2204,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2551,
        "src": "56:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/access/roles/Minter.sol",
        "file": "./access/roles/Minter.sol",
        "id": 2205,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2453,
        "src": "94:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2206,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3276,
              "src": "289:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3276",
                "typeString": "contract ERC20"
              }
            },
            "id": 2207,
            "nodeType": "InheritanceSpecifier",
            "src": "289:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2208,
              "name": "Spender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2550,
              "src": "296:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Spender_$2550",
                "typeString": "contract Spender"
              }
            },
            "id": 2209,
            "nodeType": "InheritanceSpecifier",
            "src": "296:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2210,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2452,
              "src": "305:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$2452",
                "typeString": "contract Minter"
              }
            },
            "id": 2211,
            "nodeType": "InheritanceSpecifier",
            "src": "305:6:8"
          }
        ],
        "contractDependencies": [
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "contractKind": "contract",
        "documentation": "@title DragonGold\n@dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
        "fullyImplemented": true,
        "id": 2246,
        "linearizedBaseContracts": [
          2246,
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "name": "DragonGoldERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "637:57:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "654:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2224,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2215,
                        "src": "658:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2222,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "648:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "648:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "682:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2221,
                  "id": 2228,
                  "nodeType": "Return",
                  "src": "675:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2217,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "611:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "611:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2213,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "577:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "589:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "576:27:8"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "631:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "630:6:8"
            },
            "scope": 2246,
            "src": "563:131:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "1016:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1033:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2241,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1039:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "1027:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:18:8"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2236,
                  "name": "onlySpender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "1004:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1004:11:8"
              }
            ],
            "name": "spendFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "968:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "982:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:29:8"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:8"
            },
            "scope": 2246,
            "src": "949:104:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2247,
        "src": "261:795:8"
      }
    ],
    "src": "0:1058:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-02-25T00:49:04.127Z",
  "devdoc": {
    "details": "ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "spendFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "DragonGold"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}