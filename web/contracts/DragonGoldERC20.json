{
  "contractName": "DragonGoldERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SpenderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SpenderRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSpender",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSpender",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "spendFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405233600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620000dc33620000e2640100000000026401000000009004565b620003d9565b620001068160056200014c6401000000000262001819179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6200020b8282620002dd640100000000026401000000009004565b156200027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611c3180620003e96000396000f3fe608060405234801561001057600080fd5b506004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100ca578063a9059cbb1161008e578063a9059cbb14610545578063aa271e1a146105ab578063dd62ed3e14610607578063e7e31e7a1461067f578063f2fde38b146106c35761013e565b80638f32d59b14610413578063983b2d561461043557806398650275146104795780639a206ece14610483578063a457c2d7146104df5761013e565b806340c10f191161011157806340c10f19146102b35780636aade2881461031957806370a0823114610367578063715018a6146103bf5780638da5cb5b146103c95761013e565b8063095ea7b31461014357806318160ddd146101a957806323b872dd146101c7578063395093511461024d575b600080fd5b61018f6004803603604081101561015957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b604051808215151515815260200191505060405180910390f35b6101b161071e565b6040518082815260200191505060405180910390f35b610233600480360360608110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610728565b604051808215151515815260200191505060405180910390f35b6102996004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d9565b604051808215151515815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087e565b604051808215151515815260200191505060405180910390f35b6103656004803603604081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f2565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095e565b6040518082815260200191505060405180910390f35b6103c76109a6565b005b6103d1610ac4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041b610aee565b604051808215151515815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b46565b005b610481610baf565b005b6104c56004803603602081101561049957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bba565b604051808215151515815260200191505060405180910390f35b61052b600480360360408110156104f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd7565b604051808215151515815260200191505060405180910390f35b6105916004803603604081101561055b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7c565b604051808215151515815260200191505060405180910390f35b6105ed600480360360208110156105c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c93565b604051808215151515815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb0565b6040518082815260200191505060405180910390f35b6106c16004803603602081101561069557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d37565b005b610705600480360360208110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b6000610714338484610e09565b6001905092915050565b6000600254905090565b6000610735848484610f68565b6107ce84336107c985600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b600190509392505050565b6000610874338461086f85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b610e09565b6001905092915050565b600061088933610c93565b6108de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611bcc6031913960400191505060405180910390fd5b6108e88383611209565b6001905092915050565b6108fb33610bba565b610950576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b61095a828261135b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109ae610aee565b610a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b4e610aee565b610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610bac816114ad565b50565b610bb833611507565b565b6000610bd082600461156190919063ffffffff16565b9050919050565b6000610c723384610c6d85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b6001905092915050565b6000610c89338484610f68565b6001905092915050565b6000610ca982600561156190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d3f610aee565b610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610d9d8161165c565b50565b610da8610aee565b610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610e06816116b6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e7d57600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa257600080fd5b610ff3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611b3b603a913960400191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156111ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b156026913960400191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561124357600080fd5b6112588160025461119e90919063ffffffff16565b6002819055506112af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561139557600080fd5b6113aa8160025461113290919063ffffffff16565b600281905550611401816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6114c181600561181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61151b81600561199790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61167081600461181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3139419c41cdd7abca84fa19dd21118cd285d3e2ce1a9444e8161ce9fa62fdcd60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6118c68282611561565b15611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b611a448282611561565b611ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4163636f756e7420646f6573206e6f742068617665207468697320726f6c650081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe726573756c742063616e742062652067726561746572207468616e20706172616d657465727361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e4d757374206861766520746865207370656e64657220726f656c20746f20706572666f726d207468697320616374696f6e4d757374206861766520746865206d696e74657220726f6c657220746f20706572666f726d207468697320616374696f6ea265627a7a72315820eb1d1c6ba90f2631e8ae283fa1b3f842f6895808755aa493ee1ba1888756cd9164736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100ca578063a9059cbb1161008e578063a9059cbb14610545578063aa271e1a146105ab578063dd62ed3e14610607578063e7e31e7a1461067f578063f2fde38b146106c35761013e565b80638f32d59b14610413578063983b2d561461043557806398650275146104795780639a206ece14610483578063a457c2d7146104df5761013e565b806340c10f191161011157806340c10f19146102b35780636aade2881461031957806370a0823114610367578063715018a6146103bf5780638da5cb5b146103c95761013e565b8063095ea7b31461014357806318160ddd146101a957806323b872dd146101c7578063395093511461024d575b600080fd5b61018f6004803603604081101561015957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b604051808215151515815260200191505060405180910390f35b6101b161071e565b6040518082815260200191505060405180910390f35b610233600480360360608110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610728565b604051808215151515815260200191505060405180910390f35b6102996004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d9565b604051808215151515815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087e565b604051808215151515815260200191505060405180910390f35b6103656004803603604081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f2565b005b6103a96004803603602081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095e565b6040518082815260200191505060405180910390f35b6103c76109a6565b005b6103d1610ac4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041b610aee565b604051808215151515815260200191505060405180910390f35b6104776004803603602081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b46565b005b610481610baf565b005b6104c56004803603602081101561049957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bba565b604051808215151515815260200191505060405180910390f35b61052b600480360360408110156104f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd7565b604051808215151515815260200191505060405180910390f35b6105916004803603604081101561055b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7c565b604051808215151515815260200191505060405180910390f35b6105ed600480360360208110156105c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c93565b604051808215151515815260200191505060405180910390f35b6106696004803603604081101561061d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cb0565b6040518082815260200191505060405180910390f35b6106c16004803603602081101561069557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d37565b005b610705600480360360208110156106d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da0565b005b6000610714338484610e09565b6001905092915050565b6000600254905090565b6000610735848484610f68565b6107ce84336107c985600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b600190509392505050565b6000610874338461086f85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b610e09565b6001905092915050565b600061088933610c93565b6108de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611bcc6031913960400191505060405180910390fd5b6108e88383611209565b6001905092915050565b6108fb33610bba565b610950576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611b9b6031913960400191505060405180910390fd5b61095a828261135b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109ae610aee565b610a03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b4e610aee565b610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610bac816114ad565b50565b610bb833611507565b565b6000610bd082600461156190919063ffffffff16565b9050919050565b6000610c723384610c6d85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b610e09565b6001905092915050565b6000610c89338484610f68565b6001905092915050565b6000610ca982600561156190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d3f610aee565b610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610d9d8161165c565b50565b610da8610aee565b610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b756026913960400191505060405180910390fd5b610e06816116b6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e7d57600080fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa257600080fd5b610ff3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611086816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611b3b603a913960400191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156111ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b156026913960400191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561124357600080fd5b6112588160025461119e90919063ffffffff16565b6002819055506112af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561139557600080fd5b6113aa8160025461113290919063ffffffff16565b600281905550611401816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461113290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6114c181600561181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61151b81600561199790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61167081600461181990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3139419c41cdd7abca84fa19dd21118cd285d3e2ce1a9444e8161ce9fa62fdcd60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b6118c68282611561565b15611939576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4163636f756e7420616c726561647920686173207468697320726f6c6500000081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c69642061646472657373206163636f756e7400000000000000000081525060200191505060405180910390fd5b611a448282611561565b611ab6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4163636f756e7420646f6573206e6f742068617665207468697320726f6c650081525060200191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe726573756c742063616e742062652067726561746572207468616e20706172616d657465727361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e4d757374206861766520746865207370656e64657220726f656c20746f20706572666f726d207468697320616374696f6e4d757374206861766520746865206d696e74657220726f6c657220746f20706572666f726d207468697320616374696f6ea265627a7a72315820eb1d1c6ba90f2631e8ae283fa1b3f842f6895808755aa493ee1ba1888756cd9164736f6c63430005110032",
  "sourceMap": "251:774:8:-;;;544:10:14;535:6;;:19;;;;;;;;;;;;;;;;;;602:6;;;;;;;;;;;569:40;;598:1;569:40;;;;;;;;;;;;317:22:10;328:10;317;;;:22;;;:::i;:::-;251:774:8;;778:118:10;834:20;846:7;834;:11;;;;;;:20;;;;;:::i;:::-;881:7;869:20;;;;;;;;;;;;778:118;:::o;259:241:9:-;354:1;335:21;;:7;:21;;;;327:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:18;407:4;413:7;403:3;;;:18;;;:::i;:::-;402:19;394:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:4;466;:11;;:20;478:7;466:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:241;;:::o;908:189::-;980:4;1023:1;1004:21;;:7;:21;;;;996:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:4;:11;;:20;1082:7;1070:20;;;;;;;;;;;;;;;;;;;;;;;;;1063:27;;908:189;;;;:::o;251:774:8:-;;;;;;;",
  "deployedSourceMap": "251:774:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:774:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:145:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2742:145:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;935:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3350:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3350:224:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4077:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4077:200:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;545:128:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;545:128:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;921:102;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;921:102:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1237:104:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1237:104:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1417:137:14;;;:::i;:::-;;681:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1044:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;602:89:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;602:89:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;697:75;;;:::i;:::-;;429:108:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;429:108:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4785:210:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4785:210:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1969:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1969:137:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;490:106:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;490:106:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1672:129:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1672:129:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;543:91:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:91:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1728:107:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1728:107:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;2742:145:16;2807:4;2823:36;2832:10;2844:7;2853:5;2823:8;:36::i;:::-;2876:4;2869:11;;2742:145;;;;:::o;935:89::-;979:7;1005:12;;998:19;;935:89;:::o;3350:224::-;3429:4;3445:26;3455:4;3461:2;3465:5;3445:9;:26::i;:::-;3481:65;3490:4;3496:10;3508:37;3539:5;3508:8;:14;3517:4;3508:14;;;;;;;;;;;;;;;:26;3523:10;3508:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3481:8;:65::i;:::-;3563:4;3556:11;;3350:224;;;;;:::o;4077:200::-;4157:4;4173:76;4182:10;4194:7;4203:45;4237:10;4203:8;:20;4212:10;4203:20;;;;;;;;;;;;;;;:29;4224:7;4203:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4173:8;:76::i;:::-;4266:4;4259:11;;4077:200;;;;:::o;545:128:8:-;613:4;392:20:10;401:10;392:8;:20::i;:::-;384:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:16:8;635:2;639:5;629;:16::i;:::-;662:4;655:11;;545:128;;;;:::o;921:102::-;330:21:11;340:10;330:9;:21::i;:::-;322:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:18:8;1004:4;1010:5;998;:18::i;:::-;921:102;;:::o;1237:104:16:-;1292:7;1318:9;:16;1328:5;1318:16;;;;;;;;;;;;;;;;1311:23;;1237:104;;;:::o;1417:137:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1515:1;1478:40;;1499:6;;;;;;;;;;;1478:40;;;;;;;;;;;;1545:1;1528:6;;:19;;;;;;;;;;;;;;;;;;1417:137::o;681:76::-;718:7;744:6;;;;;;;;;;;737:13;;681:76;:::o;1044:90::-;1084:4;1121:6;;;;;;;;;;;1107:20;;:10;:20;;;1100:27;;1044:90;:::o;602:89:10:-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:19:10;676:7;665:10;:19::i;:::-;602:89;:::o;697:75::-;740:25;754:10;740:13;:25::i;:::-;697:75::o;429:108:11:-;486:4;509:21;522:7;509:8;:12;;:21;;;;:::i;:::-;502:28;;429:108;;;:::o;4785:210:16:-;4870:4;4886:81;4895:10;4907:7;4916:50;4950:15;4916:8;:20;4925:10;4916:20;;;;;;;;;;;;;;;:29;4937:7;4916:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4886:8;:81::i;:::-;4984:4;4977:11;;4785:210;;;;:::o;1969:137::-;2030:4;2046:32;2056:10;2068:2;2072:5;2046:9;:32::i;:::-;2095:4;2088:11;;1969:137;;;;:::o;490:106:10:-;546:4;569:20;581:7;569;:11;;:20;;;;:::i;:::-;562:27;;490:106;;;:::o;1672:129:16:-;1744:7;1770:8;:15;1779:5;1770:15;;;;;;;;;;;;;;;:24;1786:7;1770:24;;;;;;;;;;;;;;;;1763:31;;1672:129;;;;:::o;543:91:11:-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:20:11;619:7;607:11;:20::i;:::-;543:91;:::o;1728:107:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:28;1819:8;1800:18;:28::i;:::-;1728:107;:::o;6830:248:16:-;6941:1;6922:21;;:7;:21;;;;6914:30;;;;;;6979:1;6962:19;;:5;:19;;;;6954:28;;;;;;7020:5;6993:8;:15;7002:5;6993:15;;;;;;;;;;;;;;;:24;7009:7;6993:24;;;;;;;;;;;;;;;:32;;;;7056:7;7040:31;;7049:5;7040:31;;;7065:5;7040:31;;;;;;;;;;;;;;;;;;6830:248;;;:::o;5214:256::-;5315:1;5301:16;;:2;:16;;;;5293:25;;;;;;5347:26;5367:5;5347:9;:15;5357:4;5347:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5329:9;:15;5339:4;5329:15;;;;;;;;;;;;;;;:44;;;;5399:24;5417:5;5399:9;:13;5409:2;5399:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5383:9;:13;5393:2;5383:13;;;;;;;;;;;;;;;:40;;;;5453:2;5438:25;;5447:4;5438:25;;;5457:5;5438:25;;;;;;;;;;;;;;;;;;5214:256;;;:::o;1235:207:13:-;1293:7;1325:1;1320;:6;;1312:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:9;1415:1;1411;:5;1399:17;;1434:1;1427:8;;;1235:207;;;;:::o;1525:187::-;1583:7;1602:9;1618:1;1614;:5;1602:17;;1642:1;1637;:6;;1629:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:1;1697:8;;;1525:187;;;;:::o;5813:263:16:-;5906:1;5887:21;;:7;:21;;;;5879:30;;;;;;5935:23;5952:5;5935:12;;:16;;:23;;;;:::i;:::-;5920:12;:38;;;;5989:29;6012:5;5989:9;:18;5999:7;5989:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5968:9;:18;5978:7;5968:18;;;;;;;;;;;;;;;:50;;;;6054:7;6033:36;;6050:1;6033:36;;;6063:5;6033:36;;;;;;;;;;;;;;;;;;5813:263;;:::o;6302:::-;6395:1;6376:21;;:7;:21;;;;6368:30;;;;;;6424:23;6441:5;6424:12;;:16;;:23;;;;:::i;:::-;6409:12;:38;;;;6478:29;6501:5;6478:9;:18;6488:7;6478:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6457:9;:18;6467:7;6457:18;;;;;;;;;;;;;;;:50;;;;6548:1;6522:36;;6531:7;6522:36;;;6552:5;6522:36;;;;;;;;;;;;;;;;;;6302:263;;:::o;778:118:10:-;834:20;846:7;834;:11;;:20;;;;:::i;:::-;881:7;869:20;;;;;;;;;;;;778:118;:::o;902:126::-;961:23;976:7;961;:14;;:23;;;;:::i;:::-;1013:7;999:22;;;;;;;;;;;;902:126;:::o;908:189:9:-;980:4;1023:1;1004:21;;:7;:21;;;;996:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:4;:11;;:20;1082:7;1070:20;;;;;;;;;;;;;;;;;;;;;;;;;1063:27;;908:189;;;;:::o;722:121:11:-;779:21;792:7;779:8;:12;;:21;;;;:::i;:::-;828:7;815:21;;;;;;;;;;;;722:121;:::o;1982:212:14:-;2075:1;2055:22;;:8;:22;;;;2047:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:8;2122:38;;2143:6;;;;;;;;;;;2122:38;;;;;;;;;;;;2179:8;2170:6;;:17;;;;;;;;;;;;;;;;;;1982:212;:::o;259:241:9:-;354:1;335:21;;:7;:21;;;;327:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:18;407:4;413:7;403:3;:18::i;:::-;402:19;394:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:4;466;:11;;:20;478:7;466:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:241;;:::o;574:246::-;672:1;653:21;;:7;:21;;;;645:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:18;724:4;730:7;720:3;:18::i;:::-;712:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;808:5;785:4;:11;;:20;797:7;785:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;574:246;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./token/ERC20.sol\";\nimport \"./access/roles/Spender.sol\";\nimport \"./access/roles/Minter.sol\";\n\n/**\n * @title DragonGold\n * @dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency\n */\ncontract DragonGoldERC20 is ERC20, Spender, Minter {\n\n    /**\n    * @dev Function to mint tokens\n    * @param to The address that will receive the minted tokens.\n    * @param value The amount of tokens to mint.\n    * @return A boolean that indicates if the operation was successful.\n    */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n    /**\n    * @dev Burns a specific amount of tokens from the target address and decrements allowance\n    * @param from address The address which you want to send tokens from\n    * @param value uint256 The amount of token to be burned\n    */\n    function spendFrom(address from, uint256 value) public onlySpender {\n        _burn(from, value);\n    }\n}\n",
  "sourcePath": "/usr/src/app/contractGetter/contracts/common/DragonGoldERC20.sol",
  "ast": {
    "absolutePath": "/usr/src/app/contractGetter/contracts/common/DragonGoldERC20.sol",
    "exportedSymbols": {
      "DragonGoldERC20": [
        2246
      ]
    },
    "id": 2247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2202,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2203,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 3277,
        "src": "25:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/access/roles/Spender.sol",
        "file": "./access/roles/Spender.sol",
        "id": 2204,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2551,
        "src": "53:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/access/roles/Minter.sol",
        "file": "./access/roles/Minter.sol",
        "id": 2205,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2453,
        "src": "90:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2206,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3276,
              "src": "279:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3276",
                "typeString": "contract ERC20"
              }
            },
            "id": 2207,
            "nodeType": "InheritanceSpecifier",
            "src": "279:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2208,
              "name": "Spender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2550,
              "src": "286:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Spender_$2550",
                "typeString": "contract Spender"
              }
            },
            "id": 2209,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2210,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2452,
              "src": "295:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$2452",
                "typeString": "contract Minter"
              }
            },
            "id": 2211,
            "nodeType": "InheritanceSpecifier",
            "src": "295:6:8"
          }
        ],
        "contractDependencies": [
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "contractKind": "contract",
        "documentation": "@title DragonGold\n@dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
        "fullyImplemented": true,
        "id": 2246,
        "linearizedBaseContracts": [
          2246,
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "name": "DragonGoldERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "619:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "635:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2224,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2215,
                        "src": "639:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2222,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "629:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "629:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "662:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2221,
                  "id": 2228,
                  "nodeType": "Return",
                  "src": "655:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2217,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "593:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "593:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2213,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "559:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "571:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:27:8"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "613:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:6:8"
            },
            "scope": 2246,
            "src": "545:128:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "988:35:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1004:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2241,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "998:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "998:18:8"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2236,
                  "name": "onlySpender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "976:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "976:11:8"
              }
            ],
            "name": "spendFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "940:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "954:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:29:8"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:8"
            },
            "scope": 2246,
            "src": "921:102:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2247,
        "src": "251:774:8"
      }
    ],
    "src": "0:1026:8"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/contractGetter/contracts/common/DragonGoldERC20.sol",
    "exportedSymbols": {
      "DragonGoldERC20": [
        2246
      ]
    },
    "id": 2247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2202,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/token/ERC20.sol",
        "file": "./token/ERC20.sol",
        "id": 2203,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 3277,
        "src": "25:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/access/roles/Spender.sol",
        "file": "./access/roles/Spender.sol",
        "id": 2204,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2551,
        "src": "53:36:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/access/roles/Minter.sol",
        "file": "./access/roles/Minter.sol",
        "id": 2205,
        "nodeType": "ImportDirective",
        "scope": 2247,
        "sourceUnit": 2453,
        "src": "90:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2206,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3276,
              "src": "279:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3276",
                "typeString": "contract ERC20"
              }
            },
            "id": 2207,
            "nodeType": "InheritanceSpecifier",
            "src": "279:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2208,
              "name": "Spender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2550,
              "src": "286:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Spender_$2550",
                "typeString": "contract Spender"
              }
            },
            "id": 2209,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2210,
              "name": "Minter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2452,
              "src": "295:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Minter_$2452",
                "typeString": "contract Minter"
              }
            },
            "id": 2211,
            "nodeType": "InheritanceSpecifier",
            "src": "295:6:8"
          }
        ],
        "contractDependencies": [
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "contractKind": "contract",
        "documentation": "@title DragonGold\n@dev ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
        "fullyImplemented": true,
        "id": 2246,
        "linearizedBaseContracts": [
          2246,
          2452,
          2550,
          2842,
          3276,
          4247
        ],
        "name": "DragonGoldERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "619:54:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2223,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "635:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2224,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2215,
                        "src": "639:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2222,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "629:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "629:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "662:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2221,
                  "id": 2228,
                  "nodeType": "Return",
                  "src": "655:11:8"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2218,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2217,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2385,
                  "src": "593:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "593:10:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2213,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "559:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "571:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:27:8"
            },
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "613:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:6:8"
            },
            "scope": 2246,
            "src": "545:128:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2244,
              "nodeType": "Block",
              "src": "988:35:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1004:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2241,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "998:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2243,
                  "nodeType": "ExpressionStatement",
                  "src": "998:18:8"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 2245,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2236,
                  "name": "onlySpender",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2483,
                  "src": "976:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "976:11:8"
              }
            ],
            "name": "spendFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "940:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2245,
                  "src": "954:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:29:8"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:8"
            },
            "scope": 2246,
            "src": "921:102:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2247,
        "src": "251:774:8"
      }
    ],
    "src": "0:1026:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-07-04T20:38:31.775Z",
  "devdoc": {
    "details": "ERC20 with minting and burning logic so that it can be used as ingame virtual currency",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "spendFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "DragonGold"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}