{
  "contractName": "MainnetTransferableDragon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "blockchainId",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dragonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "NewDragon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "_creationTime",
          "type": "uint64"
        },
        {
          "internalType": "uint32",
          "name": "_dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_motherId",
          "type": "uint32"
        }
      ],
      "name": "createDragon",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dragonIndexToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonById",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "motherId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentExperience",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "health",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "strength",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "agility",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "fortitude",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsCountByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsIdsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getParents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "motherId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getVisualAttributes",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "head",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "body",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "wings",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "isEgg",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "genesLaboratoryAddress",
          "type": "address"
        }
      ],
      "name": "setGenesLaboratoryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensIdsOwnedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        }
      ],
      "name": "setGatewayAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "retrieveToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "undoMapping",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "mapContractToSidechain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "isMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferToGateway",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610239576000357c01000000000000000000000000000000000000000000000000000000009004806370a0823111610142578063b1b0473c116100ca578063d9b6e2f711610099578063d9b6e2f714610ed4578063dfd4e4a414610f2c578063e985e9c514610f72578063f2fde38b14610fee578063fe55932a1461103257610239565b8063b1b0473c14610ca8578063b88d4fde14610cea578063bef36c4914610def578063c9cf557014610e1d57610239565b80638f32d59b116101115780638f32d59b14610b4a57806398ae481d14610b6c578063a22cb46514610bb0578063a35ff07614610c00578063a8def88014610c4457610239565b806370a0823114610a05578063715018a614610a5d5780638da5cb5b14610a675780638ec251c314610ab157610239565b806323b872dd116101c55780634f6ccce7116101945780634f6ccce7146107be578063520104dc146108005780635d64aa68146108445780636352211e146108b25780636fbb70451461092057610239565b806323b872dd14610637578063242a0087146106a55780632f745c59146106ee57806342842e0e1461075057610239565b80630b4cb5271161020c5780630b4cb527146103f85780630d6dd812146104e75780631407b5001461054357806318160ddd146105b15780632014a8be146105cf57610239565b806301ffc9a71461023e5780630469e8ac146102a3578063081812fc1461033c578063095ea7b3146103aa575b600080fd5b6102896004803603602081101561025457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506110b5565b604051808215151515815260200191505060405180910390f35b6102e5600480360360208110156102b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061111c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561032857808201518184015260208101905061030d565b505050509050019250505060405180910390f35b6103686004803603602081101561035257600080fd5b81019080803590602001909291905050506111b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f6600480360360408110156103c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611202565b005b6104e56004803603608081101561040e57600080fd5b810190808035906020019064010000000081111561042b57600080fd5b82018360208201111561043d57600080fd5b8035906020019184600183028401116401000000008311171561045f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803567ffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190505050611343565b005b610529600480360360208110156104fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114eb565b604051808215151515815260200191505060405180910390f35b61056f6004803603602081101561055957600080fd5b8101908080359060200190929190505050611624565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105b9611636565b6040518082815260200191505060405180910390f35b6105fb600480360360208110156105e557600080fd5b8101908080359060200190929190505050611643565b604051808461ffff1661ffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff168152602001935050505060405180910390f35b6106a36004803603606081101561064d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061175c565b005b6106d1600480360360208110156106bb57600080fd5b81019080803590602001909291905050506117cb565b604051808381526020018281526020019250505060405180910390f35b61073a6004803603604081101561070457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611833565b6040518082815260200191505060405180910390f35b6107bc6004803603606081101561076657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118a6565b005b6107ea600480360360208110156107d457600080fd5b81019080803590602001909291905050506118c6565b6040518082815260200191505060405180910390f35b6108426004803603602081101561081657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118fa565b005b6108706004803603602081101561085a57600080fd5b8101908080359060200190929190505050611ae5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108de600480360360208110156108c857600080fd5b8101908080359060200190929190505050611b18565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a036004803603606081101561093657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561097d57600080fd5b82018360208201111561098f57600080fd5b803590602001918460018302840111640100000000831117156109b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b94565b005b610a4760048036036020811015610a1b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cd0565b6040518082815260200191505060405180910390f35b610a65611dc2565b005b610a6f611ee0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610af360048036036020811015610ac757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f0a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b36578082015181840152602081019050610b1b565b505050509050019250505060405180910390f35b610b52612044565b604051808215151515815260200191505060405180910390f35b610bae60048036036020811015610b8257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061209c565b005b610bfe60048036036040811015610bc657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506121c3565b005b610c4260048036036020811015610c1657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122fd565b005b610ca660048036036040811015610c5a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612424565b005b610cd460048036036020811015610cbe57600080fd5b810190808035906020019092919050505061260f565b6040518082815260200191505060405180910390f35b610ded60048036036080811015610d0057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610d6757600080fd5b820183602082011115610d7957600080fd5b80359060200191846001830284011164010000000083111715610d9b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612637565b005b610e1b60048036036020811015610e0557600080fd5b81019080803590602001909291905050506126a9565b005b610e4960048036036020811015610e3357600080fd5b8101908080359060200190929190505050612cd7565b604051808981526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018561ffff1661ffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff1681526020019850505050505050505060405180910390f35b610f1660048036036020811015610eea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612dae565b6040518082815260200191505060405180910390f35b610f5860048036036020811015610f4257600080fd5b8101908080359060200190929190505050612dc0565b604051808215151515815260200191505060405180910390f35b610fd460048036036040811015610f8857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e2e565b604051808215151515815260200191505060405180910390f35b6110306004803603602081101561100457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ec2565b005b6110b36004803603604081101561104857600080fd5b81019080803590602001909291908035906020019064010000000081111561106f57600080fd5b82018360208201111561108157600080fd5b803590602001918460018302840111640100000000831117156110a357600080fd5b9091929391929390505050612f2b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156111a757602002820191906000526020600020905b815481526020019060010190808311611193575b50505050509050919050565b60006111be826130d0565b6111c757600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061120d82611b18565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561124857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061128857506112878133612e2e565b5b61129157600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000806000806000806000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663355916a46040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160e060405180830381600087803b1580156113d457600080fd5b505af11580156113e8573d6000803e3d6000fd5b505050506040513d60e08110156113fe57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050965096509650965096509650965060006114648c613142565b9050600061148d89838e8e8e60008a8f8f8f8f8e600c60009054906101000a900460ff1661316e565b90506114993382613407565b7f3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f818a60019004604051808381526020018281526020019250505060405180910390a150505050505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c69642073696465636861696e20616464726573730000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061162f82611b18565b9050919050565b6000600780549050905090565b600080600080600a858154811061165657fe5b90600052602060002090600402019050601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391926cff82600001546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060606040518083038186803b1580156116f957600080fd5b505afa15801561170d573d6000803e3d6000fd5b505050506040513d606081101561172357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050809450819550829650505050509193909250565b6117663382613428565b6117bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806157f96032913960400191505060405180910390fd5b6117c68383836134bd565b505050565b6000806000600a84815481106117dd57fe5b9060005260206000209060040201905080600201600c9054906101000a900463ffffffff168160020160089054906101000a900463ffffffff168163ffffffff1691508063ffffffff1690509250925050915091565b600061183e83611cd0565b821061184957600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061189357fe5b9060005260206000200154905092915050565b6118c183838360405180602001604052806000815250612637565b505050565b60006118d0611636565b82106118db57600080fd5b600782815481106118e857fe5b90600052602060002001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061593c6026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806158756039913960400191505060405180910390fd5b80601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b8b57600080fd5b80915050919050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061590b6031913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806157556022913960400191505060405180910390fd5b611ccb8383836134e1565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b611dbb600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061364d565b9050919050565b611dca612044565b611e1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157b16026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611faf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561203857602002820191906000526020600020905b815481526020019060010190808311612024575b50505050509050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6120a4612044565b6120f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157b16026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561217f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806158ae6021913960400191505060405180910390fd5b80601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121fc57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b612305612044565b61235a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157b16026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806158526023913960400191505060405180910390fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61242c612044565b612481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157b16026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806157d76022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561258d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061593c6026913960400191505060405180910390fd5b80601260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600a828154811061261e57fe5b9060005260206000209060040201600101549050919050565b61264284848461175c565b61264e8484848461365b565b6126a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806158cf603c913960400191505060405180910390fd5b50505050565b803373ffffffffffffffffffffffffffffffffffffffff166126ca82611b18565b73ffffffffffffffffffffffffffffffffffffffff1614612753576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f596f7520646f6e2774206f776e207468697320647261676f6e0000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061598a6033913960400191505060405180910390fd5b600a8054905082106128b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420746f6b656e2049640000000000000000000000000000000081525060200191505060405180910390fd5b6000600a83815481106128c157fe5b906000526020600020906004020190506060612a7d82604051806101a001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160028201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160149054906101000a900461ffff1661ffff1661ffff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681526020016002820160189054906101000a900461ffff1661ffff1661ffff16815260200160028201601a9054906101000a900461ffff1661ffff1661ffff16815260200160028201601c9054906101000a900461ffff1661ffff1661ffff16815260200160028201601e9054906101000a900461ffff1661ffff1661ffff1681526020016003820160009054906101000a900460ff1660ff1660ff168152505061387c565b9050612aac33601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168661175c565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600c60009054906101000a900460ff1660ff168460030160009054906101000a900460ff1660ff1614612b1057612b0b866140f8565b612b12565b855b90508173ffffffffffffffffffffffffffffffffffffffff16632492fbeb33601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c68578082015181840152602081019050612c4d565b50505050905090810190601f168015612c955780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015612cb757600080fd5b505af1158015612ccb573d6000803e3d6000fd5b50505050505050505050565b6000806000806000806000806000600a8a81548110612cf257fe5b90600052602060002090600402019050806001015498508060020160089054906101000a900463ffffffff16975080600201600c9054906101000a900463ffffffff1696508060020160109054906101000a900463ffffffff1695508060020160169054906101000a900461ffff1694508060020160189054906101000a900461ffff16935080600201601a9054906101000a900461ffff16925080600201601c9054906101000a900461ffff16915050919395975091939597565b6000612db982611cd0565b9050919050565b600080600a8381548110612dd057fe5b906000526020600020906004020190506000603c8260020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16420302905081600201601e9054906101000a900461ffff1661ffff16811092505050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612eca612044565b612f1f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806157b16026913960400191505060405180910390fd5b612f2881614115565b50565b823373ffffffffffffffffffffffffffffffffffffffff16612f4c82611b18565b73ffffffffffffffffffffffffffffffffffffffff1614612fd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f596f7520646f6e2774206f776e207468697320647261676f6e0000000000000081525060200191505060405180910390fd5b6000600a8581548110612fe457fe5b90600052602060002090600402019050600061304385858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050613142565b905060006001028114156130bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f456d707479206e616d657320617265206e6f742061636365707461626c65000081525060200191505060405180910390fd5b808260010181905550505050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006060829050600081511415613160576000600102915050613169565b60208301519150505b919050565b60006001600a604051806101a0016040528060006001028152602001600060010281526020018f67ffffffffffffffff1681526020018e63ffffffff1681526020018d63ffffffff1681526020018c63ffffffff1681526020018b61ffff1681526020018a61ffff1681526020018961ffff1681526020018861ffff1681526020018761ffff1681526020018661ffff1681526020018560ff1681525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160020160086101000a81548163ffffffff021916908363ffffffff160217905550608082015181600201600c6101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160020160106101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160020160146101000a81548161ffff021916908361ffff16021790555060e08201518160020160166101000a81548161ffff021916908361ffff1602179055506101008201518160020160186101000a81548161ffff021916908361ffff16021790555061012082015181600201601a6101000a81548161ffff021916908361ffff16021790555061014082015181600201601c6101000a81548161ffff021916908361ffff16021790555061016082015181600201601e6101000a81548161ffff021916908361ffff1602179055506101808201518160030160006101000a81548160ff021916908360ff16021790555050500390506133f6818f8f614278565b9d9c50505050505050505050505050565b61341182826142af565b61341b82826143a8565b6134248161446f565b5050565b60008061343483611b18565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806134a357508373ffffffffffffffffffffffffffffffffffffffff1661348b846111b3565b73ffffffffffffffffffffffffffffffffffffffff16145b806134b457506134b38185612e2e565b5b91505092915050565b6134c88383836144bb565b6134d28382614716565b6134dc82826143a8565b505050565b60006134ec826148b4565b90506000600c60009054906101000a900460ff1660ff168260ff16149050801561354d5761353e601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868686612637565b6135488484614937565b613646565b60001515600f600086815260200190815260200160002060009054906101000a900460ff16151514156135f35760006135858461499e565b905080600d60008781526020019081526020016000208190555084600e6000838152602001908152602001600020819055506001600f600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506135ed8682613407565b50613645565b6000600d6000868152602001908152602001600020549050613639601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878387612637565b6136438185614937565b505b5b5050505050565b600081600001549050919050565b600061367c8473ffffffffffffffffffffffffffffffffffffffff16614a0f565b6136895760019050613874565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613780578082015181840152602081019050613765565b50505050905090810190601f1680156137ad5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156137cf57600080fd5b505af11580156137e3573d6000803e3d6000fd5b505050506040513d60208110156137f957600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60606000606190506060816040519080825280601f01601f1916602001820160405280156138b95781602001600182028038833980820191505090505b509050600080905060008090505b602081101561395357856000015181602081106138e057fe5b1a7f01000000000000000000000000000000000000000000000000000000000000000283838151811061390f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506138c7565b5060008090505b60208110156139e6578560200151816020811061397357fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028383815181106139a257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050808060010191505061395a565b5060008090505b6008811015613a8e5760ff63ffffffff168160080216866040015167ffffffffffffffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613a4a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506139ed565b5060008090505b6004811015613b325760ff63ffffffff168160080216866060015163ffffffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613aee57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613a95565b5060008090505b6004811015613bd65760ff63ffffffff168160080216866080015163ffffffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613b9257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613b39565b5060008090505b6004811015613c7a5760ff63ffffffff1681600802168660a0015163ffffffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613c3657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613bdd565b5060008090505b6002811015613d1c5760ff63ffffffff1681600802168660c0015161ffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613cd857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613c81565b5060008090505b6002811015613dbe5760ff63ffffffff1681600802168660e0015161ffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613d7a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613d23565b5060008090505b6002811015613e615760ff63ffffffff16816008021686610100015161ffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613e1d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613dc5565b5060008090505b6002811015613f045760ff63ffffffff16816008021686610120015161ffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613ec057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613e68565b5060008090505b6002811015613fa75760ff63ffffffff16816008021686610140015161ffff16908060020a82049150507f010000000000000000000000000000000000000000000000000000000000000002838381518110613f6357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613f0b565b5060008090505b600281101561404a5760ff63ffffffff16816008021686610160015161ffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061400657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613fae565b5060008090505b60018110156140ec5760ff63ffffffff16816008021686610180015160ff16908060020a82049150507f0100000000000000000000000000000000000000000000000000000000000000028383815181106140a857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050614051565b50819350505050919050565b6000600e6000838152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156141b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600a848154811061428757fe5b9060005260206000209060040201905082816000018190555081816001018190555050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614348600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614a22565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8273ffffffffffffffffffffffffffffffffffffffff166144db82611b18565b73ffffffffffffffffffffffffffffffffffffffff1614614547576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806159626028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156145cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061582b6027913960400191505060405180910390fd5b6145d681614a38565b61461d600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614af6565b614664600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614a22565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061476e6001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050614b1990919063ffffffff16565b905060006006600084815260200190815260200160002054905081811461485b576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106147db57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061483357fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036148ad9190615703565b5050505050565b6000816060815181106148c357fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090049050919050565b60008060008060008061494987614b85565b95509550955095509550955060008060008060008060006149698e614f7d565b965096509650965096509650965061498d8f8e8e8e8e8e8e8e8e8e8e8e8e8e615480565b505050505050505050505050505050565b60008060008060008060006149b288614b85565b95509550955095509550955060008060008060008060006149d28f614f7d565b965096509650965096509650965060006149f78e8e8e8e8e8e8e8e8e8e8e8e8e61316e565b9050809e505050505050505050505050505050919050565b600080823b905060008111915050919050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614af35760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b614b0e60018260000154614b1990919063ffffffff16565b816000018190555050565b600082821115614b74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180615777603a913960400191505060405180910390fd5b600082840390508091505092915050565b600080600080600080600080905060008090505b6020811015614c68576008810260ff7f0100000000000000000000000000000000000000000000000000000000000000028a83850181518110614bd857fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908060020a82049150508817975081806001019250508080600101915050614b99565b50614c73888261562d565b955060208101905060008090505b6008811015614d3b576000898381518110614c9857fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028167ffffffffffffffff169060020a02905080871896508280600101935050508080600101915050614c81565b5060008090505b6004811015614df8576000898381518110614d5957fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a02905080861895508280600101935050508080600101915050614d42565b5060008090505b6004811015614eb5576000898381518110614e1657fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a02905080851894508280600101935050508080600101915050614dff565b5060008090505b6004811015614f72576000898381518110614ed357fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a02905080841893508280600101935050508080600101915050614ebc565b505091939550919395565b6000806000806000806000806054905060008090505b60028110156150475760008a8381518110614faa57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a029050808a1899508280600101935050508080600101915050614f93565b5060008090505b60028110156151025760008a838151811061506557fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a0290508089189850828060010193505050808060010191505061504e565b5060008090505b60028110156151bd5760008a838151811061512057fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080881897508280600101935050508080600101915050615109565b5060008090505b60028110156152785760008a83815181106151db57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a029050808718965082806001019350505080806001019150506151c4565b5060008090505b60028110156153335760008a838151811061529657fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a0290508086189550828060010193505050808060010191505061527f565b5060008090505b60028110156153ee5760008a838151811061535157fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a0290508085189450828060010193505050808060010191505061533a565b508881815181106153fb57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900482189150808060010191505050919395979092949650565b6000600a8f8154811061548f57fe5b906000526020600020906004020190508d81600001819055508c81600101819055508b8160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508a8160020160086101000a81548163ffffffff021916908363ffffffff1602179055508981600201600c6101000a81548163ffffffff021916908363ffffffff160217905550888160020160106101000a81548163ffffffff021916908363ffffffff160217905550878160020160146101000a81548161ffff021916908361ffff160217905550868160020160166101000a81548161ffff021916908361ffff160217905550858160020160186101000a81548161ffff021916908361ffff1602179055508481600201601a6101000a81548161ffff021916908361ffff1602179055508381600201601c6101000a81548161ffff021916908361ffff1602179055508281600201601e6101000a81548161ffff021916908361ffff160217905550818160030160006101000a81548160ff021916908360ff160217905550505050505050505050505050505050565b600080600090505b60208110156156fc576008810260ff7f010000000000000000000000000000000000000000000000000000000000000002858386018151811061567457fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908060020a8204915050821791508080600101915050615635565b5092915050565b81548183558181111561572a57818360005260206000209182019101615729919061572f565b5b505050565b61575191905b8082111561574d576000816000905550600101615735565b5090565b9056fe52656365697665722073686f756c6420626520612076616c6964206164647265737361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e496e76616c6964206f776e6572206164647265737320746f206265206d617070656453656e64657220646f65736e2774206f776e207468697320746f6b656e206f72206861766520726967687473206f6e206974496e76616c696420616464726573732e204572726f72207472616e73666572696320746f6b656e676174657761792073686f756c64206861766520612076616c696420616464726573734164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67616464726573732073686f756c64206861766520612076616c69642076616c7565546172676574206164647265737320646f6573206e6f7420696d706c656d656e74206f6e455243373231526563656976656420696e746572666163656f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e496e76616c69642073696465636861696e206164647265737320746f206265206d617070656453656e64657220646f65736e74206f776e20746f6b656e20746f206265207472616e736665726564426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573a265627a7a72315820b9f06ada1c4937e885502334b4b65e65faf4e7d6e6447280f04680e8bd71729464736f6c63430005110032",
  "sourceMap": "189:2579:33:-;;;869:1:7;838:32;;;;;;;;;;;;;;;;;;;;366:95:33;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:95:33;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;366:95:33;;;;;;;;;;;;;;;;;;;;;;;;;429:7;438:12;639:40:15;236:10;658:20;;639:18;;;:40;;;:::i;:::-;1965::17;1222:10;1984:20;;1965:18;;;:40;;;:::i;:::-;1223:51:18;839:10;1242:31;;1223:18;;;:51;;;:::i;:::-;544:10:14;535:6;;:19;;;;;;;;;;;;;;;;;;602:6;;;;;;;;;;;569:40;;598:1;569:40;;;;;;;;;;;;1416:1:7;1397:21;;:7;:21;;;;1389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:7;1450:8;;:18;;;;;;;;;;;;;;;;;;1488:12;1472:13;;:28;;;;;;;;;;;;;;;;;;1316:188;;366:95:33;;189:2579;;989:158:15;1079:10;1064:25;;:11;:25;;;;;1056:34;;;;;;1136:4;1100:20;:33;1121:11;1100:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;989:158;:::o;189:2579:33:-;;;;;;;",
  "deployedSourceMap": "189:2579:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;189:2579:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;777:133:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1663:130:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1663:130:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1663:130:6;;;;;;;;;;;;;;;;;3787:151:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3787:151:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3210:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3210:292:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1820:833:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1820:833:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1820:833:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1820:833:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1820:833:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1820:833:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1714:230:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1714:230:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1925:116:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1925:116:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2176:94:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2656:259:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2656:259:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5343:234:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5343:234:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2047:196:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2047:196:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1842:182:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1842:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6210:132:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6210:132:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2607:148:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2607:148:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1344:364:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1344:364:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;1146:54:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1146:54:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2612:177:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2612:177:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;693:322:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;693:322:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;693:322:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;693:322:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;693:322:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;693:322:33;;;;;;;;;;;;;;;:::i;:::-;;2215:179:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2215:179:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1417:137:14;;;:::i;:::-;;681:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1287:182:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1287:182:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1287:182:18;;;;;;;;;;;;;;;;;1044:90:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1507:221:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1507:221:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;4230:213:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4230:213:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;510:177:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;510:177:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;1021:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1021:317:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2507:117:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2507:117:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7047:275:17;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7047:275:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7047:275:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7047:275:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7047:275:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7047:275:17;;;;;;;;;;;;;;;:::i;:::-;;1950:816:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1950:816:33;;;;;;;;;;;;;;;;;:::i;:::-;;2630:616:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2630:616:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1799:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1799:120:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2249:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2249:252:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4764:145:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4764:145:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1728:107:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1728:107:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;3475:306:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3475:306:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3475:306:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3475:306:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3475:306:6;;;;;;;;;;;;:::i;:::-;;777:133:15;847:4;870:20;:33;891:11;870:33;;;;;;;;;;;;;;;;;;;;;;;;;;;863:40;;777:133;;;:::o;1663:130:6:-;1731:16;1766:12;:20;1779:6;1766:20;;;;;;;;;;;;;;;1759:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:130;;;:::o;3787:151:17:-;3846:7;3873:16;3881:7;3873;:16::i;:::-;3865:25;;;;;;3907:15;:24;3923:7;3907:24;;;;;;;;;;;;;;;;;;;;;3900:31;;3787:151;;;:::o;3210:292::-;3273:13;3289:16;3297:7;3289;:16::i;:::-;3273:32;;3329:5;3323:11;;:2;:11;;;;3315:20;;;;;;3367:5;3353:19;;:10;:19;;;:58;;;;3376:35;3393:5;3400:10;3376:16;:35::i;:::-;3353:58;3345:67;;;;;;3450:2;3423:15;:24;3439:7;3423:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3487:7;3483:2;3467:28;;3476:5;3467:28;;;;;;;;;;;;3210:292;;;:::o;1820:833:7:-;2040:13;2058:20;2083:22;2110:21;2136:23;2164:21;2190:16;2230;;;;;;;;;;;2213:55;;;:57;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2213:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2213:57:7;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2213:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:235;;;;;;;;;;;;;;2275:19;2297:23;2314:5;2297:16;:23::i;:::-;2275:45;;2325:10;2341:244;2369:5;2380:11;2397:13;2416:6;2428:9;2443:1;2450:14;2470:13;2489:15;2510:14;2530:16;2552:9;2567:13;;;;;;;;;;;2341:22;:244::i;:::-;2325:260;;2590:21;2596:10;2608:2;2590:5;:21::i;:::-;2620:29;2630:2;2642:5;2634:14;;;2620:29;;;;;;;;;;;;;;;;;;;;;;;;1820:833;;;;;;;;;;;;;:::o;1714:230:33:-;1778:4;1830:1;1802:30;;:16;:30;;;;1794:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:16;1879:58;;:26;:38;1906:10;1879:38;;;;;;;;;;;;;;;;;;;;;;;;;:58;;;1872:65;;1714:230;;;:::o;1925:116:6:-;1990:7;2016:18;2024:9;2016:7;:18::i;:::-;2009:25;;1925:116;;;:::o;2176:94:18:-;2220:7;2246:10;:17;;;;2239:24;;2176:94;:::o;2656:259:7:-;2728:11;2744;2760:12;2782:21;2806:7;2814:2;2806:11;;;;;;;;;;;;;;;;;;2782:35;;2860:16;;;;;;;;;;;2843:54;;;2898:6;:12;;;2843:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2843:68:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2843:68:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2843:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:90;;;;;;;;;;;;2656:259;;;;;;:::o;5343:234:17:-;5433:39;5452:10;5464:7;5433:18;:39::i;:::-;5425:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5538:32;5552:4;5558:2;5562:7;5538:13;:32::i;:::-;5343:234;;;:::o;2047:196:6:-;2104:13;2119:10;2146:21;2170:7;2178:9;2170:18;;;;;;;;;;;;;;;;;;2146:42;;2206:6;:15;;;;;;;;;;;;2223:6;:12;;;;;;;;;;;;2198:38;;;;;;;;;;;;;;;2047:196;;;:::o;1842:182:18:-;1922:7;1957:16;1967:5;1957:9;:16::i;:::-;1949:5;:24;1941:33;;;;;;1991:12;:19;2004:5;1991:19;;;;;;;;;;;;;;;2011:5;1991:26;;;;;;;;;;;;;;;;1984:33;;1842:182;;;;:::o;6210:132:17:-;6296:39;6313:4;6319:2;6323:7;6296:39;;;;;;;;;;;;:16;:39::i;:::-;6210:132;;;:::o;2607:148:18:-;2665:7;2700:13;:11;:13::i;:::-;2692:5;:21;2684:30;;;;;;2731:10;2742:5;2731:17;;;;;;;;;;;;;;;;2724:24;;2607:148;;;:::o;1344:364:33:-;1457:1;1429:30;;:16;:30;;;;1421:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:1;1520:52;;:26;:38;1547:10;1520:38;;;;;;;;;;;;;;;;;;;;;;;;;:52;;;1512:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:16;1644:26;:38;1671:10;1644:38;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;1344:364;:::o;1146:54:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;2612:177:17:-;2667:7;2686:13;2702:11;:20;2714:7;2702:20;;;;;;;;;;;;;;;;;;;;;2686:36;;2757:1;2740:19;;:5;:19;;;;2732:28;;;;;;2777:5;2770:12;;;2612:177;;;:::o;693:322:33:-;811:8;;;;;;;;;;;797:22;;:10;:22;;;789:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:1;891:22;;:8;:22;;;;883:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:46;982:8;992;1002:5;962:19;:46::i;:::-;693:322;;;:::o;2215:179:17:-;2270:7;2314:1;2297:19;;:5;:19;;;;2289:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2353:34;:17;:24;2371:5;2353:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2346:41;;2215:179;;;:::o;1417:137:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1515:1;1478:40;;1499:6;;;;;;;;;;;1478:40;;;;;;;;;;;;1545:1;1528:6;;:19;;;;;;;;;;;;;;;;;;1417:137::o;681:76::-;718:7;744:6;;;;;;;;;;;737:13;;681:76;:::o;1287:182:18:-;1351:16;1404:1;1387:19;;:5;:19;;;;1379:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:12;:19;1456:5;1443:19;;;;;;;;;;;;;;;1436:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:182;;;:::o;1044:90:14:-;1084:4;1121:6;;;;;;;;;;;1107:20;;:10;:20;;;1100:27;;1044:90;:::o;1507:221:7:-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1639:1:7;1605:36;;:22;:36;;;;1597:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1702:22;1683:16;;:41;;;;;;;;;;;;;;;;;;1507:221;:::o;4230:213:17:-;4315:10;4309:16;;:2;:16;;;;4301:25;;;;;;4373:8;4336:18;:30;4355:10;4336:30;;;;;;;;;;;;;;;:34;4367:2;4336:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4423:2;4396:40;;4411:10;4396:40;;;4427:8;4396:40;;;;;;;;;;;;;;;;;;;;;;4230:213;;:::o;510:177:33:-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:1:33;591:21;;:7;:21;;;;583:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:7;662:8;;:18;;;;;;;;;;;;;;;;;;510:177;:::o;1021:317::-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:1:33;1120:19;;:5;:19;;;;1112:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:1;1196:30;;:16;:30;;;;1188:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:16;1279:26;:33;1306:5;1279:33;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1021:317;;:::o;2507:117:6:-;2568:7;2594;2602:9;2594:18;;;;;;;;;;;;;;;;;;:23;;;2587:30;;2507:117;;;:::o;7047:275:17:-;7153:31;7166:4;7172:2;7176:7;7153:12;:31::i;:::-;7202:48;7225:4;7231:2;7235:7;7244:5;7202:22;:48::i;:::-;7194:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7047:275;;;;:::o;1950:816:33:-;2018:8;1380:10:6;1358:32;;:18;1366:9;1358:7;:18::i;:::-;:32;;;1350:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2096:1:33;2046:52;;:26;:38;2073:10;2046:38;;;;;;;;;;;;;;;;;;;;;;;;;:52;;;;2038:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:7;:14;;;;2172:8;:25;2164:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:21;2253:7;2261:8;2253:17;;;;;;;;;;;;;;;;;;2229:41;;2280:26;2309:28;2330:6;2309:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:28::i;:::-;2280:57;;2378:44;2391:10;2403:8;;;;;;;;;;;2413;2378:12;:44::i;:::-;2476:23;2518:8;;;;;;;;;;;2476:51;;2537:20;2589:13;;;;;;;;;;;2560:42;;:6;:25;;;;;;;;;;;;:42;;;:84;;2616:28;2635:8;2616:18;:28::i;:::-;2560:84;;;2605:8;2560:84;2537:107;;2654:7;:21;;;2676:10;2688:26;:38;2715:10;2688:38;;;;;;;;;;;;;;;;;;;;;;;;;2728:15;2745:13;2654:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2654:105:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2654:105:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2654:105:33;;;;1430:1:6;;;;1950:816:33;;:::o;2630:616:6:-;2701:12;2723;2745:15;2770:24;2804:13;2827:15;2852:14;2876:16;2909:21;2933:7;2941:9;2933:18;;;;;;;;;;;;;;;;;;2909:42;;2968:6;:11;;;2961:18;;2997:6;:12;;;;;;;;;;;;2989:20;;3030:6;:15;;;;;;;;;;;;3019:26;;3075:6;:24;;;;;;;;;;;;3055:44;;3118:6;:13;;;;;;;;;;;;3109:22;;3152:6;:15;;;;;;;;;;;;3141:26;;3187:6;:14;;;;;;;;;;;;3177:24;;3223:6;:16;;;;;;;;;;;;3211:28;;2630:616;;;;;;;;;;:::o;1799:120::-;1869:7;1895:17;1905:6;1895:9;:17::i;:::-;1888:24;;1799:120;;;:::o;2249:252::-;2301:4;2322:21;2346:7;2354:9;2346:18;;;;;;;;;;;;;;;;;;2322:42;;2374:26;2433:2;2410:6;:19;;;;;;;;;;;;2404:25;;:3;:25;2403:32;2374:61;;2477:6;:16;;;;;;;;;;;;2453:40;;:21;:40;2445:49;;;;2249:252;;;:::o;4764:145:17:-;4844:4;4867:18;:25;4886:5;4867:25;;;;;;;;;;;;;;;:35;4893:8;4867:35;;;;;;;;;;;;;;;;;;;;;;;;;4860:42;;4764:145;;;;:::o;1728:107:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:28;1819:8;1800:18;:28::i;:::-;1728:107;:::o;3475:306:6:-;3556:9;1380:10;1358:32;;:18;1366:9;1358:7;:18::i;:::-;:32;;;1350:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:21;3601:7;3609:9;3601:18;;;;;;;;;;;;;;;;;;3577:42;;3629:17;3649:23;3666:5;;3649:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3649:23:6;;;;;;:16;:23::i;:::-;3629:43;;3703:3;3690:16;;:9;:16;;3682:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:9;3751:6;:11;;:23;;;;1430:1;;3475:306;;;;:::o;7516:152:17:-;7573:4;7589:13;7605:11;:20;7617:7;7605:20;;;;;;;;;;;;;;;;;;;;;7589:36;;7659:1;7642:19;;:5;:19;;;;7635:26;;;7516:152;;;:::o;4161:311:6:-;4233:14;4259:32;4300:7;4259:49;;4352:1;4322:19;:26;:31;4318:72;;;4376:3;4369:10;;;;;;;4318:72;4452:2;4443:7;4439:16;4433:23;4423:33;;4409:57;;;;;:::o;4994:942:7:-;5325:10;5800:1;5349:7;5367:422;;;;;;;;5388:1;5367:422;;;;;;5402:1;5367:422;;;;;;5424:13;5367:422;;;;;;5538:6;5367:422;;;;;;5561:9;5367:422;;;;;;5483:18;5367:422;;;;;;5593:15;5367:422;;;;;;5623:7;5367:422;;;;;;5647:9;5367:422;;;;;;5672:8;5367:422;;;;;;5698:10;5367:422;;;;;;5726:10;5367:422;;;;;;5763:19;5367:422;;;;;5349:445;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5349:445:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:452;5341:460;;5894:38;5914:2;5918:6;5926:5;5894:19;:38::i;:::-;4994:942;;;;;;;;;;;;;;;:::o;3624:196:18:-;3687:24;3699:2;3703:7;3687:11;:24::i;:::-;3722:40;3750:2;3754:7;3722:27;:40::i;:::-;3773;3805:7;3773:31;:40::i;:::-;3624:196;;:::o;8028:246:17:-;8113:4;8129:13;8145:16;8153:7;8145;:16::i;:::-;8129:32;;8190:5;8179:16;;:7;:16;;;:51;;;;8223:7;8199:31;;:20;8211:7;8199:11;:20::i;:::-;:31;;;8179:51;:87;;;;8234:32;8251:5;8258:7;8234:16;:32::i;:::-;8179:87;8171:96;;;8028:246;;;;:::o;3130:239:18:-;3215:38;3235:4;3241:2;3245:7;3215:19;:38::i;:::-;3264:47;3297:4;3303:7;3264:32;:47::i;:::-;3322:40;3350:2;3354:7;3322:27;:40::i;:::-;3130:239;;;:::o;3239:1016:7:-;3348:18;3369:34;3397:5;3369:27;:34::i;:::-;3348:55;;3407:31;3457:13;;;;;;;;;;;3441:29;;:12;:29;;;3407:63;;3479:26;3475:777;;;3512:55;3529:8;;;;;;;;;;;3539:2;3543:16;3561:5;3512:16;:55::i;:::-;3572:46;3594:16;3612:5;3572:21;:46::i;:::-;3475:777;;;3747:5;3713:39;;:12;:30;3726:16;3713:30;;;;;;;;;;;;;;;;;;;;;:39;;;3709:539;;;3760:15;3778:28;3800:5;3778:21;:28::i;:::-;3760:46;;3852:7;3812:19;:37;3832:16;3812:37;;;;;;;;;;;:47;;;;3896:16;3865:19;:28;3885:7;3865:28;;;;;;;;;;;:47;;;;3951:4;3918:12;:30;3931:16;3918:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3962:18;3968:2;3972:7;3962:5;:18::i;:::-;3709:539;;;;4092:15;4110:19;:37;4130:16;4110:37;;;;;;;;;;;;4092:55;;4153:46;4170:8;;;;;;;;;;;4180:2;4184:7;4193:5;4153:16;:46::i;:::-;4205:37;4227:7;4236:5;4205:21;:37::i;:::-;3709:539;;3475:777;3239:1016;;;;;:::o;1060:112:12:-;1125:7;1151;:14;;;1144:21;;1060:112;;;:::o;10882:347:17:-;11003:4;11028:15;:2;:13;;;:15::i;:::-;11023:58;;11066:4;11059:11;;;;11023:58;11091:13;11123:2;11107:36;;;11144:10;11156:4;11162:7;11171:5;11107:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11107:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11107:70:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11107:70:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11107:70:17;;;;;;;;;;;;;;;;11091:86;;708:10;11205:16;;11195:26;;;:6;:26;;;;11187:35;;;10882:347;;;;;;;:::o;4541:3127:6:-;4616:12;4711:9;4723:2;4711:14;;4790:24;4827:4;4817:15;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;4817:15:6;;;;4790:42;;4843:12;4858:1;4843:16;;4913:6;4922:1;4913:10;;4908:125;4929:2;4925:1;:6;4908:125;;;4983:7;:13;;;4997:1;4983:16;;;;;;;;;;4960:11;4972:7;4960:20;;;;;;;;;;;:39;;;;;;;;;;;5013:9;;;;;;;4933:3;;;;;;;4908:125;;;;5085:6;5094:1;5085:10;;5080:124;5101:2;5097:1;:6;5080:124;;;5155:7;:12;;;5168:1;5155:15;;;;;;;;;;5132:11;5144:7;5132:20;;;;;;;;;;;:38;;;;;;;;;;;5184:9;;;;;;;5105:3;;;;;;;5080:124;;;;5264:6;5273:1;5264:10;;5259:169;5280:1;5276;:5;5259:169;;;5386:3;5369:21;;5374:1;5370;:5;5369:21;5344:7;:20;;;:47;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5344:47:6;5333:60;;5310:11;5322:7;5310:20;;;;;;;;;;;:83;;;;;;;;;;;5408:9;;;;;;;5283:3;;;;;;;5259:169;;;;5481:6;5490:1;5481:10;;5476:162;5497:1;5493;:5;5476:162;;;5596:3;5579:21;;5584:1;5580;:5;5579:21;5561:7;:13;;;:40;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5561:40:6;5550:53;;5527:11;5539:7;5527:20;;;;;;;;;;;:76;;;;;;;;;;;5618:9;;;;;;;5500:3;;;;;;;5476:162;;;;5694:6;5703:1;5694:10;;5689:165;5710:1;5706;:5;5689:165;;;5812:3;5795:21;;5800:1;5796;:5;5795:21;5774:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5774:43:6;5763:56;;5740:11;5752:7;5740:20;;;;;;;;;;;:79;;;;;;;;;;;5834:9;;;;;;;5713:3;;;;;;;5689:165;;;;5919:6;5928:1;5919:10;;5914:174;5935:1;5931;:5;5914:174;;;6046:3;6029:21;;6034:1;6030;:5;6029:21;5999:7;:25;;;:52;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5999:52:6;5988:65;;5965:11;5977:7;5965:20;;;;;;;;;;;:88;;;;;;;;;;;6068:9;;;;;;;5938:3;;;;;;;5914:174;;;;6150:6;6159:1;6150:10;;6145:171;6166:1;6162;:5;6145:171;;;6274:3;6257:21;;6262:1;6258;:5;6257:21;6230:7;:22;;;:49;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6230:49:6;6219:62;;6196:11;6208:7;6196:20;;;;;;;;;;;:85;;;;;;;;;;;6296:9;;;;;;;6169:3;;;;;;;6145:171;;;;6369:6;6378:1;6369:10;;6364:163;6385:1;6381;:5;6364:163;;;6485:3;6468:21;;6473:1;6469;:5;6468:21;6449:7;:14;;;:41;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6449:41:6;6438:54;;6415:11;6427:7;6415:20;;;;;;;;;;;:77;;;;;;;;;;;6507:9;;;;;;;6388:3;;;;;;;6364:163;;;;6582:6;6591:1;6582:10;;6577:165;6598:1;6594;:5;6577:165;;;6700:3;6683:21;;6688:1;6684;:5;6683:21;6662:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6662:43:6;6651:56;;6628:11;6640:7;6628:20;;;;;;;;;;;:79;;;;;;;;;;;6722:9;;;;;;;6601:3;;;;;;;6577:165;;;;6796:6;6805:1;6796:10;;6791:164;6812:1;6808;:5;6791:164;;;6913:3;6896:21;;6901:1;6897;:5;6896:21;6876:7;:15;;;:42;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6876:42:6;6865:55;;6842:11;6854:7;6842:20;;;;;;;;;;;:78;;;;;;;;;;;6935:9;;;;;;;6815:3;;;;;;;6791:164;;;;7011:6;7020:1;7011:10;;7006:166;7027:1;7023;:5;7006:166;;;7130:3;7113:21;;7118:1;7114;:5;7113:21;7091:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7091:44:6;7080:57;;7057:11;7069:7;7057:20;;;;;;;;;;;:80;;;;;;;;;;;7152:9;;;;;;;7030:3;;;;;;;7006:166;;;;7229:6;7238:1;7229:10;;7224:166;7245:1;7241;:5;7224:166;;;7348:3;7331:21;;7336:1;7332;:5;7331:21;7309:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7309:44:6;7298:57;;7275:11;7287:7;7275:20;;;;;;;;;;;:80;;;;;;;;;;;7370:9;;;;;;;7248:3;;;;;;;7224:166;;;;7464:6;7473:1;7464:10;;7459:175;7480:1;7476;:5;7459:175;;;7592:3;7575:21;;7580:1;7576;:5;7575:21;7544:7;:26;;;:53;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7544:53:6;7533:66;;7510:11;7522:7;7510:20;;;;;;;;;;;:89;;;;;;;;;;;7614:9;;;;;;;7483:3;;;;;;;7459:175;;;;7650:11;7643:18;;;;;4541:3127;;;:::o;7849:132:7:-;7923:7;7943:19;:34;7963:13;7943:34;;;;;;;;;;;;7936:41;;7849:132;;;:::o;1982:212:14:-;2075:1;2055:22;;:8;:22;;;;2047:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:8;2122:38;;2143:6;;;;;;;;;;;2122:38;;;;;;;;;;;;2179:8;2170:6;;:17;;;;;;;;;;;;;;;;;;1982:212;:::o;5939:194:7:-;6039:21;6063:7;6071:9;6063:18;;;;;;;;;;;;;;;;;;6039:42;;6100:6;6085;:12;;:21;;;;6124:5;6110:6;:11;;:19;;;;5939:194;;;;:::o;8517:188:17:-;8604:2;8581:11;:20;8593:7;8581:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8616:33;:17;:21;8634:2;8616:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8690:7;8686:2;8665:33;;8682:1;8665:33;;;;;;;;;;;;8517:188;;:::o;5078:183:18:-;5191:12;:16;5204:2;5191:16;;;;;;;;;;;;;;;:23;;;;5162:17;:26;5180:7;5162:26;;;;;;;;;;;:52;;;;5224:12;:16;5237:2;5224:16;;;;;;;;;;;;;;;5246:7;5224:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5224:30:18;;;;;;;;;;;;;;;;;;;;;;5078:183;;:::o;5456:161::-;5559:10;:17;;;;5532:15;:24;5548:7;5532:24;;;;;;;;;;;:44;;;;5586:10;5602:7;5586:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5586:24:18;;;;;;;;;;;;;;;;;;;;;;5456:161;:::o;9905:449:17:-;10018:4;9998:24;;:16;10006:7;9998;:16::i;:::-;:24;;;9990:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10099:1;10085:16;;:2;:16;;;;10077:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10156:23;10171:7;10156:14;:23::i;:::-;10190:35;:17;:23;10208:4;10190:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10235:33;:17;:21;10253:2;10235:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10302:2;10279:11;:20;10291:7;10279:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10339:7;10335:2;10320:27;;10329:4;10320:27;;;;;;;;;;;;9905:449;;;:::o;6232:1128:18:-;6494:22;6519:32;6549:1;6519:12;:18;6532:4;6519:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6494:57;;6561:18;6582:17;:26;6600:7;6582:26;;;;;;;;;;;;6561:47;;6726:14;6712:10;:28;6708:323;;6756:19;6778:12;:18;6791:4;6778:18;;;;;;;;;;;;;;;6797:14;6778:34;;;;;;;;;;;;;;;;6756:56;;6860:11;6827:12;:18;6840:4;6827:18;;;;;;;;;;;;;;;6846:10;6827:30;;;;;;;;;;;;;;;:44;;;;6976:10;6943:17;:30;6961:11;6943:30;;;;;;;;;;;:43;;;;6708:323;;7117:12;:18;7130:4;7117:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6232:1128;;;;:::o;11051:147:6:-;11130:18;11181:5;11187:2;11181:9;;;;;;;;;;;;;;;;;11175:16;;;11160:31;;11051:147;;;:::o;6136:702:7:-;6218:14;6234:13;6249:20;6271:13;6286:16;6304:25;6336:40;6370:5;6336:33;:40::i;:::-;6217:159;;;;;;;;;;;;6386:22;6413:14;6432:16;6453:15;6473:17;6495;6517:25;6549:41;6584:5;6549:34;:41::i;:::-;6381:209;;;;;;;;;;;;;;6595:239;6622:8;6635:6;6646:5;6656:13;6674:6;6685:9;6699:18;6722:15;6742:7;6754:9;6768:8;6781:10;6796;6811:19;6595:22;:239::i;:::-;6136:702;;;;;;;;;;;;;;;:::o;4258:733::-;4326:7;4340:14;4356:13;4371:20;4393:13;4408:16;4426:25;4458:40;4492:5;4458:33;:40::i;:::-;4339:159;;;;;;;;;;;;4508:22;4535:14;4554:16;4575:15;4595:17;4617;4639:25;4671:41;4706:5;4671:34;:41::i;:::-;4503:209;;;;;;;;;;;;;;4717:10;4733:240;4761:6;4773:5;4784:13;4803:6;4815:9;4830:18;4854:15;4875:7;4888:9;4903:8;4917:10;4933;4949:19;4733:22;:240::i;:::-;4717:256;;4985:2;4978:9;;;;;;;;;;;;;;;;4258:733;;;:::o;463:615:25:-;523:4;539:12;1037:7;1025:20;1017:28;;1070:1;1063:4;:8;1056:15;;;463:615;;;:::o;1178:89:12:-;1259:1;1241:7;:14;;;:19;;;;;;;;;;;1178:89;:::o;11390:171:17:-;11489:1;11453:38;;:15;:24;11469:7;11453:24;;;;;;;;;;;;;;;;;;;;;:38;;;11449:106;;11542:1;11507:15;:24;11523:7;11507:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11449:106;11390:171;:::o;1273:108:12:-;1353:21;1372:1;1353:7;:14;;;:18;;:21;;;;:::i;:::-;1336:7;:14;;:38;;;;1273:108;:::o;1235:207:13:-;1293:7;1325:1;1320;:6;;1312:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:9;1415:1;1411;:5;1399:17;;1434:1;1427:8;;;1235:207;;;;:::o;7674:1416:6:-;7768:13;7783:12;7797:19;7818:12;7832:15;7849:24;7894:12;7909:1;7894:16;;7950:6;7959:1;7950:10;;7945:132;7966:2;7962:1;:6;7945:132;;;8041:1;8037;:5;8027:4;8006:25;;:5;8022:1;8012:7;:11;8006:18;;;;;;;;;;;;;;;;;:25;7998:34;;;:45;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7998:45:6;7989:54;;;;8057:9;;;;;;;7970:3;;;;;;;7945:132;;;;8117:27;8129:5;8136:7;8117:11;:27::i;:::-;8110:34;;8165:2;8154:13;;;;8215:6;8224:1;8215:10;;8210:190;8231:1;8227;:5;8210:190;;;8261:11;8288:5;8294:7;8288:14;;;;;;;;;;;;;;;;;8282:21;;;8275:29;;8261:43;;8331:1;8327;:5;8318:14;;;;;;;;;8362:4;8346:20;;;;8380:9;;;;;;;8210:190;8234:3;;;;;;;8210:190;;;;8440:6;8449:1;8440:10;;8435:183;8456:1;8452;:5;8435:183;;;8486:11;8513:5;8519:7;8513:14;;;;;;;;;;;;;;;;;8507:21;;;8500:29;;8486:43;;8556:1;8552;:5;8543:14;;;;;;;;;8580:4;8571:13;;;;8598:9;;;;;;;8435:183;8459:3;;;;;;;8435:183;;;;8661:6;8670:1;8661:10;;8656:186;8677:1;8673;:5;8656:186;;;8707:11;8734:5;8740:7;8734:14;;;;;;;;;;;;;;;;;8728:21;;;8721:29;;8707:43;;8777:1;8773;:5;8764:14;;;;;;;;;8804:4;8792:16;;;;8822:9;;;;;;;8656:186;8680:3;;;;;;;8656:186;;;;8894:6;8903:1;8894:10;;8889:195;8910:1;8906;:5;8889:195;;;8940:11;8967:5;8973:7;8967:14;;;;;;;;;;;;;;;;;8961:21;;;8954:29;;8940:43;;9010:1;9006;:5;8997:14;;;;;;;;;9046:4;9025:25;;;;9064:9;;;;;;;8889:195;8913:3;;;;;;;8889:195;;;;7674:1416;;;;;;;;:::o;9096:1723::-;9190:21;9213:13;9228:15;9245:14;9261:16;9279;9297:24;9333:12;9348:2;9333:17;;9400:6;9409:1;9400:10;;9395:192;9416:1;9412;:5;9395:192;;;9446:11;9473:5;9479:7;9473:14;;;;;;;;;;;;;;;;;9467:21;;;9460:29;;9446:43;;9516:1;9512;:5;9503:14;;;;;;;;;9549:4;9531:22;;;;9567:9;;;;;;;9395:192;9419:3;;;;;;;9395:192;;;;9627:6;9636:1;9627:10;;9622:184;9643:1;9639;:5;9622:184;;;9673:11;9700:5;9706:7;9700:14;;;;;;;;;;;;;;;;;9694:21;;;9687:29;;9673:43;;9743:1;9739;:5;9730:14;;;;;;;;;9768:4;9758:14;;;;9786:9;;;;;;;9622:184;9646:3;;;;;;;9622:184;;;;9848:6;9857:1;9848:10;;9843:186;9864:1;9860;:5;9843:186;;;9894:11;9921:5;9927:7;9921:14;;;;;;;;;;;;;;;;;9915:21;;;9908:29;;9894:43;;9964:1;9960;:5;9951:14;;;;;;;;;9991:4;9979:16;;;;10009:9;;;;;;;9843:186;9867:3;;;;;;;9843:186;;;;10070:6;10079:1;10070:10;;10065:185;10086:1;10082;:5;10065:185;;;10116:11;10143:5;10149:7;10143:14;;;;;;;;;;;;;;;;;10137:21;;;10130:29;;10116:43;;10186:1;10182;:5;10173:14;;;;;;;;;10212:4;10201:15;;;;10230:9;;;;;;;10065:185;10089:3;;;;;;;10065:185;;;;10293:6;10302:1;10293:10;;10288:187;10309:1;10305;:5;10288:187;;;10339:11;10366:5;10372:7;10366:14;;;;;;;;;;;;;;;;;10360:21;;;10353:29;;10339:43;;10409:1;10405;:5;10396:14;;;;;;;;;10437:4;10424:17;;;;10455:9;;;;;;;10288:187;10312:3;;;;;;;10288:187;;;;10519:6;10528:1;10519:10;;10514:187;10535:1;10531;:5;10514:187;;;10565:11;10592:5;10598:7;10592:14;;;;;;;;;;;;;;;;;10586:21;;;10579:29;;10565:43;;10635:1;10631;:5;10622:14;;;;;;;;;10663:4;10650:17;;;;10681:9;;;;;;;10514:187;10538:3;;;;;;;10514:187;;;;10778:5;10784:7;10778:14;;;;;;;;;;;;;;;;;10772:21;;;10750:43;;;;10803:9;;;;;;;9096:1723;;;;;;;;;;:::o;6841:830:7:-;7187:21;7211:7;7219:8;7211:17;;;;;;;;;;;;;;;;;;7187:41;;7247:6;7232;:12;;:21;;;;7271:5;7257:6;:11;;:19;;;;7302:13;7280:6;:19;;;:35;;;;;;;;;;;;;;;;;;7334:6;7319;:12;;;:21;;;;;;;;;;;;;;;;;;7362:9;7344:6;:15;;;:27;;;;;;;;;;;;;;;;;;7402:18;7375:6;:24;;;:45;;;;;;;;;;;;;;;;;;7448:15;7424:6;:21;;;:39;;;;;;;;;;;;;;;;;;7483:7;7467:6;:13;;;:23;;;;;;;;;;;;;;;;;;7512:9;7494:6;:15;;;:27;;;;;;;;;;;;;;;;;;7542:8;7525:6;:14;;;:25;;;;;;;;;;;;;;;;;;7573:10;7554:6;:16;;;:29;;;;;;;;;;;;;;;;;;7606:10;7587:6;:16;;;:29;;;;;;;;;;;;;;;;;;7648:19;7620:6;:25;;;:47;;;;;;;;;;;;;;;;;;6841:830;;;;;;;;;;;;;;;:::o;10825:220:6:-;10904:12;10933:6;10942:1;10933:10;;10928:111;10949:2;10945:1;:6;10928:111;;;11026:1;11022;:5;11012:4;10988:28;;:5;11007:1;10994:10;:14;10988:21;;;;;;;;;;;;;;;;;:28;10980:37;;;:48;52:12:-1;49:1;45:20;29:14;25:41;7:59;;10980:48:6;10972:56;;;;10953:3;;;;;;;10928:111;;;;10825:220;;;;:::o;189:2579:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../common/DragonFactory.sol\";\n\ncontract IMainnetGateway {\n  function depositDragon(address from, address to, uint256 uid, bytes calldata data) external;\n}\n\ncontract MainnetTransferableDragon is DragonFactory {\n\n    // map mainnet address to sidechain address\n    mapping (address => address) private _mainnetAddressToSidechain;\n\n    constructor(address gateway, uint8 blockchainId) DragonFactory(gateway, blockchainId) public {}\n\n    // Setter to update who the gateway is\n    function setGatewayAddress(address gateway) external onlyOwner {\n        require(gateway != address(0), \"gateway should have a valid address\");\n        _gateway = gateway;\n    }\n\n    function retrieveToken(address receiver, uint256 _tokenId, bytes memory _data) public {\n        require(msg.sender == _gateway, \"only the gateway is allowed to call this function\");\n        require(receiver != address(0), \"Receiver should be a valid address\");\n        _mintReceivedDragon(receiver, _tokenId, _data);\n    }\n\n    function undoMapping(address owner, address sidechainAddress) external onlyOwner {\n        require(owner != address(0), \"Invalid owner address to be mapped\");\n        require(sidechainAddress != address(0), \"Invalid sidechain address to be mapped\");\n        _mainnetAddressToSidechain[owner] = sidechainAddress;\n    }\n\n    function mapContractToSidechain(address sidechainAddress) external {\n        require(sidechainAddress != address(0), \"Invalid sidechain address to be mapped\");\n        require(_mainnetAddressToSidechain[msg.sender] == address(0), \"Address already mapped. Request owner to undo the mapping\");\n        _mainnetAddressToSidechain[msg.sender] = sidechainAddress;\n    }\n\n    function isMap(address sidechainAddress) external view returns (bool) {\n        require(sidechainAddress != address(0), \"Invalid sidechain address\");\n        return _mainnetAddressToSidechain[msg.sender] == sidechainAddress;\n    }\n\n    function transferToGateway(uint256 _tokenId) public onlyDragonOwner(_tokenId) {\n        require(_mainnetAddressToSidechain[msg.sender] != address(0), \"Blockchains should be mapped to allow transferences\");\n        require(_tokenId < dragons.length, \"Invalid token Id\");\n\n        Dragon storage dragon = dragons[_tokenId];\n        bytes memory encodedDragon = _encodeDragonToBytes(dragon);\n\n        // Transfer ownership\n        transferFrom(msg.sender, _gateway, _tokenId);\n\n        // Trigger trnsference in gateway\n\n        IMainnetGateway gateway = IMainnetGateway(_gateway);\n        uint originalTokenId = dragon.blockchainOriginId == _blockchainId ? _tokenId : _getForeignTokenId(_tokenId);\n        gateway.depositDragon(msg.sender, _mainnetAddressToSidechain[msg.sender], originalTokenId, encodedDragon);\n    }\n}",
  "sourcePath": "/usr/src/app/contractGetter/contracts/mainnet/MainnetTransferableDragon.sol",
  "ast": {
    "absolutePath": "/usr/src/app/contractGetter/contracts/mainnet/MainnetTransferableDragon.sol",
    "exportedSymbols": {
      "IMainnetGateway": [
        8318
      ],
      "MainnetTransferableDragon": [
        8562
      ]
    },
    "id": 8563,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8305,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 8306,
        "nodeType": "ImportDirective",
        "scope": 8563,
        "sourceUnit": 2243,
        "src": "25:37:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 8318,
        "linearizedBaseContracts": [
          8318
        ],
        "name": "IMainnetGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 8317,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8308,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "116:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8310,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "130:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "130:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8312,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "142:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8314,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "155:19:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "115:60:33"
            },
            "returnParameters": {
              "id": 8316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "184:0:33"
            },
            "scope": 8318,
            "src": "93:92:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8563,
        "src": "64:123:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8319,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2242,
              "src": "227:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2242",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 8320,
            "nodeType": "InheritanceSpecifier",
            "src": "227:13:33"
          }
        ],
        "contractDependencies": [
          1551,
          2242,
          2884,
          2935,
          3853,
          4210,
          4220,
          4407,
          4434
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8562,
        "linearizedBaseContracts": [
          8562,
          2242,
          1551,
          2884,
          4210,
          4434,
          3853,
          4407,
          2935,
          4220
        ],
        "name": "MainnetTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8324,
            "name": "_mainnetAddressToSidechain",
            "nodeType": "VariableDeclaration",
            "scope": 8562,
            "src": "296:63:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 8323,
              "keyType": {
                "id": 8321,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "296:28:33",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 8322,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:33",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8335,
              "nodeType": "Block",
              "src": "459:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8336,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8331,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8326,
                    "src": "429:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8332,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8328,
                    "src": "438:12:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8333,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8330,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2242,
                  "src": "415:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2242_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:36:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8326,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8336,
                  "src": "378:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8328,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8336,
                  "src": "395:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8327,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:37:33"
            },
            "returnParameters": {
              "id": 8334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:33"
            },
            "scope": 8562,
            "src": "366:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8356,
              "nodeType": "Block",
              "src": "573:114:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8344,
                          "name": "gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8338,
                          "src": "591:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "610:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "602:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "602:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "591:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "676174657761792073686f756c64206861766520612076616c69642061646472657373",
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:37:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        },
                        "value": "gateway should have a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        }
                      ],
                      "id": 8343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "583:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8351,
                  "nodeType": "ExpressionStatement",
                  "src": "583:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8352,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1631,
                      "src": "662:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8353,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8338,
                      "src": "673:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "662:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8355,
                  "nodeType": "ExpressionStatement",
                  "src": "662:18:33"
                }
              ]
            },
            "documentation": null,
            "id": 8357,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8340,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2817,
                  "src": "563:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "563:9:33"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8338,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "537:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:17:33"
            },
            "returnParameters": {
              "id": 8342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:33"
            },
            "scope": 8562,
            "src": "510:177:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8389,
              "nodeType": "Block",
              "src": "779:236:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11296,
                            "src": "797:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "797:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8369,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "811:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "797:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:51:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 8366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "789:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:84:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8373,
                  "nodeType": "ExpressionStatement",
                  "src": "789:84:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8375,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8359,
                          "src": "891:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "911:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "903:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "903:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "891:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 8380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 8374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "883:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8382,
                  "nodeType": "ExpressionStatement",
                  "src": "883:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8384,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8359,
                        "src": "982:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8385,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8361,
                        "src": "992:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8386,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8363,
                        "src": "1002:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8383,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1880,
                      "src": "962:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 8387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "962:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8388,
                  "nodeType": "ExpressionStatement",
                  "src": "962:46:33"
                }
              ]
            },
            "documentation": null,
            "id": 8390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8359,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "716:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8361,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "734:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8363,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "752:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "715:56:33"
            },
            "returnParameters": {
              "id": 8365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:33"
            },
            "scope": 8562,
            "src": "693:322:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8423,
              "nodeType": "Block",
              "src": "1102:236:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8400,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8392,
                          "src": "1120:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1137:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1129:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1129:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1120:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 8405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 8399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1112:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8407,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8409,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8394,
                          "src": "1196:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1224:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1216:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1216:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1196:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1228:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1188:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8416,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8417,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1279:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8419,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8418,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8392,
                        "src": "1306:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1279:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8420,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8394,
                      "src": "1315:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1279:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8422,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:52:33"
                }
              ]
            },
            "documentation": null,
            "id": 8424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8396,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2817,
                  "src": "1092:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1092:9:33"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8392,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "1042:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8394,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "1057:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1041:41:33"
            },
            "returnParameters": {
              "id": 8398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:33"
            },
            "scope": 8562,
            "src": "1021:317:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8457,
              "nodeType": "Block",
              "src": "1411:297:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8430,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8426,
                          "src": "1429:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1457:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1449:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1449:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1429:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1421:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8437,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8439,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8324,
                            "src": "1520:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8442,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11296,
                              "src": "1547:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1547:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1520:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1570:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1562:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1520:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 8447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1574:59:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 8438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1512:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:122:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8449,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:122:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8450,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1644:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8453,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "1671:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1671:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1644:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8454,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8426,
                      "src": "1685:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1644:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8456,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:57:33"
                }
              ]
            },
            "documentation": null,
            "id": 8458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToSidechain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8426,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8458,
                  "src": "1376:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1375:26:33"
            },
            "returnParameters": {
              "id": 8428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:33"
            },
            "scope": 8562,
            "src": "1344:364:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8481,
              "nodeType": "Block",
              "src": "1784:160:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8466,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8460,
                          "src": "1802:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1830:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1822:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1822:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1802:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e2061646472657373",
                        "id": 8471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1834:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        },
                        "value": "Invalid sidechain address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        }
                      ],
                      "id": 8465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1794:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8474,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1879:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8477,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "1906:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1906:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1879:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8478,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8460,
                      "src": "1921:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1879:58:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8464,
                  "id": 8480,
                  "nodeType": "Return",
                  "src": "1872:65:33"
                }
              ]
            },
            "documentation": null,
            "id": 8482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8460,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "1729:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1728:26:33"
            },
            "returnParameters": {
              "id": 8464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "1778:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1777:6:33"
            },
            "scope": 8562,
            "src": "1714:230:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8560,
              "nodeType": "Block",
              "src": "2028:738:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8491,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8324,
                            "src": "2046:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8494,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8492,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11296,
                              "src": "2073:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2073:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2046:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2088:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2088:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2046:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 8499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2100:53:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 8490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "2038:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:116:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8501,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:116:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8503,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8484,
                          "src": "2172:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8504,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2183:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 8505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2183:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2172:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 8507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2199:18:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 8502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "2164:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:54:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8509,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:54:33"
                },
                {
                  "assignments": [
                    8511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8511,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2229:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8510,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2229:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8515,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8512,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2253:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 8514,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8513,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8484,
                      "src": "2261:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2253:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2229:41:33"
                },
                {
                  "assignments": [
                    8517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8517,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2280:26:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8516,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2280:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8521,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8519,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8511,
                        "src": "2330:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 8518,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "2309:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:28:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2280:57:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "2391:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2391:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8525,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "2403:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8526,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8484,
                        "src": "2413:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8522,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3553
                      ],
                      "referencedDeclaration": 3553,
                      "src": "2378:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8528,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:44:33"
                },
                {
                  "assignments": [
                    8530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8530,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2476:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                        "typeString": "contract IMainnetGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8529,
                        "name": "IMainnetGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8318,
                        "src": "2476:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8534,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8532,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "2518:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8531,
                      "name": "IMainnetGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8318,
                      "src": "2502:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMainnetGateway_$8318_$",
                        "typeString": "type(contract IMainnetGateway)"
                      }
                    },
                    "id": 8533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:25:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                      "typeString": "contract IMainnetGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2476:51:33"
                },
                {
                  "assignments": [
                    8536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8536,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2537:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8535,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2537:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8546,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 8540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8537,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8511,
                          "src": "2560:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 8538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2560:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 8539,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "2589:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2560:42:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8543,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8484,
                          "src": "2635:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8542,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2616:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 8544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2616:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2560:84:33",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 8541,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8484,
                      "src": "2605:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2537:107:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "2676:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2676:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 8552,
                          "name": "_mainnetAddressToSidechain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8324,
                          "src": "2688:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 8555,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8553,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11296,
                            "src": "2715:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2715:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2688:38:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8556,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8536,
                        "src": "2728:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8557,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8517,
                        "src": "2745:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8547,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8530,
                        "src": "2654:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "id": 8549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8317,
                      "src": "2654:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 8558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:105:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8559,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:105:33"
                }
              ]
            },
            "documentation": null,
            "id": 8561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8487,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8484,
                    "src": "2018:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8486,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "2002:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2002:25:33"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8484,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8561,
                  "src": "1977:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1976:18:33"
            },
            "returnParameters": {
              "id": 8489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:33"
            },
            "scope": 8562,
            "src": "1950:816:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8563,
        "src": "189:2579:33"
      }
    ],
    "src": "0:2768:33"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/contractGetter/contracts/mainnet/MainnetTransferableDragon.sol",
    "exportedSymbols": {
      "IMainnetGateway": [
        8318
      ],
      "MainnetTransferableDragon": [
        8562
      ]
    },
    "id": 8563,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8305,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/usr/src/app/contractGetter/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 8306,
        "nodeType": "ImportDirective",
        "scope": 8563,
        "sourceUnit": 2243,
        "src": "25:37:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 8318,
        "linearizedBaseContracts": [
          8318
        ],
        "name": "IMainnetGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 8317,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8308,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "116:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "116:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8310,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "130:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "130:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8312,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "142:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8314,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "155:19:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "115:60:33"
            },
            "returnParameters": {
              "id": 8316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "184:0:33"
            },
            "scope": 8318,
            "src": "93:92:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8563,
        "src": "64:123:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8319,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2242,
              "src": "227:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2242",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 8320,
            "nodeType": "InheritanceSpecifier",
            "src": "227:13:33"
          }
        ],
        "contractDependencies": [
          1551,
          2242,
          2884,
          2935,
          3853,
          4210,
          4220,
          4407,
          4434
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8562,
        "linearizedBaseContracts": [
          8562,
          2242,
          1551,
          2884,
          4210,
          4434,
          3853,
          4407,
          2935,
          4220
        ],
        "name": "MainnetTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8324,
            "name": "_mainnetAddressToSidechain",
            "nodeType": "VariableDeclaration",
            "scope": 8562,
            "src": "296:63:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 8323,
              "keyType": {
                "id": 8321,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "296:28:33",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 8322,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:33",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8335,
              "nodeType": "Block",
              "src": "459:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8336,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8331,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8326,
                    "src": "429:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8332,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8328,
                    "src": "438:12:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8333,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8330,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2242,
                  "src": "415:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2242_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:36:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8326,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8336,
                  "src": "378:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8328,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8336,
                  "src": "395:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8327,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:37:33"
            },
            "returnParameters": {
              "id": 8334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:33"
            },
            "scope": 8562,
            "src": "366:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8356,
              "nodeType": "Block",
              "src": "573:114:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8344,
                          "name": "gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8338,
                          "src": "591:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "610:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "602:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "602:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "591:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "676174657761792073686f756c64206861766520612076616c69642061646472657373",
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:37:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        },
                        "value": "gateway should have a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        }
                      ],
                      "id": 8343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "583:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8351,
                  "nodeType": "ExpressionStatement",
                  "src": "583:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8352,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1631,
                      "src": "662:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8353,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8338,
                      "src": "673:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "662:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8355,
                  "nodeType": "ExpressionStatement",
                  "src": "662:18:33"
                }
              ]
            },
            "documentation": null,
            "id": 8357,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8340,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2817,
                  "src": "563:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "563:9:33"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8338,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8357,
                  "src": "537:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:17:33"
            },
            "returnParameters": {
              "id": 8342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:33"
            },
            "scope": 8562,
            "src": "510:177:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8389,
              "nodeType": "Block",
              "src": "779:236:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11296,
                            "src": "797:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "797:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8369,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "811:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "797:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:51:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 8366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "789:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:84:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8373,
                  "nodeType": "ExpressionStatement",
                  "src": "789:84:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8375,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8359,
                          "src": "891:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "911:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "903:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "903:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "891:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 8380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 8374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "883:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8382,
                  "nodeType": "ExpressionStatement",
                  "src": "883:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8384,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8359,
                        "src": "982:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8385,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8361,
                        "src": "992:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8386,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8363,
                        "src": "1002:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8383,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1880,
                      "src": "962:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 8387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "962:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8388,
                  "nodeType": "ExpressionStatement",
                  "src": "962:46:33"
                }
              ]
            },
            "documentation": null,
            "id": 8390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8359,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "716:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8361,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "734:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8363,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8390,
                  "src": "752:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "715:56:33"
            },
            "returnParameters": {
              "id": 8365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:33"
            },
            "scope": 8562,
            "src": "693:322:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8423,
              "nodeType": "Block",
              "src": "1102:236:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8400,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8392,
                          "src": "1120:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1137:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1129:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1129:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1120:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 8405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 8399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1112:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8407,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8409,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8394,
                          "src": "1196:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1224:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1216:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1216:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1196:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1228:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1188:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8416,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8417,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1279:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8419,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8418,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8392,
                        "src": "1306:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1279:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8420,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8394,
                      "src": "1315:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1279:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8422,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:52:33"
                }
              ]
            },
            "documentation": null,
            "id": 8424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8397,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8396,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2817,
                  "src": "1092:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1092:9:33"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8392,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "1042:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8394,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8424,
                  "src": "1057:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1041:41:33"
            },
            "returnParameters": {
              "id": 8398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:33"
            },
            "scope": 8562,
            "src": "1021:317:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8457,
              "nodeType": "Block",
              "src": "1411:297:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8430,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8426,
                          "src": "1429:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1457:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1449:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1449:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1429:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1421:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8437,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8439,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8324,
                            "src": "1520:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8442,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11296,
                              "src": "1547:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1547:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1520:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1570:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1562:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1520:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 8447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1574:59:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 8438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1512:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:122:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8449,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:122:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8450,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1644:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8453,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "1671:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1671:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1644:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8454,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8426,
                      "src": "1685:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1644:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8456,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:57:33"
                }
              ]
            },
            "documentation": null,
            "id": 8458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToSidechain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8426,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8458,
                  "src": "1376:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1375:26:33"
            },
            "returnParameters": {
              "id": 8428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:0:33"
            },
            "scope": 8562,
            "src": "1344:364:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8481,
              "nodeType": "Block",
              "src": "1784:160:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8466,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8460,
                          "src": "1802:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1830:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1822:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1822:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1802:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e2061646472657373",
                        "id": 8471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1834:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        },
                        "value": "Invalid sidechain address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        }
                      ],
                      "id": 8465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "1794:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8474,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "1879:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8477,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "1906:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1906:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1879:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8478,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8460,
                      "src": "1921:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1879:58:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8464,
                  "id": 8480,
                  "nodeType": "Return",
                  "src": "1872:65:33"
                }
              ]
            },
            "documentation": null,
            "id": 8482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8460,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "1729:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1729:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1728:26:33"
            },
            "returnParameters": {
              "id": 8464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "1778:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1777:6:33"
            },
            "scope": 8562,
            "src": "1714:230:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8560,
              "nodeType": "Block",
              "src": "2028:738:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8491,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8324,
                            "src": "2046:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8494,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8492,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11296,
                              "src": "2073:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2073:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2046:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2088:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2088:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2046:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 8499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2100:53:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 8490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "2038:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:116:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8501,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:116:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8503,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8484,
                          "src": "2172:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8504,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2183:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 8505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2183:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2172:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 8507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2199:18:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 8502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11299,
                        11300
                      ],
                      "referencedDeclaration": 11300,
                      "src": "2164:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2164:54:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8509,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:54:33"
                },
                {
                  "assignments": [
                    8511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8511,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2229:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8510,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2229:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8515,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8512,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2253:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 8514,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8513,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8484,
                      "src": "2261:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2253:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2229:41:33"
                },
                {
                  "assignments": [
                    8517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8517,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2280:26:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8516,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2280:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8521,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8519,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8511,
                        "src": "2330:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 8518,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "2309:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:28:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2280:57:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8523,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "2391:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2391:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8525,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "2403:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8526,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8484,
                        "src": "2413:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8522,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3553
                      ],
                      "referencedDeclaration": 3553,
                      "src": "2378:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8528,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:44:33"
                },
                {
                  "assignments": [
                    8530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8530,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2476:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                        "typeString": "contract IMainnetGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8529,
                        "name": "IMainnetGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8318,
                        "src": "2476:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8534,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8532,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "2518:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8531,
                      "name": "IMainnetGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8318,
                      "src": "2502:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMainnetGateway_$8318_$",
                        "typeString": "type(contract IMainnetGateway)"
                      }
                    },
                    "id": 8533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:25:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                      "typeString": "contract IMainnetGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2476:51:33"
                },
                {
                  "assignments": [
                    8536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8536,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 8560,
                      "src": "2537:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8535,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2537:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8546,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 8540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8537,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8511,
                          "src": "2560:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 8538,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2560:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 8539,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "2589:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2560:42:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8543,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8484,
                          "src": "2635:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8542,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2616:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 8544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2616:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2560:84:33",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 8541,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8484,
                      "src": "2605:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2537:107:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11296,
                          "src": "2676:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2676:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 8552,
                          "name": "_mainnetAddressToSidechain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8324,
                          "src": "2688:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 8555,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8553,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11296,
                            "src": "2715:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2715:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2688:38:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8556,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8536,
                        "src": "2728:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8557,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8517,
                        "src": "2745:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8547,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8530,
                        "src": "2654:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8318",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "id": 8549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8317,
                      "src": "2654:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 8558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:105:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8559,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:105:33"
                }
              ]
            },
            "documentation": null,
            "id": 8561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8487,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8484,
                    "src": "2018:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8486,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "2002:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2002:25:33"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8484,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8561,
                  "src": "1977:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1976:18:33"
            },
            "returnParameters": {
              "id": 8489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:33"
            },
            "scope": 8562,
            "src": "1950:816:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8563,
        "src": "189:2579:33"
      }
    ],
    "src": "0:2768:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "12345": {
      "events": {},
      "links": {},
      "address": "0xD08e643a58F919dCB931daEC073668c8f07Fe1cc",
      "transactionHash": "0x086297f65ece94d1ef6e51f1d958696e5a786b814871fa48c238f23b43e2d98e"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-07-18T21:07:49.774Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createDragon(string,uint64,uint32,uint32)": {
        "notice": "Creates new Dragon and give it to its creator."
      },
      "getDragonsIdsByOwner(address)": {
        "notice": "***************************************************************************************** PUBLIC METHODS*******************************************************************************************"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setName(uint256,string)": {
        "notice": "***************************************************************************************** ONLY OWNER ACTIONS*******************************************************************************************"
      }
    }
  }
}