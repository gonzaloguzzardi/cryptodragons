{
  "contractName": "Address",
  "abi": [],
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207a4385e7eebdbc9ad09fed92432eab295e2989eab23b2fcab373702917779ffc64736f6c63430005110032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207a4385e7eebdbc9ad09fed92432eab295e2989eab23b2fcab373702917779ffc64736f6c63430005110032",
  "sourceMap": "90:1015:25:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "90:1015:25:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary Address {\r\n    /**\r\n     * Returns whether the target address is a contract\r\n     * @dev This function will return false if invoked during the constructor of a contract,\r\n     * as the code is not actually created until after the constructor finishes.\r\n     * @param account address of the account to check\r\n     * @return whether the target address is a contract\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // XXX Currently there is no better way to check if there is a contract in an address\r\n        // than to check the size of the code at that address.\r\n        // See https://ethereum.stackexchange.com/a/14016/36603\r\n        // for more details about how this works.\r\n        // TODO Check this again before the Serenity release, because all addresses will be\r\n        // contracts then.\r\n        //solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}",
  "sourcePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/utils/Address.sol",
  "ast": {
    "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        4430
      ]
    },
    "id": 4431,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4413,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 4430,
        "linearizedBaseContracts": [
          4430
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4428,
              "nodeType": "Block",
              "src": "542:560:25",
              "statements": [
                {
                  "assignments": [
                    4421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4421,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 4428,
                      "src": "553:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "553:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4422,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "553:12:25"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 4421,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1039:4:25",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 4415,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1059:7:25",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4423,
                  "nodeType": "InlineAssembly",
                  "operations": "{ size := extcodesize(account) }",
                  "src": "1028:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4424,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4421,
                      "src": "1086:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1086:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4419,
                  "id": 4427,
                  "nodeType": "Return",
                  "src": "1079:15:25"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 4429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4415,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4429,
                  "src": "496:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:17:25"
            },
            "returnParameters": {
              "id": 4419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4418,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4429,
                  "src": "536:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:6:25"
            },
            "scope": 4430,
            "src": "476:626:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 4431,
        "src": "90:1015:25"
      }
    ],
    "src": "0:1105:25"
  },
  "legacyAST": {
    "absolutePath": "/mnt/d/workspace/cryptodragons/truffle-project/contracts/common/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        4430
      ]
    },
    "id": 4431,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4413,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 4430,
        "linearizedBaseContracts": [
          4430
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4428,
              "nodeType": "Block",
              "src": "542:560:25",
              "statements": [
                {
                  "assignments": [
                    4421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4421,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 4428,
                      "src": "553:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "553:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4422,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "553:12:25"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 4421,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1039:4:25",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 4415,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1059:7:25",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4423,
                  "nodeType": "InlineAssembly",
                  "operations": "{ size := extcodesize(account) }",
                  "src": "1028:41:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4424,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4421,
                      "src": "1086:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1086:8:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4419,
                  "id": 4427,
                  "nodeType": "Return",
                  "src": "1079:15:25"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 4429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4415,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4429,
                  "src": "496:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:17:25"
            },
            "returnParameters": {
              "id": 4419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4418,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4429,
                  "src": "536:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:6:25"
            },
            "scope": 4430,
            "src": "476:626:25",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 4431,
        "src": "90:1015:25"
      }
    ],
    "src": "0:1105:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-02-25T00:49:04.079Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Utility library of inline functions on addresses"
  }
}