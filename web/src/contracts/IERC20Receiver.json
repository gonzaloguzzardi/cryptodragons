{
  "contractName": "IERC20Receiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "onERC20Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title ERC20 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n *  from ERC20 asset contracts.\n */\ncontract IERC20Receiver {\n  bytes4 constant ERC20_RECEIVED = 0xbc04f0af;\n\n  /**\n   * @dev Magic value to be returned upon successful reception of an NFT\n   *  Equals to `bytes4(keccak256(\"onERC20Received(address,uint256,bytes)\"))`,\n   *  which can be also obtained as `ERC20Receiver(0).onERC20Received.selector`\n   */\n\n  function onERC20Received(address _from, uint256 amount) public returns(bytes4);\n}",
  "sourcePath": "/usr/src/app/main-sv/contracts/common/token/IERC20Receiver.sol",
  "ast": {
    "absolutePath": "/usr/src/app/main-sv/contracts/common/token/IERC20Receiver.sol",
    "exportedSymbols": {
      "IERC20Receiver": [
        4251
      ]
    },
    "id": 4252,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4238,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20 token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\n from ERC20 asset contracts.",
        "fullyImplemented": false,
        "id": 4251,
        "linearizedBaseContracts": [
          4251
        ],
        "name": "IERC20Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4241,
            "name": "ERC20_RECEIVED",
            "nodeType": "VariableDeclaration",
            "scope": 4251,
            "src": "205:43:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 4239,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786263303466306166",
              "id": 4240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "238:10:21",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3154440367_by_1",
                "typeString": "int_const 3154440367"
              },
              "value": "0xbc04f0af"
            },
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Magic value to be returned upon successful reception of an NFT\n Equals to `bytes4(keccak256(\"onERC20Received(address,uint256,bytes)\"))`,\n which can be also obtained as `ERC20Receiver(0).onERC20Received.selector`",
            "id": 4250,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC20Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4243,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "523:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4245,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "538:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:31:21"
            },
            "returnParameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "569:6:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:8:21"
            },
            "scope": 4251,
            "src": "498:79:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4252,
        "src": "177:402:21"
      }
    ],
    "src": "0:579:21"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/main-sv/contracts/common/token/IERC20Receiver.sol",
    "exportedSymbols": {
      "IERC20Receiver": [
        4251
      ]
    },
    "id": 4252,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4238,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20 token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\n from ERC20 asset contracts.",
        "fullyImplemented": false,
        "id": 4251,
        "linearizedBaseContracts": [
          4251
        ],
        "name": "IERC20Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4241,
            "name": "ERC20_RECEIVED",
            "nodeType": "VariableDeclaration",
            "scope": 4251,
            "src": "205:43:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 4239,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "205:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786263303466306166",
              "id": 4240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "238:10:21",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3154440367_by_1",
                "typeString": "int_const 3154440367"
              },
              "value": "0xbc04f0af"
            },
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev Magic value to be returned upon successful reception of an NFT\n Equals to `bytes4(keccak256(\"onERC20Received(address,uint256,bytes)\"))`,\n which can be also obtained as `ERC20Receiver(0).onERC20Received.selector`",
            "id": 4250,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC20Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4243,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "523:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4245,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "538:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:31:21"
            },
            "returnParameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4250,
                  "src": "569:6:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:8:21"
            },
            "scope": 4251,
            "src": "498:79:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4252,
        "src": "177:402:21"
      }
    ],
    "src": "0:579:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2020-06-01T01:15:22.778Z",
  "devdoc": {
    "details": "Interface for any contract that wants to support safeTransfers from ERC20 asset contracts.",
    "methods": {
      "onERC20Received(address,uint256)": {
        "details": "Magic value to be returned upon successful reception of an NFT Equals to `bytes4(keccak256(\"onERC20Received(address,uint256,bytes)\"))`, which can be also obtained as `ERC20Receiver(0).onERC20Received.selector`"
      }
    },
    "title": "ERC20 token receiver interface"
  },
  "userdoc": {
    "methods": {}
  }
}