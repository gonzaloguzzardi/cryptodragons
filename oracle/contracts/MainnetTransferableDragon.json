{
  "contractName": "MainnetTransferableDragon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "blockchainId",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dragonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "NewDragon",
      "type": "event",
      "signature": "0x3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "_creationTime",
          "type": "uint64"
        },
        {
          "internalType": "uint32",
          "name": "_dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_motherId",
          "type": "uint32"
        }
      ],
      "name": "createDragon",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0b4cb527"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dragonIndexToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5d64aa68"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonById",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "motherId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentExperience",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "health",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "strength",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "agility",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "fortitude",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc9cf5570"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb1b0473c"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1407b500"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsCountByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd9b6e2f7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsIdsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0469e8ac"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getParents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "motherId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x242a0087"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "isEgg",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdfd4e4a4"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "genesLaboratoryAddress",
          "type": "address"
        }
      ],
      "name": "setGenesLaboratoryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98ae481d"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xfe55932a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensIdsOwnedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8ec251c3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        }
      ],
      "name": "setGatewayAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa35ff076"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "retrieveToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x6fbb7045"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "undoMapping",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa8def880"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "mapContractToSidechain",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x520104dc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sidechainAddress",
          "type": "address"
        }
      ],
      "name": "isMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0d6dd812"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferToGateway",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xbef36c49"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "197:2631:33:-;;;837:1:7;806:32;;;;;;;;;;;;;;;;;;;;379:95:33;8:9:-1;5:2;;;30:1;27;20:12;5:2;379:95:33;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;379:95:33;;;;;;;;;;;;;;;;;;;;;;;;;442:7;451:12;665:40:15;246:10;684:20;;665:18;;;:40;;;:::i;:::-;2015::17;1256:10;2034:20;;2015:18;;;:40;;;:::i;:::-;1259:51:18;862:10;1278:31;;1259:18;;;:51;;;:::i;:::-;564:10:14;555:6;;:19;;;;;;;;;;;;;;;;;;623:6;;;;;;;;;;;590:40;;619:1;590:40;;;;;;;;;;;;1411:1:7;1392:21;;:7;:21;;;;1384:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:7;1452:8;;:18;;;;;;;;;;;;;;;;;;1497:12;1481:13;;:28;;;;;;;;;;;;;;;;;;1304:213;;379:95:33;;197:2631;;1028:161:15;1119:10;1104:25;;:11;:25;;;;;1096:34;;;;;;1177:4;1141:20;:33;1162:11;1141:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1028:161;:::o;197:2631:33:-;;;;;;;",
  "deployedSourceMap": "197:2631:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;197:2631:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:135:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;809:135:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1717:132:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1717:132:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1717:132:6;;;;;;;;;;;;;;;;;3884:154:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3884:154:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3292:299;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3292:299:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1872:887:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1872:887:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1872:887:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1872:887:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1872:887:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1872:887:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1753:233:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1753:233:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1987:118:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1987:118:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2235:96:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5475:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5475:238:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2113:200:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2113:200:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1892:185:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1892:185:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6359:134:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6359:134:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2676:151:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2676:151:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1377:368:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1377:368:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;1186:54:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1186:54:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2680:181:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2680:181:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;714:326:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;714:326:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;714:326:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;714:326:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;714:326:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;714:326:33;;;;;;;;;;;;;;;:::i;:::-;;2273:182:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2273:182:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1469:140:14;;;:::i;:::-;;708:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1326:185:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1326:185:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1326:185:18;;;;;;;;;;;;;;;;;1086:92:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1525:239:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1525:239:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;4338:217:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4338:217:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;526:180:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;526:180:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;1048:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1048:321:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2586:119:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2586:119:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7212:278:17;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7212:278:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7212:278:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7212:278:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7212:278:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7212:278:17;;;;;;;;;;;;;;;:::i;:::-;;1994:831:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1994:831:33;;;;;;;;;;;;;;;;;:::i;:::-;;2713:635:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2713:635:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1857:122:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2321:257;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2321:257:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4884:147:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4884:147:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1789:109:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1789:109:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;3583:311:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3583:311:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3583:311:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3583:311:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3583:311:6;;;;;;;;;;;;:::i;:::-;;809:135:15;879:4;903:20;:33;924:11;903:33;;;;;;;;;;;;;;;;;;;;;;;;;;;896:40;;809:135;;;:::o;1717:132:6:-;1785:16;1821:12;:20;1834:6;1821:20;;;;;;;;;;;;;;;1814:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:132;;;:::o;3884:154:17:-;3943:7;3971:16;3979:7;3971;:16::i;:::-;3963:25;;;;;;4006:15;:24;4022:7;4006:24;;;;;;;;;;;;;;;;;;;;;3999:31;;3884:154;;;:::o;3292:299::-;3356:13;3372:16;3380:7;3372;:16::i;:::-;3356:32;;3413:5;3407:11;;:2;:11;;;;3399:20;;;;;;3452:5;3438:19;;:10;:19;;;:58;;;;3461:35;3478:5;3485:10;3461:16;:35::i;:::-;3438:58;3430:67;;;;;;3537:2;3510:15;:24;3526:7;3510:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3575:7;3571:2;3555:28;;3564:5;3555:28;;;;;;;;;;;;3292:299;;;:::o;1872:887:7:-;2098:13;2122:20;2153:22;2186:21;2218:23;2252:21;2284:16;2321;;;;;;;;;;;2304:55;;;:57;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2304:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2304:57:7;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2304:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:264;;;;;;;;;;;;;;2374:19;2396:23;2413:5;2396:16;:23::i;:::-;2374:45;;2432:7;2442:230;2465:5;2472:11;2485:13;2500:6;2508:9;2519:1;2543:14;2559:13;2574:15;2591:14;2629:16;2647:9;2658:13;;;;;;;;;;;2442:22;:230::i;:::-;2432:240;;2685:21;2691:10;2703:2;2685:5;:21::i;:::-;2722:29;2732:2;2744:5;2736:14;;;2722:29;;;;;;;;;;;;;;;;;;;;;;;;1872:887;;;;;;;;;;;;;:::o;1753:233:33:-;1817:4;1870:1;1842:30;;:16;:30;;;;1834:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:16;1920:58;;:26;:38;1947:10;1920:38;;;;;;;;;;;;;;;;;;;;;;;;;:58;;;1913:65;;1753:233;;;:::o;1987:118:6:-;2052:7;2079:18;2087:9;2079:7;:18::i;:::-;2072:25;;1987:118;;;:::o;2235:96:18:-;2279:7;2306:10;:17;;;;2299:24;;2235:96;:::o;5475:238:17:-;5566:39;5585:10;5597:7;5566:18;:39::i;:::-;5558:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5673:32;5687:4;5693:2;5697:7;5673:13;:32::i;:::-;5475:238;;;:::o;2113:200:6:-;2170:13;2185:10;2214:21;2238:7;2246:9;2238:18;;;;;;;;;;;;;;;;;;2214:42;;2275:6;:15;;;;;;;;;;;;2292:6;:12;;;;;;;;;;;;2267:38;;;;;;;;;;;;;;;2113:200;;;:::o;1892:185:18:-;1972:7;2008:16;2018:5;2008:9;:16::i;:::-;2000:5;:24;1992:33;;;;;;2043:12;:19;2056:5;2043:19;;;;;;;;;;;;;;;2063:5;2043:26;;;;;;;;;;;;;;;;2036:33;;1892:185;;;;:::o;6359:134:17:-;6446:39;6463:4;6469:2;6473:7;6446:39;;;;;;;;;;;;:16;:39::i;:::-;6359:134;;;:::o;2676:151:18:-;2734:7;2770:13;:11;:13::i;:::-;2762:5;:21;2754:30;;;;;;2802:10;2813:5;2802:17;;;;;;;;;;;;;;;;2795:24;;2676:151;;;:::o;1377:368:33:-;1491:1;1463:30;;:16;:30;;;;1455:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:1;1555:52;;:26;:38;1582:10;1555:38;;;;;;;;;;;;;;;;;;;;;;;;;:52;;;1547:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1721:16;1680:26;:38;1707:10;1680:38;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;1377:368;:::o;1186:54:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;2680:181:17:-;2735:7;2755:13;2771:11;:20;2783:7;2771:20;;;;;;;;;;;;;;;;;;;;;2755:36;;2827:1;2810:19;;:5;:19;;;;2802:28;;;;;;2848:5;2841:12;;;2680:181;;;:::o;714:326:33:-;833:8;;;;;;;;;;;819:22;;:10;:22;;;811:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:1;914:22;;:8;:22;;;;906:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:46;1006:8;1016;1026:5;986:19;:46::i;:::-;714:326;;;:::o;2273:182:17:-;2328:7;2373:1;2356:19;;:5;:19;;;;2348:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:34;:17;:24;2431:5;2413:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2406:41;;2273:182;;;:::o;1469:140:14:-;921:9;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:1;1531:40;;1552:6;;;;;;;;;;;1531:40;;;;;;;;;;;;1599:1;1582:6;;:19;;;;;;;;;;;;;;;;;;1469:140::o;708:78::-;745:7;772:6;;;;;;;;;;;765:13;;708:78;:::o;1326:185:18:-;1390:16;1444:1;1427:19;;:5;:19;;;;1419:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:12;:19;1497:5;1484:19;;;;;;;;;;;;;;;1477:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:185;;;:::o;1086:92:14:-;1126:4;1164:6;;;;;;;;;;;1150:20;;:10;:20;;;1143:27;;1086:92;:::o;1525:239:7:-;921:9:14;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:1:7;1630:36;;:22;:36;;;;1622:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:22;1715:16;;:41;;;;;;;;;;;;;;;;;;1525:239;:::o;4338:217:17:-;4424:10;4418:16;;:2;:16;;;;4410:25;;;;;;4483:8;4446:18;:30;4465:10;4446:30;;;;;;;;;;;;;;;:34;4477:2;4446:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4534:2;4507:40;;4522:10;4507:40;;;4538:8;4507:40;;;;;;;;;;;;;;;;;;;;;;4338:217;;:::o;526:180:33:-;921:9:14;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:1:33;608:21;;:7;:21;;;;600:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:7;680:8;;:18;;;;;;;;;;;;;;;;;;526:180;:::o;1048:321::-;921:9:14;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:1:33;1148:19;;:5;:19;;;;1140:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:1;1225:30;;:16;:30;;;;1217:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:16;1309:26;:33;1336:5;1309:33;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1048:321;;:::o;2586:119:6:-;2647:7;2674;2682:9;2674:18;;;;;;;;;;;;;;;;;;:23;;;2667:30;;2586:119;;;:::o;7212:278:17:-;7319:31;7332:4;7338:2;7342:7;7319:12;:31::i;:::-;7369:48;7392:4;7398:2;7402:7;7411:5;7369:22;:48::i;:::-;7361:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7212:278;;;;:::o;1994:831:33:-;2062:8;1426:10:6;1404:32;;:18;1412:9;1404:7;:18::i;:::-;:32;;;1396:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:1:33;2091:52;;:26;:38;2118:10;2091:38;;;;;;;;;;;;;;;;;;;;;;;;;:52;;;;2083:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:7;:14;;;;2218:8;:25;2210:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:21;2301:7;2309:8;2301:17;;;;;;;;;;;;;;;;;;2277:41;;2329:26;2358:28;2379:6;2358:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:28::i;:::-;2329:57;;2430:44;2443:10;2455:8;;;;;;;;;;;2465;2430:12;:44::i;:::-;2532:23;2574:8;;;;;;;;;;;2532:51;;2594:20;2646:13;;;;;;;;;;;2617:42;;:6;:25;;;;;;;;;;;;:42;;;:84;;2673:28;2692:8;2673:18;:28::i;:::-;2617:84;;;2662:8;2617:84;2594:107;;2712:7;:21;;;2734:10;2746:26;:38;2773:10;2746:38;;;;;;;;;;;;;;;;;;;;;;;;;2786:15;2803:13;2712:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2712:105:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2712:105:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2712:105:33;;;;1477:1:6;;;;1994:831:33;;:::o;2713:635:6:-;2785:12;2808;2831:15;2857:24;2892:13;2916:15;2942:14;2967:16;3002:21;3026:7;3034:9;3026:18;;;;;;;;;;;;;;;;;;3002:42;;3062:6;:11;;;3055:18;;3092:6;:12;;;;;;;;;;;;3084:20;;3126:6;:15;;;;;;;;;;;;3115:26;;3172:6;:24;;;;;;;;;;;;3152:44;;3216:6;:13;;;;;;;;;;;;3207:22;;3251:6;:15;;;;;;;;;;;;3240:26;;3287:6;:14;;;;;;;;;;;;3277:24;;3324:6;:16;;;;;;;;;;;;3312:28;;2713:635;;;;;;;;;;:::o;1857:122::-;1927:7;1954:17;1964:6;1954:9;:17::i;:::-;1947:24;;1857:122;;;:::o;2321:257::-;2373:4;2396:21;2420:7;2428:9;2420:18;;;;;;;;;;;;;;;;;;2396:42;;2449:26;2508:2;2485:6;:19;;;;;;;;;;;;2479:25;;:3;:25;2478:32;2449:61;;2553:6;:16;;;;;;;;;;;;2529:40;;:21;:40;2521:49;;;;2321:257;;;:::o;4884:147:17:-;4964:4;4988:18;:25;5007:5;4988:25;;;;;;;;;;;;;;;:35;5014:8;4988:35;;;;;;;;;;;;;;;;;;;;;;;;;4981:42;;4884:147;;;;:::o;1789:109:14:-;921:9;:7;:9::i;:::-;913:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:28;1881:8;1862:18;:28::i;:::-;1789:109;:::o;3583:311:6:-;3664:9;1426:10;1404:32;;:18;1412:9;1404:7;:18::i;:::-;:32;;;1396:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:21;3710:7;3718:9;3710:18;;;;;;;;;;;;;;;;;;3686:42;;3739:17;3759:23;3776:5;;3759:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3759:23:6;;;;;;:16;:23::i;:::-;3739:43;;3814:3;3801:16;;:9;:16;;3793:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:9;3863:6;:11;;:23;;;;1477:1;;3583:311;;;;:::o;7691:155:17:-;7748:4;7765:13;7781:11;:20;7793:7;7781:20;;;;;;;;;;;;;;;;;;;;;7765:36;;7836:1;7819:19;;:5;:19;;;;7812:26;;;7691:155;;;:::o;4286:320:6:-;4358:14;4385:32;4426:7;4385:49;;4479:1;4449:19;:26;:31;4445:74;;;4504:3;4497:10;;;;;;;4445:74;4584:2;4575:7;4571:16;4565:23;4555:33;;4540:59;;;;;:::o;5136:1278:7:-;5555:10;6259:1;5585:7;5612:633;;;;;;;;5645:1;5612:633;;;;;;5671:1;5612:633;;;;;;5707:13;5612:633;;;;;;5883:6;5612:633;;;;;;5918:9;5612:633;;;;;;5797:18;5612:633;;;;;;5964:15;5612:633;;;;;;6008:7;5612:633;;;;;;6044:9;5612:633;;;;;;6081:8;5612:633;;;;;;6119:10;5612:633;;;;;;6161:10;5612:633;;;;;;6210:19;5612:633;;;;;5585:671;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5585:671:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:675;5580:680;;6368:38;6388:2;6392:6;6400:5;6368:19;:38::i;:::-;5136:1278;;;;;;;;;;;;;;;:::o;3719:202:18:-;3783:24;3795:2;3799:7;3783:11;:24::i;:::-;3820:40;3848:2;3852:7;3820:27;:40::i;:::-;3873;3905:7;3873:31;:40::i;:::-;3719:202;;:::o;8215:249:17:-;8300:4;8317:13;8333:16;8341:7;8333;:16::i;:::-;8317:32;;8379:5;8368:16;;:7;:16;;;:51;;;;8412:7;8388:31;;:20;8400:7;8388:11;:20::i;:::-;:31;;;8368:51;:87;;;;8423:32;8440:5;8447:7;8423:16;:32::i;:::-;8368:87;8360:96;;;8215:249;;;;:::o;3211:245:18:-;3297:38;3317:4;3323:2;3327:7;3297:19;:38::i;:::-;3348:47;3381:4;3387:7;3348:32;:47::i;:::-;3408:40;3436:2;3440:7;3408:27;:40::i;:::-;3211:245;;;:::o;3104:1218:7:-;3208:18;3230:34;3258:5;3230:27;:34::i;:::-;3208:56;;3275:31;3325:13;;;;;;;;;;;3309:29;;:12;:29;;;3275:63;;3355:26;3351:964;;;3398:56;3415:8;;;;;;;;;;;3426:2;3430:16;3448:5;3398:16;:56::i;:::-;3469:46;3491:16;3509:5;3469:21;:46::i;:::-;3351:964;;;3671:5;3637:39;;:12;:30;3650:16;3637:30;;;;;;;;;;;;;;;;;;;;;:39;;;3633:671;;;3697:12;3712:28;3734:5;3712:21;:28::i;:::-;3697:43;;3800:7;3760:19;:37;3780:16;3760:37;;;;;;;;;;;:47;;;;3858:16;3827:19;:28;3847:7;3827:28;;;;;;;;;;;:47;;;;3926:4;3893:12;:30;3906:16;3893:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3951:18;3957:2;3961:7;3951:5;:18::i;:::-;3633:671;;;;4114:12;4129:19;:37;4149:16;4129:37;;;;;;;;;;;;4114:52;;4185:47;4202:8;;;;;;;;;;;4213:2;4217:7;4226:5;4185:16;:47::i;:::-;4251:37;4273:7;4282:5;4251:21;:37::i;:::-;3633:671;;3351:964;3104:1218;;;;;:::o;1085:114:12:-;1150:7;1177;:14;;;1170:21;;1085:114;;;:::o;11145:356:17:-;11267:4;11294:15;:2;:13;;;:15::i;:::-;11289:60;;11333:4;11326:11;;;;11289:60;11361:13;11393:2;11377:36;;;11414:10;11426:4;11432:7;11441:5;11377:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11377:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11377:70:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11377:70:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11377:70:17;;;;;;;;;;;;;;;;11361:86;;728:10;11476:16;;11466:26;;;:6;:26;;;;11458:35;;;11145:356;;;;;;;:::o;4680:3226:6:-;4755:12;4852:9;4864:2;4852:14;;4932:24;4969:4;4959:15;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;4959:15:6;;;;4932:42;;4987:12;5002:1;4987:16;;5060:6;5069:1;5060:10;;5055:129;5076:2;5072:1;:6;5055:129;;;5132:7;:13;;;5146:1;5132:16;;;;;;;;;;5109:11;5121:7;5109:20;;;;;;;;;;;:39;;;;;;;;;;;5163:9;;;;;;;5080:3;;;;;;;5055:129;;;;5239:6;5248:1;5239:10;;5234:128;5255:2;5251:1;:6;5234:128;;;5311:7;:12;;;5324:1;5311:15;;;;;;;;;;5288:11;5300:7;5288:20;;;;;;;;;;;:38;;;;;;;;;;;5341:9;;;;;;;5259:3;;;;;;;5234:128;;;;5425:6;5434:1;5425:10;;5420:173;5441:1;5437;:5;5420:173;;;5549:3;5532:21;;5537:1;5533;:5;5532:21;5507:7;:20;;;:47;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5507:47:6;5496:60;;5473:11;5485:7;5473:20;;;;;;;;;;;:83;;;;;;;;;;;5572:9;;;;;;;5444:3;;;;;;;5420:173;;;;5649:6;5658:1;5649:10;;5644:166;5665:1;5661;:5;5644:166;;;5766:3;5749:21;;5754:1;5750;:5;5749:21;5731:7;:13;;;:40;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5731:40:6;5720:53;;5697:11;5709:7;5697:20;;;;;;;;;;;:76;;;;;;;;;;;5789:9;;;;;;;5668:3;;;;;;;5644:166;;;;5869:6;5878:1;5869:10;;5864:169;5885:1;5881;:5;5864:169;;;5989:3;5972:21;;5977:1;5973;:5;5972:21;5951:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5951:43:6;5940:56;;5917:11;5929:7;5917:20;;;;;;;;;;;:79;;;;;;;;;;;6012:9;;;;;;;5888:3;;;;;;;5864:169;;;;6101:6;6110:1;6101:10;;6096:178;6117:1;6113;:5;6096:178;;;6230:3;6213:21;;6218:1;6214;:5;6213:21;6183:7;:25;;;:52;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6183:52:6;6172:65;;6149:11;6161:7;6149:20;;;;;;;;;;;:88;;;;;;;;;;;6253:9;;;;;;;6120:3;;;;;;;6096:178;;;;6339:6;6348:1;6339:10;;6334:175;6355:1;6351;:5;6334:175;;;6465:3;6448:21;;6453:1;6449;:5;6448:21;6421:7;:22;;;:49;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6421:49:6;6410:62;;6387:11;6399:7;6387:20;;;;;;;;;;;:85;;;;;;;;;;;6488:9;;;;;;;6358:3;;;;;;;6334:175;;;;6565:6;6574:1;6565:10;;6560:167;6581:1;6577;:5;6560:167;;;6683:3;6666:21;;6671:1;6667;:5;6666:21;6647:7;:14;;;:41;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6647:41:6;6636:54;;6613:11;6625:7;6613:20;;;;;;;;;;;:77;;;;;;;;;;;6706:9;;;;;;;6584:3;;;;;;;6560:167;;;;6785:6;6794:1;6785:10;;6780:169;6801:1;6797;:5;6780:169;;;6905:3;6888:21;;6893:1;6889;:5;6888:21;6867:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6867:43:6;6856:56;;6833:11;6845:7;6833:20;;;;;;;;;;;:79;;;;;;;;;;;6928:9;;;;;;;6804:3;;;;;;;6780:169;;;;7006:6;7015:1;7006:10;;7001:168;7022:1;7018;:5;7001:168;;;7125:3;7108:21;;7113:1;7109;:5;7108:21;7088:7;:15;;;:42;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7088:42:6;7077:55;;7054:11;7066:7;7054:20;;;;;;;;;;;:78;;;;;;;;;;;7148:9;;;;;;;7025:3;;;;;;;7001:168;;;;7228:6;7237:1;7228:10;;7223:170;7244:1;7240;:5;7223:170;;;7349:3;7332:21;;7337:1;7333;:5;7332:21;7310:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7310:44:6;7299:57;;7276:11;7288:7;7276:20;;;;;;;;;;;:80;;;;;;;;;;;7372:9;;;;;;;7247:3;;;;;;;7223:170;;;;7453:6;7462:1;7453:10;;7448:170;7469:1;7465;:5;7448:170;;;7574:3;7557:21;;7562:1;7558;:5;7557:21;7535:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7535:44:6;7524:57;;7501:11;7513:7;7501:20;;;;;;;;;;;:80;;;;;;;;;;;7597:9;;;;;;;7472:3;;;;;;;7448:170;;;;7696:6;7705:1;7696:10;;7691:179;7712:1;7708;:5;7691:179;;;7826:3;7809:21;;7814:1;7810;:5;7809:21;7778:7;:26;;;:53;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7778:53:6;7767:66;;7744:11;7756:7;7744:20;;;;;;;;;;;:89;;;;;;;;;;;7849:9;;;;;;;7715:3;;;;;;;7691:179;;;;7887:11;7880:18;;;;;4680:3226;;;:::o;8644:137:7:-;8715:4;8739:19;:34;8759:13;8739:34;;;;;;;;;;;;8732:41;;8644:137;;;:::o;2051:216:14:-;2145:1;2125:22;;:8;:22;;;;2117:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2222:8;2193:38;;2214:6;;;;;;;;;;;2193:38;;;;;;;;;;;;2251:8;2242:6;;:17;;;;;;;;;;;;;;;;;;2051:216;:::o;6422:210:7:-;6520:21;6544:7;6552:9;6544:18;;;;;;;;;;;;;;;;;;6520:42;;6588:6;6573;:12;;:21;;;;6619:5;6605:6;:11;;:19;;;;6422:210;;;;:::o;8715:194:17:-;8804:2;8781:11;:20;8793:7;8781:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8817:33;:17;:21;8835:2;8817:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8893:7;8889:2;8868:33;;8885:1;8868:33;;;;;;;;;;;;8715:194;;:::o;5212:186:18:-;5326:12;:16;5339:2;5326:16;;;;;;;;;;;;;;;:23;;;;5297:17;:26;5315:7;5297:26;;;;;;;;;;;:52;;;;5360:12;:16;5373:2;5360:16;;;;;;;;;;;;;;;5382:7;5360:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5360:30:18;;;;;;;;;;;;;;;;;;;;;;5212:186;;:::o;5599:164::-;5703:10;:17;;;;5676:15;:24;5692:7;5676:24;;;;;;;;;;;:44;;;;5731:10;5747:7;5731:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5731:24:18;;;;;;;;;;;;;;;;;;;;;;5599:164;:::o;10145:461:17:-;10259:4;10239:24;;:16;10247:7;10239;:16::i;:::-;:24;;;10231:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10341:1;10327:16;;:2;:16;;;;10319:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10400:23;10415:7;10400:14;:23::i;:::-;10436:35;:17;:23;10454:4;10436:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10482:33;:17;:21;10500:2;10482:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10551:2;10528:11;:20;10540:7;10528:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10590:7;10586:2;10571:27;;10580:4;10571:27;;;;;;;;;;;;10145:461;;;:::o;6388:1148:18:-;6654:22;6679:32;6709:1;6679:12;:18;6692:4;6679:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6654:57;;6722:18;6743:17;:26;6761:7;6743:26;;;;;;;;;;;;6722:47;;6890:14;6876:10;:28;6872:328;;6921:19;6943:12;:18;6956:4;6943:18;;;;;;;;;;;;;;;6962:14;6943:34;;;;;;;;;;;;;;;;6921:56;;7027:11;6994:12;:18;7007:4;6994:18;;;;;;;;;;;;;;;7013:10;6994:30;;;;;;;;;;;;;;;:44;;;;7144:10;7111:17;:30;7129:11;7111:30;;;;;;;;;;;:43;;;;6872:328;;7289:12;:18;7302:4;7289:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6388:1148;;;;:::o;11412:149:6:-;11491:18;11543:5;11549:2;11543:9;;;;;;;;;;;;;;;;;11537:16;;;11522:31;;11412:149;;;:::o;6640:772:7:-;6726:14;6751:13;6775:20;6806:13;6830:16;6857:25;6886:40;6920:5;6886:33;:40::i;:::-;6725:201;;;;;;;;;;;;6940:22;6973:14;6998:16;7025:15;7051:17;7079;7107:25;7136:41;7171:5;7136:34;:41::i;:::-;6939:238;;;;;;;;;;;;;;7190:214;7213:8;7223:6;7231:5;7238:13;7253:6;7261:9;7272:18;7313:15;7330:7;7339:9;7350:8;7360:10;7372;7384:19;7190:22;:214::i;:::-;6640:772;;;;;;;;;;;;;;;:::o;4330:798::-;4397:7;4420:14;4445:13;4469:20;4500:13;4524:16;4551:25;4580:40;4614:5;4580:33;:40::i;:::-;4419:201;;;;;;;;;;;;4634:22;4667:14;4692:16;4719:15;4745:17;4773;4801:25;4830:41;4865:5;4830:34;:41::i;:::-;4633:238;;;;;;;;;;;;;;4884:7;4894:204;4917:6;4925:5;4932:13;4947:6;4955:9;4966:18;5007:15;5024:7;5033:9;5044:8;5054:10;5066;5078:19;4894:22;:204::i;:::-;4884:214;;5118:2;5111:9;;;;;;;;;;;;;;;;4330:798;;;:::o;476:626:25:-;536:4;553:12;1059:7;1047:20;1039:28;;1093:1;1086:4;:8;1079:15;;;476:626;;;:::o;1207:91:12:-;1289:1;1271:7;:14;;;:19;;;;;;;;;;;1207:91;:::o;11668:175:17:-;11768:1;11732:38;;:15;:24;11748:7;11732:24;;;;;;;;;;;;;;;;;;;;;:38;;;11728:108;;11822:1;11787:15;:24;11803:7;11787:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11728:108;11668:175;:::o;1306:110:12:-;1387:21;1406:1;1387:7;:14;;;:18;;:21;;;;:::i;:::-;1370:7;:14;;:38;;;;1306:110;:::o;1274:212:13:-;1332:7;1365:1;1360;:6;;1352:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:9;1456:1;1452;:5;1440:17;;1477:1;1470:8;;;1274:212;;;;:::o;7914:1466:6:-;8009:13;8024:12;8038:19;8059:12;8073:15;8090:24;8137:12;8152:1;8137:16;;8196:6;8205:1;8196:10;;8191:135;8212:2;8208:1;:6;8191:135;;;8288:1;8284;:5;8274:4;8253:25;;:5;8269:1;8259:7;:11;8253:18;;;;;;;;;;;;;;;;;:25;8245:34;;;:45;52:12:-1;49:1;45:20;29:14;25:41;7:59;;8245:45:6;8236:54;;;;8305:9;;;;;;;8216:3;;;;;;;8191:135;;;;8369:27;8381:5;8388:7;8369:11;:27::i;:::-;8362:34;;8418:2;8407:13;;;;8471:6;8480:1;8471:10;;8466:196;8487:1;8483;:5;8466:196;;;8519:11;8546:5;8552:7;8546:14;;;;;;;;;;;;;;;;;8540:21;;;8533:29;;8519:43;;8590:1;8586;:5;8577:14;;;;;;;;;8622:4;8606:20;;;;8641:9;;;;;;;8466:196;8490:3;;;;;;;8466:196;;;;8705:6;8714:1;8705:10;;8700:189;8721:1;8717;:5;8700:189;;;8753:11;8780:5;8786:7;8780:14;;;;;;;;;;;;;;;;;8774:21;;;8767:29;;8753:43;;8824:1;8820;:5;8811:14;;;;;;;;;8849:4;8840:13;;;;8868:9;;;;;;;8700:189;8724:3;;;;;;;8700:189;;;;8935:6;8944:1;8935:10;;8930:192;8951:1;8947;:5;8930:192;;;8983:11;9010:5;9016:7;9010:14;;;;;;;;;;;;;;;;;9004:21;;;8997:29;;8983:43;;9054:1;9050;:5;9041:14;;;;;;;;;9082:4;9070:16;;;;9101:9;;;;;;;8930:192;8954:3;;;;;;;8930:192;;;;9177:6;9186:1;9177:10;;9172:201;9193:1;9189;:5;9172:201;;;9225:11;9252:5;9258:7;9252:14;;;;;;;;;;;;;;;;;9246:21;;;9239:29;;9225:43;;9296:1;9292;:5;9283:14;;;;;;;;;9333:4;9312:25;;;;9352:9;;;;;;;9172:201;9196:3;;;;;;;9172:201;;;;7914:1466;;;;;;;;:::o;9388:1784::-;9483:21;9506:13;9521:15;9538:14;9554:16;9572;9590:24;9627:12;9642:2;9627:17;;9697:6;9706:1;9697:10;;9692:198;9713:1;9709;:5;9692:198;;;9745:11;9772:5;9778:7;9772:14;;;;;;;;;;;;;;;;;9766:21;;;9759:29;;9745:43;;9816:1;9812;:5;9803:14;;;;;;;;;9850:4;9832:22;;;;9869:9;;;;;;;9692:198;9716:3;;;;;;;9692:198;;;;9933:6;9942:1;9933:10;;9928:190;9949:1;9945;:5;9928:190;;;9981:11;10008:5;10014:7;10008:14;;;;;;;;;;;;;;;;;10002:21;;;9995:29;;9981:43;;10052:1;10048;:5;10039:14;;;;;;;;;10078:4;10068:14;;;;10097:9;;;;;;;9928:190;9952:3;;;;;;;9928:190;;;;10163:6;10172:1;10163:10;;10158:192;10179:1;10175;:5;10158:192;;;10211:11;10238:5;10244:7;10238:14;;;;;;;;;;;;;;;;;10232:21;;;10225:29;;10211:43;;10282:1;10278;:5;10269:14;;;;;;;;;10310:4;10298:16;;;;10329:9;;;;;;;10158:192;10182:3;;;;;;;10158:192;;;;10394:6;10403:1;10394:10;;10389:191;10410:1;10406;:5;10389:191;;;10442:11;10469:5;10475:7;10469:14;;;;;;;;;;;;;;;;;10463:21;;;10456:29;;10442:43;;10513:1;10509;:5;10500:14;;;;;;;;;10540:4;10529:15;;;;10559:9;;;;;;;10389:191;10413:3;;;;;;;10389:191;;;;10626:6;10635:1;10626:10;;10621:193;10642:1;10638;:5;10621:193;;;10674:11;10701:5;10707:7;10701:14;;;;;;;;;;;;;;;;;10695:21;;;10688:29;;10674:43;;10745:1;10741;:5;10732:14;;;;;;;;;10774:4;10761:17;;;;10793:9;;;;;;;10621:193;10645:3;;;;;;;10621:193;;;;10861:6;10870:1;10861:10;;10856:193;10877:1;10873;:5;10856:193;;;10909:11;10936:5;10942:7;10936:14;;;;;;;;;;;;;;;;;10930:21;;;10923:29;;10909:43;;10980:1;10976;:5;10967:14;;;;;;;;;11009:4;10996:17;;;;11028:9;;;;;;;10856:193;10880:3;;;;;;;10856:193;;;;11129:5;11135:7;11129:14;;;;;;;;;;;;;;;;;11123:21;;;11101:43;;;;11155:9;;;;;;;9388:1784;;;;;;;;;;:::o;7420:1027:7:-;7868:21;7892:7;7900:8;7892:17;;;;;;;;;;;;;;;;;;7868:41;;7935:6;7920;:12;;:21;;;;7966:5;7952:6;:11;;:19;;;;8004:13;7982:6;:19;;;:35;;;;;;;;;;;;;;;;;;8043:6;8028;:12;;;:21;;;;;;;;;;;;;;;;;;8078:9;8060:6;:15;;;:27;;;;;;;;;;;;;;;;;;8125:18;8098:6;:24;;;:45;;;;;;;;;;;;;;;;;;8178:15;8154:6;:21;;;:39;;;;;;;;;;;;;;;;;;8220:7;8204:6;:13;;;:23;;;;;;;;;;;;;;;;;;8256:9;8238:6;:15;;;:27;;;;;;;;;;;;;;;;;;8293:8;8276:6;:14;;;:25;;;;;;;;;;;;;;;;;;8331:10;8312:6;:16;;;:29;;;;;;;;;;;;;;;;;;8371:10;8352:6;:16;;;:29;;;;;;;;;;;;;;;;;;8420:19;8392:6;:25;;;:47;;;;;;;;;;;;;;;;;;7420:1027;;;;;;;;;;;;;;;:::o;11180:224:6:-;11259:12;11289:6;11298:1;11289:10;;11284:113;11305:2;11301:1;:6;11284:113;;;11383:1;11379;:5;11369:4;11345:28;;:5;11364:1;11351:10;:14;11345:21;;;;;;;;;;;;;;;;;:28;11337:37;;;:48;52:12:-1;49:1;45:20;29:14;25:41;7:59;;11337:48:6;11329:56;;;;11309:3;;;;;;;11284:113;;;;11180:224;;;;:::o;197:2631:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../common/DragonFactory.sol\";\r\n\r\ncontract IMainnetGateway {\r\n  function depositDragon(address from, address to, uint256 uid, bytes calldata data) external;\r\n}\r\n\r\ncontract MainnetTransferableDragon is DragonFactory {\r\n\r\n    // map mainnet address to sidechain address\r\n    mapping (address => address) private _mainnetAddressToSidechain;\r\n\r\n    constructor(address gateway, uint8 blockchainId) DragonFactory(gateway, blockchainId) public {}\r\n\r\n    // Setter to update who the gateway is\r\n    function setGatewayAddress(address gateway) external onlyOwner {\r\n        require(gateway != address(0), \"gateway should have a valid address\");\r\n        _gateway = gateway;\r\n    }\r\n\r\n    function retrieveToken(address receiver, uint256 _tokenId, bytes memory _data) public {\r\n        require(msg.sender == _gateway, \"only the gateway is allowed to call this function\");\r\n        require(receiver != address(0), \"Receiver should be a valid address\");\r\n        _mintReceivedDragon(receiver, _tokenId, _data);\r\n    }\r\n\r\n    function undoMapping(address owner, address sidechainAddress) external onlyOwner {\r\n        require(owner != address(0), \"Invalid owner address to be mapped\");\r\n        require(sidechainAddress != address(0), \"Invalid sidechain address to be mapped\");\r\n        _mainnetAddressToSidechain[owner] = sidechainAddress;\r\n    }\r\n\r\n    function mapContractToSidechain(address sidechainAddress) external {\r\n        require(sidechainAddress != address(0), \"Invalid sidechain address to be mapped\");\r\n        require(_mainnetAddressToSidechain[msg.sender] == address(0), \"Address already mapped. Request owner to undo the mapping\");\r\n        _mainnetAddressToSidechain[msg.sender] = sidechainAddress;\r\n    }\r\n\r\n    function isMap(address sidechainAddress) external view returns (bool) {\r\n        require(sidechainAddress != address(0), \"Invalid sidechain address\");\r\n        return _mainnetAddressToSidechain[msg.sender] == sidechainAddress;\r\n    }\r\n\r\n    function transferToGateway(uint256 _tokenId) public onlyDragonOwner(_tokenId) {\r\n        require(_mainnetAddressToSidechain[msg.sender] != address(0), \"Blockchains should be mapped to allow transferences\");\r\n        require(_tokenId < dragons.length, \"Invalid token Id\");\r\n\r\n        Dragon storage dragon = dragons[_tokenId];\r\n        bytes memory encodedDragon = _encodeDragonToBytes(dragon);\r\n\r\n        // Transfer ownership\r\n        transferFrom(msg.sender, _gateway, _tokenId);\r\n\r\n        // Trigger trnsference in gateway\r\n\r\n        IMainnetGateway gateway = IMainnetGateway(_gateway);\r\n        uint originalTokenId = dragon.blockchainOriginId == _blockchainId ? _tokenId : _getForeignTokenId(_tokenId);\r\n        gateway.depositDragon(msg.sender, _mainnetAddressToSidechain[msg.sender], originalTokenId, encodedDragon);\r\n    }\r\n}",
  "sourcePath": "/usr/src/app/side-sv/contracts/mainnet/MainnetTransferableDragon.sol",
  "ast": {
    "absolutePath": "/usr/src/app/side-sv/contracts/mainnet/MainnetTransferableDragon.sol",
    "exportedSymbols": {
      "IMainnetGateway": [
        8225
      ],
      "MainnetTransferableDragon": [
        8469
      ]
    },
    "id": 8470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8212,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/usr/src/app/side-sv/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 8213,
        "nodeType": "ImportDirective",
        "scope": 8470,
        "sourceUnit": 2201,
        "src": "27:37:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 8225,
        "linearizedBaseContracts": [
          8225
        ],
        "name": "IMainnetGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 8224,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "121:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "135:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8219,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "147:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8221,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "160:19:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8220,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:60:33"
            },
            "returnParameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:33"
            },
            "scope": 8225,
            "src": "98:92:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8470,
        "src": "68:125:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8226,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2200,
              "src": "235:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2200",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 8227,
            "nodeType": "InheritanceSpecifier",
            "src": "235:13:33"
          }
        ],
        "contractDependencies": [
          1551,
          2200,
          2842,
          2893,
          3811,
          4168,
          4178,
          4365,
          4392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8469,
        "linearizedBaseContracts": [
          8469,
          2200,
          1551,
          2842,
          4168,
          4392,
          3811,
          4365,
          2893,
          4178
        ],
        "name": "MainnetTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8231,
            "name": "_mainnetAddressToSidechain",
            "nodeType": "VariableDeclaration",
            "scope": 8469,
            "src": "307:63:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 8230,
              "keyType": {
                "id": 8228,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:28:33",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 8229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "327:7:33",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "472:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8243,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8238,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8233,
                    "src": "442:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8239,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8235,
                    "src": "451:12:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8240,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8237,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2200,
                  "src": "428:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2200_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:36:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8233,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "391:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8235,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "408:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8234,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:37:33"
            },
            "returnParameters": {
              "id": 8241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:33"
            },
            "scope": 8469,
            "src": "379:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8263,
              "nodeType": "Block",
              "src": "589:117:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8251,
                          "name": "gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8245,
                          "src": "608:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "627:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "619:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "608:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "676174657761792073686f756c64206861766520612076616c69642061646472657373",
                        "id": 8256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:37:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        },
                        "value": "gateway should have a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        }
                      ],
                      "id": 8250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "600:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "600:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8258,
                  "nodeType": "ExpressionStatement",
                  "src": "600:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8259,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "680:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8260,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8245,
                      "src": "691:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "680:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8262,
                  "nodeType": "ExpressionStatement",
                  "src": "680:18:33"
                }
              ]
            },
            "documentation": null,
            "id": 8264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8248,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8247,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2775,
                  "src": "579:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "579:9:33"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8264,
                  "src": "553:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:17:33"
            },
            "returnParameters": {
              "id": 8249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:33"
            },
            "scope": 8469,
            "src": "526:180:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8296,
              "nodeType": "Block",
              "src": "800:240:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "819:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "819:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8276,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1620,
                          "src": "833:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "819:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "843:51:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 8273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "811:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:84:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8280,
                  "nodeType": "ExpressionStatement",
                  "src": "811:84:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8282,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8266,
                          "src": "914:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "934:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "926:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "914:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 8287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 8281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "906:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8289,
                  "nodeType": "ExpressionStatement",
                  "src": "906:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8291,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8266,
                        "src": "1006:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8292,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8268,
                        "src": "1016:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8293,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8270,
                        "src": "1026:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8290,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "986:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 8294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8295,
                  "nodeType": "ExpressionStatement",
                  "src": "986:46:33"
                }
              ]
            },
            "documentation": null,
            "id": 8297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8266,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "737:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8268,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "755:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8270,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "773:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8269,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "736:56:33"
            },
            "returnParameters": {
              "id": 8272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:33"
            },
            "scope": 8469,
            "src": "714:326:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8330,
              "nodeType": "Block",
              "src": "1129:240:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8307,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8299,
                          "src": "1148:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1165:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1157:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1157:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1148:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 8312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1169:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 8306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1140:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8314,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8316,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "1225:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1253:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1245:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1245:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1225:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1257:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1217:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8323,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8324,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1309:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8326,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8325,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8299,
                        "src": "1336:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1309:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8327,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8301,
                      "src": "1345:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1309:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8329,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:52:33"
                }
              ]
            },
            "documentation": null,
            "id": 8331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8304,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8303,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2775,
                  "src": "1119:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1119:9:33"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8299,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8331,
                  "src": "1069:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8301,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8331,
                  "src": "1084:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:41:33"
            },
            "returnParameters": {
              "id": 8305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:33"
            },
            "scope": 8469,
            "src": "1048:321:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8364,
              "nodeType": "Block",
              "src": "1444:301:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8337,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8333,
                          "src": "1463:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1491:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1483:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1463:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1495:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1455:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8344,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8346,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8231,
                            "src": "1555:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8349,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8347,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11203,
                              "src": "1582:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1582:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1555:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1597:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1555:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 8354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:59:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 8345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1547:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1547:122:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8356,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:122:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8357,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1680:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8360,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "1707:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1707:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1680:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8361,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8333,
                      "src": "1721:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8363,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:57:33"
                }
              ]
            },
            "documentation": null,
            "id": 8365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToSidechain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8333,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8365,
                  "src": "1409:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1408:26:33"
            },
            "returnParameters": {
              "id": 8335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:33"
            },
            "scope": 8469,
            "src": "1377:368:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8388,
              "nodeType": "Block",
              "src": "1823:163:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8373,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8367,
                          "src": "1842:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1870:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1862:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1862:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1842:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e2061646472657373",
                        "id": 8378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        },
                        "value": "Invalid sidechain address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        }
                      ],
                      "id": 8372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1834:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8380,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8381,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1920:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8384,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "1947:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1947:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1920:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8385,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8367,
                      "src": "1962:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1920:58:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8371,
                  "id": 8387,
                  "nodeType": "Return",
                  "src": "1913:65:33"
                }
              ]
            },
            "documentation": null,
            "id": 8389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8367,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8389,
                  "src": "1768:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1767:26:33"
            },
            "returnParameters": {
              "id": 8371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8389,
                  "src": "1817:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:6:33"
            },
            "scope": 8469,
            "src": "1753:233:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8467,
              "nodeType": "Block",
              "src": "2072:753:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8398,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8231,
                            "src": "2091:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8401,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11203,
                              "src": "2118:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2118:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2091:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2141:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2133:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2091:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 8406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2145:53:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 8397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "2083:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:116:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8408,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:116:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8410,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8391,
                          "src": "2218:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8411,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2229:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 8412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2229:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2218:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 8414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:18:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 8409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "2210:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:54:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8416,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:54:33"
                },
                {
                  "assignments": [
                    8418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8418,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2277:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8417,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2277:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8422,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8419,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2301:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 8421,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8420,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8391,
                      "src": "2309:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2301:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2277:41:33"
                },
                {
                  "assignments": [
                    8424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8424,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2329:26:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8423,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2329:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8428,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8426,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8418,
                        "src": "2379:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 8425,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "2358:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:28:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2329:57:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "2443:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2443:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8432,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2455:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8433,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8391,
                        "src": "2465:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8429,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3511
                      ],
                      "referencedDeclaration": 3511,
                      "src": "2430:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:44:33"
                },
                {
                  "assignments": [
                    8437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8437,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2532:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                        "typeString": "contract IMainnetGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8436,
                        "name": "IMainnetGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8225,
                        "src": "2532:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8441,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8439,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2574:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8438,
                      "name": "IMainnetGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8225,
                      "src": "2558:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMainnetGateway_$8225_$",
                        "typeString": "type(contract IMainnetGateway)"
                      }
                    },
                    "id": 8440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:25:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                      "typeString": "contract IMainnetGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:51:33"
                },
                {
                  "assignments": [
                    8443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8443,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2594:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8442,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8453,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 8447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8444,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8418,
                          "src": "2617:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 8445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2617:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 8446,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "2646:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2617:42:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8450,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8391,
                          "src": "2692:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8449,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "2673:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 8451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2673:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2617:84:33",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 8448,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8391,
                      "src": "2662:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2594:107:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "2734:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2734:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 8459,
                          "name": "_mainnetAddressToSidechain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8231,
                          "src": "2746:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 8462,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "2773:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2773:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2746:38:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8463,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "2786:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8464,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8424,
                        "src": "2803:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8454,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8437,
                        "src": "2712:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "id": 8456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8224,
                      "src": "2712:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 8465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:105:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8466,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:105:33"
                }
              ]
            },
            "documentation": null,
            "id": 8468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8394,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8391,
                    "src": "2062:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8393,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "2046:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2046:25:33"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8391,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8468,
                  "src": "2021:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:18:33"
            },
            "returnParameters": {
              "id": 8396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2072:0:33"
            },
            "scope": 8469,
            "src": "1994:831:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8470,
        "src": "197:2631:33"
      }
    ],
    "src": "0:2828:33"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/side-sv/contracts/mainnet/MainnetTransferableDragon.sol",
    "exportedSymbols": {
      "IMainnetGateway": [
        8225
      ],
      "MainnetTransferableDragon": [
        8469
      ]
    },
    "id": 8470,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8212,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/usr/src/app/side-sv/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 8213,
        "nodeType": "ImportDirective",
        "scope": 8470,
        "sourceUnit": 2201,
        "src": "27:37:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 8225,
        "linearizedBaseContracts": [
          8225
        ],
        "name": "IMainnetGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 8224,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8215,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "121:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "135:10:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8219,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "147:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8221,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8224,
                  "src": "160:19:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8220,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:60:33"
            },
            "returnParameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:33"
            },
            "scope": 8225,
            "src": "98:92:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 8470,
        "src": "68:125:33"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8226,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2200,
              "src": "235:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2200",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 8227,
            "nodeType": "InheritanceSpecifier",
            "src": "235:13:33"
          }
        ],
        "contractDependencies": [
          1551,
          2200,
          2842,
          2893,
          3811,
          4168,
          4178,
          4365,
          4392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8469,
        "linearizedBaseContracts": [
          8469,
          2200,
          1551,
          2842,
          4168,
          4392,
          3811,
          4365,
          2893,
          4178
        ],
        "name": "MainnetTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8231,
            "name": "_mainnetAddressToSidechain",
            "nodeType": "VariableDeclaration",
            "scope": 8469,
            "src": "307:63:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 8230,
              "keyType": {
                "id": 8228,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "307:28:33",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 8229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "327:7:33",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8242,
              "nodeType": "Block",
              "src": "472:2:33",
              "statements": []
            },
            "documentation": null,
            "id": 8243,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8238,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8233,
                    "src": "442:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 8239,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8235,
                    "src": "451:12:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 8240,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8237,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2200,
                  "src": "428:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2200_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:36:33"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8233,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "391:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8235,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8243,
                  "src": "408:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8234,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:37:33"
            },
            "returnParameters": {
              "id": 8241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:33"
            },
            "scope": 8469,
            "src": "379:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8263,
              "nodeType": "Block",
              "src": "589:117:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8251,
                          "name": "gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8245,
                          "src": "608:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "627:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "619:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "608:21:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "676174657761792073686f756c64206861766520612076616c69642061646472657373",
                        "id": 8256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:37:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        },
                        "value": "gateway should have a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7646fb7da931c47ca7774c2460d4ff3191e671108aed2d00c38dab3a1dfd4cf1",
                          "typeString": "literal_string \"gateway should have a valid address\""
                        }
                      ],
                      "id": 8250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "600:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "600:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8258,
                  "nodeType": "ExpressionStatement",
                  "src": "600:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8259,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "680:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8260,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8245,
                      "src": "691:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "680:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8262,
                  "nodeType": "ExpressionStatement",
                  "src": "680:18:33"
                }
              ]
            },
            "documentation": null,
            "id": 8264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8248,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8247,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2775,
                  "src": "579:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "579:9:33"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8264,
                  "src": "553:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:17:33"
            },
            "returnParameters": {
              "id": 8249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:33"
            },
            "scope": 8469,
            "src": "526:180:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8296,
              "nodeType": "Block",
              "src": "800:240:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "819:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "819:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 8276,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1620,
                          "src": "833:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "819:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "843:51:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 8273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "811:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:84:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8280,
                  "nodeType": "ExpressionStatement",
                  "src": "811:84:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8282,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8266,
                          "src": "914:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "934:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "926:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "914:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 8287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 8281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "906:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:69:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8289,
                  "nodeType": "ExpressionStatement",
                  "src": "906:69:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8291,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8266,
                        "src": "1006:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8292,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8268,
                        "src": "1016:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8293,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8270,
                        "src": "1026:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8290,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "986:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 8294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:46:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8295,
                  "nodeType": "ExpressionStatement",
                  "src": "986:46:33"
                }
              ]
            },
            "documentation": null,
            "id": 8297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8266,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "737:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8268,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "755:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8270,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 8297,
                  "src": "773:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8269,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "736:56:33"
            },
            "returnParameters": {
              "id": 8272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:33"
            },
            "scope": 8469,
            "src": "714:326:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8330,
              "nodeType": "Block",
              "src": "1129:240:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8307,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8299,
                          "src": "1148:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1165:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1157:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1157:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1148:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 8312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1169:36:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 8306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1140:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8314,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8316,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "1225:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1253:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1245:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1245:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1225:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1257:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1217:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8323,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8324,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1309:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8326,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8325,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8299,
                        "src": "1336:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1309:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8327,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8301,
                      "src": "1345:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1309:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8329,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:52:33"
                }
              ]
            },
            "documentation": null,
            "id": 8331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8304,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8303,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2775,
                  "src": "1119:9:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1119:9:33"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8299,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 8331,
                  "src": "1069:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8301,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8331,
                  "src": "1084:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:41:33"
            },
            "returnParameters": {
              "id": 8305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:33"
            },
            "scope": 8469,
            "src": "1048:321:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8364,
              "nodeType": "Block",
              "src": "1444:301:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8337,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8333,
                          "src": "1463:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1491:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1483:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1483:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1463:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e206164647265737320746f206265206d6170706564",
                        "id": 8342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1495:40:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        },
                        "value": "Invalid sidechain address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba13b8e7778eb7bbcd7d0620e064432b7ec8244ba97dc8ec427a00bfd37a04d0",
                          "typeString": "literal_string \"Invalid sidechain address to be mapped\""
                        }
                      ],
                      "id": 8336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1455:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:81:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8344,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:81:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8346,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8231,
                            "src": "1555:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8349,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8347,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11203,
                              "src": "1582:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1582:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1555:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1597:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1555:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 8354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:59:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 8345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1547:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1547:122:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8356,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:122:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8357,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1680:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8360,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "1707:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1707:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1680:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8361,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8333,
                      "src": "1721:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8363,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:57:33"
                }
              ]
            },
            "documentation": null,
            "id": 8365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToSidechain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8333,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8365,
                  "src": "1409:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1408:26:33"
            },
            "returnParameters": {
              "id": 8335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:33"
            },
            "scope": 8469,
            "src": "1377:368:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8388,
              "nodeType": "Block",
              "src": "1823:163:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8373,
                          "name": "sidechainAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8367,
                          "src": "1842:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1870:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1862:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1862:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1842:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642073696465636861696e2061646472657373",
                        "id": 8378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        },
                        "value": "Invalid sidechain address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d68a66e6dc90ac267cfb1c7886be2cecf35ac4a6cea3704c9f72e96e2d03ae9a",
                          "typeString": "literal_string \"Invalid sidechain address\""
                        }
                      ],
                      "id": 8372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "1834:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8380,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8381,
                        "name": "_mainnetAddressToSidechain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8231,
                        "src": "1920:26:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 8384,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "1947:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1947:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1920:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8385,
                      "name": "sidechainAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8367,
                      "src": "1962:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1920:58:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8371,
                  "id": 8387,
                  "nodeType": "Return",
                  "src": "1913:65:33"
                }
              ]
            },
            "documentation": null,
            "id": 8389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8367,
                  "name": "sidechainAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 8389,
                  "src": "1768:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1767:26:33"
            },
            "returnParameters": {
              "id": 8371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8389,
                  "src": "1817:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1816:6:33"
            },
            "scope": 8469,
            "src": "1753:233:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8467,
              "nodeType": "Block",
              "src": "2072:753:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8398,
                            "name": "_mainnetAddressToSidechain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8231,
                            "src": "2091:26:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 8401,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8399,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11203,
                              "src": "2118:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2118:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2091:38:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2141:1:33",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2133:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2091:52:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 8406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2145:53:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 8397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "2083:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:116:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8408,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:116:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8410,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8391,
                          "src": "2218:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8411,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2229:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 8412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2229:14:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2218:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 8414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:18:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 8409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11206,
                        11207
                      ],
                      "referencedDeclaration": 11207,
                      "src": "2210:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:54:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8416,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:54:33"
                },
                {
                  "assignments": [
                    8418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8418,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2277:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8417,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2277:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8422,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 8419,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2301:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 8421,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 8420,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8391,
                      "src": "2309:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2301:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2277:41:33"
                },
                {
                  "assignments": [
                    8424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8424,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2329:26:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 8423,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2329:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8428,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8426,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8418,
                        "src": "2379:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 8425,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "2358:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 8427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:28:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2329:57:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "2443:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2443:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8432,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2455:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8433,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8391,
                        "src": "2465:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8429,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3511
                      ],
                      "referencedDeclaration": 3511,
                      "src": "2430:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8435,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:44:33"
                },
                {
                  "assignments": [
                    8437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8437,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2532:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                        "typeString": "contract IMainnetGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 8436,
                        "name": "IMainnetGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 8225,
                        "src": "2532:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8441,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8439,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2574:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8438,
                      "name": "IMainnetGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8225,
                      "src": "2558:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMainnetGateway_$8225_$",
                        "typeString": "type(contract IMainnetGateway)"
                      }
                    },
                    "id": 8440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:25:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                      "typeString": "contract IMainnetGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:51:33"
                },
                {
                  "assignments": [
                    8443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8443,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 8467,
                      "src": "2594:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8442,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8453,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 8447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8444,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8418,
                          "src": "2617:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 8445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2617:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 8446,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "2646:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2617:42:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8450,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8391,
                          "src": "2692:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8449,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "2673:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 8451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2673:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2617:84:33",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 8448,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8391,
                      "src": "2662:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2594:107:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11203,
                          "src": "2734:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2734:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 8459,
                          "name": "_mainnetAddressToSidechain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8231,
                          "src": "2746:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 8462,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "2773:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2773:10:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2746:38:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8463,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8443,
                        "src": "2786:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8464,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8424,
                        "src": "2803:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8454,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8437,
                        "src": "2712:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMainnetGateway_$8225",
                          "typeString": "contract IMainnetGateway"
                        }
                      },
                      "id": 8456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8224,
                      "src": "2712:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 8465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:105:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8466,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:105:33"
                }
              ]
            },
            "documentation": null,
            "id": 8468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8394,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8391,
                    "src": "2062:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8393,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "2046:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2046:25:33"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8391,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8468,
                  "src": "2021:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:18:33"
            },
            "returnParameters": {
              "id": 8396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2072:0:33"
            },
            "scope": 8469,
            "src": "1994:831:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8470,
        "src": "197:2631:33"
      }
    ],
    "src": "0:2828:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "12345": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dragonId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "genes",
              "type": "uint256"
            }
          ],
          "name": "NewDragon",
          "type": "event",
          "signature": "0x3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0xCB1BcC36E774F15b4a01F92163fB265d7d110028",
      "transactionHash": "0x06d9ed57769c5e621e03f58fb1646eddc7f1eb5a414f848561bcb3346b972a7f"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2021-02-16T20:51:45.855Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createDragon(string,uint64,uint32,uint32)": {
        "notice": "Creates new Dragon and give it to its creator."
      },
      "getDragonsIdsByOwner(address)": {
        "notice": "***************************************************************************************** PUBLIC METHODS*******************************************************************************************"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setName(uint256,string)": {
        "notice": "***************************************************************************************** ONLY OWNER ACTIONS*******************************************************************************************"
      }
    }
  }
}