{
  "contractName": "DappchainTransferableDragon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "blockchainId",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dragonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewDragon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "_creationTime",
          "type": "uint64"
        },
        {
          "internalType": "uint32",
          "name": "_dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_motherId",
          "type": "uint32"
        }
      ],
      "name": "createDragon",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dragonIndexToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonById",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "dadId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "motherId",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "currentExperience",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "health",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "strength",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "agility",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "fortitude",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getDragonOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsCountByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDragonsIdsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "getParents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "motherId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dadId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        }
      ],
      "name": "isEgg",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dragonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensIdsOwnedBy",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "gateway",
          "type": "address"
        }
      ],
      "name": "setGatewayAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "retrieveToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mainnetAddress",
          "type": "address"
        }
      ],
      "name": "undoMapping",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "mainnetAddress",
          "type": "address"
        }
      ],
      "name": "mapContractToMainnet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferToGateway",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610218576000357c01000000000000000000000000000000000000000000000000000000009004806370a0823111610137578063b1b0473c116100ca578063d9b6e2f711610099578063d9b6e2f714610dab578063dfd4e4a414610e03578063e985e9c514610e49578063f2fde38b14610ec5578063fe55932a14610f0957610218565b8063b1b0473c14610b7f578063b88d4fde14610bc1578063bef36c4914610cc6578063c9cf557014610cf457610218565b80638f32d59b116101065780638f32d59b14610a65578063a22cb46514610a87578063a35ff07614610ad7578063a8def88014610b1b57610218565b806370a0823114610920578063715018a6146109785780638da5cb5b146109825780638ec251c3146109cc57610218565b8063242a0087116101af5780635d64aa681161017e5780635d64aa681461071b57806362635ed7146107895780636352211e146107cd5780636fbb70451461083b57610218565b8063242a0087146105c05780632f745c591461060957806342842e0e1461066b5780634f6ccce7146106d957610218565b80630b4cb527116101eb5780630b4cb527146103d75780631407b500146104c657806318160ddd1461053457806323b872dd1461055257610218565b806301ffc9a71461021d5780630469e8ac14610282578063081812fc1461031b578063095ea7b314610389575b600080fd5b6102686004803603602081101561023357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f8c565b604051808215151515815260200191505060405180910390f35b6102c46004803603602081101561029857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ff3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103075780820151818401526020810190506102ec565b505050509050019250505060405180910390f35b6103476004803603602081101561033157600080fd5b810190808035906020019092919050505061108a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d56004803603604081101561039f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d9565b005b6104c4600480360360808110156103ed57600080fd5b810190808035906020019064010000000081111561040a57600080fd5b82018360208201111561041c57600080fd5b8035906020019184600183028401116401000000008311171561043e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803567ffffffffffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff16906020019092919050505061121a565b005b6104f2600480360360208110156104dc57600080fd5b8101908080359060200190929190505050611294565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61053c6112a6565b6040518082815260200191505060405180910390f35b6105be6004803603606081101561056857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112b3565b005b6105ec600480360360208110156105d657600080fd5b8101908080359060200190929190505050611322565b604051808381526020018281526020019250505060405180910390f35b6106556004803603604081101561061f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061138a565b6040518082815260200191505060405180910390f35b6106d76004803603606081101561068157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113fd565b005b610705600480360360208110156106ef57600080fd5b810190808035906020019092919050505061141d565b6040518082815260200191505060405180910390f35b6107476004803603602081101561073157600080fd5b8101908080359060200190929190505050611451565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107cb6004803603602081101561079f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611484565b005b6107f9600480360360208110156107e357600080fd5b810190808035906020019092919050505061166f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61091e6004803603606081101561085157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561089857600080fd5b8201836020820111156108aa57600080fd5b803590602001918460018302840111640100000000831117156108cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116eb565b005b6109626004803603602081101561093657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611827565b6040518082815260200191505060405180910390f35b610980611919565b005b61098a611a37565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a0e600480360360208110156109e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a61565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a51578082015181840152602081019050610a36565b505050509050019250505060405180910390f35b610a6d611b9b565b604051808215151515815260200191505060405180910390f35b610ad560048036036040811015610a9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611bf3565b005b610b1960048036036020811015610aed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d2d565b005b610b7d60048036036040811015610b3157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dce565b005b610bab60048036036020811015610b9557600080fd5b8101908080359060200190929190505050611fb9565b6040518082815260200191505060405180910390f35b610cc460048036036080811015610bd757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c3e57600080fd5b820183602082011115610c5057600080fd5b80359060200191846001830284011164010000000083111715610c7257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611fe1565b005b610cf260048036036020811015610cdc57600080fd5b8101908080359060200190929190505050612053565b005b610d2060048036036020811015610d0a57600080fd5b8101908080359060200190929190505050612681565b604051808981526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018561ffff1661ffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff1681526020018261ffff1661ffff1681526020019850505050505050505060405180910390f35b610ded60048036036020811015610dc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612758565b6040518082815260200191505060405180910390f35b610e2f60048036036020811015610e1957600080fd5b810190808035906020019092919050505061276a565b604051808215151515815260200191505060405180910390f35b610eab60048036036040811015610e5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127d8565b604051808215151515815260200191505060405180910390f35b610f0760048036036020811015610edb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061286c565b005b610f8a60048036036040811015610f1f57600080fd5b810190808035906020019092919080359060200190640100000000811115610f4657600080fd5b820183602082011115610f5857600080fd5b80359060200191846001830284011164010000000083111715610f7a57600080fd5b90919293919293905050506128d5565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561107e57602002820191906000526020600020905b81548152602001906001019080831161106a575b50505050509050919050565b600061109582612a7a565b61109e57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006110e48261166f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561111f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061115f575061115e81336127d8565b5b61116857600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006403641cde7e9050600061122f86612aec565b905060006112408287858888612b18565b905061124c3382612b78565b7f3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f8184604051808381526020018281526020019250505060405180910390a150505050505050565b600061129f8261166f565b9050919050565b6000600780549050905090565b6112bd3382612b99565b611312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806151ec6032913960400191505060405180910390fd5b61131d838383612c2e565b505050565b6000806000600a848154811061133457fe5b9060005260206000209060040201905080600201600c9054906101000a900463ffffffff168160020160089054906101000a900463ffffffff168163ffffffff1691508063ffffffff1690509250925050915091565b600061139583611827565b82106113a057600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106113ea57fe5b9060005260206000200154905092915050565b61141883838360405180602001604052806000815250611fe1565b505050565b60006114276112a6565b821061143257600080fd5b6007828154811061143f57fe5b90600052602060002001549050919050565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061527e6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806152456039913960400191505060405180910390fd5b80601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116e257600080fd5b80915050919050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806152de6031913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611817576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806151486022913960400191505060405180910390fd5b611822838383612c52565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b611912600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612dbe565b9050919050565b611921611b9b565b611976576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806151a46026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b8f57602002820191906000526020600020905b815481526020019060010190808311611b7b575b50505050509050919050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c2c57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611d35611b9b565b611d8a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806151a46026913960400191505060405180910390fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611dd6611b9b565b611e2b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806151a46026913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eb1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806151ca6022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061527e6024913960400191505060405180910390fd5b80601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600a8281548110611fc857fe5b9060005260206000209060040201600101549050919050565b611fec8484846112b3565b611ff884848484612dcc565b61204d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806152a2603c913960400191505060405180910390fd5b50505050565b803373ffffffffffffffffffffffffffffffffffffffff166120748261166f565b73ffffffffffffffffffffffffffffffffffffffff16146120fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f596f7520646f6e2774206f776e207468697320647261676f6e0000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156121e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806153376033913960400191505060405180910390fd5b600a80549050821061225c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c696420746f6b656e2049640000000000000000000000000000000081525060200191505060405180910390fd5b6000600a838154811061226b57fe5b90600052602060002090600402019050606061242782604051806101a001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160028201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160149054906101000a900461ffff1661ffff1661ffff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681526020016002820160189054906101000a900461ffff1661ffff1661ffff16815260200160028201601a9054906101000a900461ffff1661ffff1661ffff16815260200160028201601c9054906101000a900461ffff1661ffff1661ffff16815260200160028201601e9054906101000a900461ffff1661ffff1661ffff1681526020016003820160009054906101000a900460ff1660ff1660ff1681525050612fed565b905061245633601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866112b3565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600c60009054906101000a900460ff1660ff168460030160009054906101000a900460ff1660ff16146124ba576124b586613874565b6124bc565b855b90508173ffffffffffffffffffffffffffffffffffffffff16632492fbeb33601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156126125780820151818401526020810190506125f7565b50505050905090810190601f16801561263f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561266157600080fd5b505af1158015612675573d6000803e3d6000fd5b50505050505050505050565b6000806000806000806000806000600a8a8154811061269c57fe5b90600052602060002090600402019050806001015498508060020160089054906101000a900463ffffffff16975080600201600c9054906101000a900463ffffffff1696508060020160109054906101000a900463ffffffff1695508060020160169054906101000a900461ffff1694508060020160189054906101000a900461ffff16935080600201601a9054906101000a900461ffff16925080600201601c9054906101000a900461ffff16915050919395975091939597565b600061276382611827565b9050919050565b600080600a838154811061277a57fe5b906000526020600020906004020190506000603c8260020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16420302905081600201601e9054906101000a900461ffff1661ffff16811092505050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612874611b9b565b6128c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806151a46026913960400191505060405180910390fd5b6128d281613891565b50565b823373ffffffffffffffffffffffffffffffffffffffff166128f68261166f565b73ffffffffffffffffffffffffffffffffffffffff161461297f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f596f7520646f6e2774206f776e207468697320647261676f6e0000000000000081525060200191505060405180910390fd5b6000600a858154811061298e57fe5b9060005260206000209060040201905060006129ed85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612aec565b90506000600102811415612a69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f456d707479206e616d657320617265206e6f742061636365707461626c65000081525060200191505060405180910390fd5b808260010181905550505050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006060829050600081511415612b0a576000600102915050612b13565b60208301519150505b919050565b6000806000905060008090506000603290506000600790506000600790506000600790506000603c9050612b668b8e8e8d8d8c8c8c8c8c8c8c600c60009054906101000a900460ff166139f4565b97505050505050505095945050505050565b612b828282613c8a565b612b8c8282613d83565b612b9581613e4a565b5050565b600080612ba58361166f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612c1457508373ffffffffffffffffffffffffffffffffffffffff16612bfc8461108a565b73ffffffffffffffffffffffffffffffffffffffff16145b80612c255750612c2481856127d8565b5b91505092915050565b612c39838383613e96565b612c4383826140f1565b612c4d8282613d83565b505050565b6000612c5d8261428f565b90506000600c60009054906101000a900460ff1660ff168260ff161490508015612cbe57612caf601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868686611fe1565b612cb98484614312565b612db7565b60001515600f600086815260200190815260200160002060009054906101000a900460ff1615151415612d64576000612cf684614379565b905080600d60008781526020019081526020016000208190555084600e6000838152602001908152602001600020819055506001600f600087815260200190815260200160002060006101000a81548160ff021916908315150217905550612d5e8682612b78565b50612db6565b6000600d6000868152602001908152602001600020549050612daa601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878387611fe1565b612db48185614312565b505b5b5050505050565b600081600001549050919050565b6000612ded8473ffffffffffffffffffffffffffffffffffffffff166143ea565b612dfa5760019050612fe5565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612ef1578082015181840152602081019050612ed6565b50505050905090810190601f168015612f1e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612f4057600080fd5b505af1158015612f54573d6000803e3d6000fd5b505050506040513d6020811015612f6a57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60606000606190506060816040519080825280601f01601f19166020018201604052801561302a5781602001600182028038833980820191505090505b509050600080905060008090505b60208110156130cf5760ff63ffffffff1681600802168660000151908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061308b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613038565b5060008090505b602081101561316257856020015181602081106130ef57fe5b1a7f01000000000000000000000000000000000000000000000000000000000000000283838151811061311e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506130d6565b5060008090505b600881101561320a5760ff63ffffffff168160080216866040015167ffffffffffffffff16908060020a82049150507f0100000000000000000000000000000000000000000000000000000000000000028383815181106131c657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613169565b5060008090505b60048110156132ae5760ff63ffffffff168160080216866060015163ffffffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061326a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613211565b5060008090505b60048110156133525760ff63ffffffff168160080216866080015163ffffffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061330e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506132b5565b5060008090505b60048110156133f65760ff63ffffffff1681600802168660a0015163ffffffff16908060020a82049150507f0100000000000000000000000000000000000000000000000000000000000000028383815181106133b257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613359565b5060008090505b60028110156134985760ff63ffffffff1681600802168660c0015161ffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061345457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506133fd565b5060008090505b600281101561353a5760ff63ffffffff1681600802168660e0015161ffff16908060020a82049150507f0100000000000000000000000000000000000000000000000000000000000000028383815181106134f657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050808060010191505061349f565b5060008090505b60028110156135dd5760ff63ffffffff16816008021686610100015161ffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061359957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613541565b5060008090505b60028110156136805760ff63ffffffff16816008021686610120015161ffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061363c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506135e4565b5060008090505b60028110156137235760ff63ffffffff16816008021686610140015161ffff16908060020a82049150507f0100000000000000000000000000000000000000000000000000000000000000028383815181106136df57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250508080600101915050613687565b5060008090505b60028110156137c65760ff63ffffffff16816008021686610160015161ffff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061378257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050808060010191505061372a565b5060008090505b60018110156138685760ff63ffffffff16816008021686610180015160ff16908060020a82049150507f01000000000000000000000000000000000000000000000000000000000000000283838151811061382457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818060010192505080806001019150506137cd565b50819350505050919050565b6000600e6000838152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613934576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e76616c6964206e6577206f776e657220616464726573730000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001600a604051806101a0016040528060008152602001600060010281526020018f67ffffffffffffffff1681526020018e63ffffffff1681526020018d63ffffffff1681526020018c63ffffffff1681526020018b61ffff1681526020018a61ffff1681526020018961ffff1681526020018861ffff1681526020018761ffff1681526020018661ffff1681526020018560ff1681525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160020160086101000a81548163ffffffff021916908363ffffffff160217905550608082015181600201600c6101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160020160106101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160020160146101000a81548161ffff021916908361ffff16021790555060e08201518160020160166101000a81548161ffff021916908361ffff1602179055506101008201518160020160186101000a81548161ffff021916908361ffff16021790555061012082015181600201601a6101000a81548161ffff021916908361ffff16021790555061014082015181600201601c6101000a81548161ffff021916908361ffff16021790555061016082015181600201601e6101000a81548161ffff021916908361ffff1602179055506101808201518160030160006101000a81548160ff021916908360ff1602179055505050039050613c79818f8f6143fd565b9d9c50505050505050505050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613d23600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614434565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8273ffffffffffffffffffffffffffffffffffffffff16613eb68261166f565b73ffffffffffffffffffffffffffffffffffffffff1614613f22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061530f6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613fa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061521e6027913960400191505060405180910390fd5b613fb18161444a565b613ff8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614508565b61403f600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614434565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006141496001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061452b90919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114614236576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106141b657fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061420e57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361428891906150f6565b5050505050565b60008160608151811061429e57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090049050919050565b60008060008060008061432487614597565b95509550955095509550955060008060008060008060006143448e614970565b96509650965096509650965096506143688f8e8e8e8e8e8e8e8e8e8e8e8e8e614e73565b505050505050505050505050505050565b600080600080600080600061438d88614597565b95509550955095509550955060008060008060008060006143ad8f614970565b965096509650965096509650965060006143d28e8e8e8e8e8e8e8e8e8e8e8e8e6139f4565b9050809e505050505050505050505050505050919050565b600080823b905060008111915050919050565b6000600a848154811061440c57fe5b9060005260206000209060040201905082816000018190555081816001018190555050505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146145055760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6145206001826000015461452b90919063ffffffff16565b816000018190555050565b600082821115614586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061516a603a913960400191505060405180910390fd5b600082840390508091505092915050565b600080600080600080600080905060008090505b602081101561465b5760008983815181106145c257fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff16905081600802819060020a029050808918985082806001019350505080806001019150506145ab565b506146668882615020565b955060208101905060008090505b600881101561472e57600089838151811061468b57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028167ffffffffffffffff169060020a02905080871896508280600101935050508080600101915050614674565b5060008090505b60048110156147eb57600089838151811061474c57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a02905080861895508280600101935050508080600101915050614735565b5060008090505b60048110156148a857600089838151811061480957fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a029050808518945082806001019350505080806001019150506147f2565b5060008090505b60048110156149655760008983815181106148c657fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028163ffffffff169060020a029050808418935082806001019350505080806001019150506148af565b505091939550919395565b6000806000806000806000806054905060008090505b6002811015614a3a5760008a838151811061499d57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a029050808a1899508280600101935050508080600101915050614986565b5060008090505b6002811015614af55760008a8381518110614a5857fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080891898508280600101935050508080600101915050614a41565b5060008090505b6002811015614bb05760008a8381518110614b1357fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080881897508280600101935050508080600101915050614afc565b5060008090505b6002811015614c6b5760008a8381518110614bce57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080871896508280600101935050508080600101915050614bb7565b5060008090505b6002811015614d265760008a8381518110614c8957fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080861895508280600101935050508080600101915050614c72565b5060008090505b6002811015614de15760008a8381518110614d4457fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff169050816008028161ffff169060020a02905080851894508280600101935050508080600101915050614d2d565b50888181518110614dee57fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900482189150808060010191505050919395979092949650565b6000600a8f81548110614e8257fe5b906000526020600020906004020190508d81600001819055508c81600101819055508b8160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508a8160020160086101000a81548163ffffffff021916908363ffffffff1602179055508981600201600c6101000a81548163ffffffff021916908363ffffffff160217905550888160020160106101000a81548163ffffffff021916908363ffffffff160217905550878160020160146101000a81548161ffff021916908361ffff160217905550868160020160166101000a81548161ffff021916908361ffff160217905550858160020160186101000a81548161ffff021916908361ffff1602179055508481600201601a6101000a81548161ffff021916908361ffff1602179055508381600201601c6101000a81548161ffff021916908361ffff1602179055508281600201601e6101000a81548161ffff021916908361ffff160217905550818160030160006101000a81548160ff021916908360ff160217905550505050505050505050505050505050565b600080600090505b60208110156150ef576008810260ff7f010000000000000000000000000000000000000000000000000000000000000002858386018151811061506757fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908060020a8204915050821791508080600101915050615028565b5092915050565b81548183558181111561511d5781836000526020600020918201910161511c9190615122565b5b505050565b61514491905b80821115615140576000816000905550600101615128565b5090565b9056fe52656365697665722073686f756c6420626520612076616c6964206164647265737361206d7573742062652067726561746572207468616e20622c206e6567617469766520726573756c747320617265206e6f7420616c6c6f7765644f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e496e76616c6964206f776e6572206164647265737320746f206265206d617070656453656e64657220646f65736e2774206f776e207468697320746f6b656e206f72206861766520726967687473206f6e206974496e76616c696420616464726573732e204572726f72207472616e73666572696320746f6b656e4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67496e76616c6964206d61696e6e6574206164647265737320746f206265206d6170706564546172676574206164647265737320646f6573206e6f7420696d706c656d656e74206f6e455243373231526563656976656420696e746572666163656f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e53656e64657220646f65736e74206f776e20746f6b656e20746f206265207472616e736665726564426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573a265627a7a72315820fc615d0fa1e509adabc4349f91b5279d46aeb35740a198556fbba51e25ccffd264736f6c63430005110032",
  "sourceMap": "191:2408:27:-;;;211:1:7;180:32;;;;;;;;;;;;;;;;;;;;374:95:27;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:95:27;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;374:95:27;;;;;;;;;;;;;;;;;;;;;;;;;437:7;446:12;639:40:15;236:10;658:20;;639:18;;;:40;;;:::i;:::-;1965::17;1222:10;1984:20;;1965:18;;;:40;;;:::i;:::-;1223:51:18;839:10;1242:31;;1223:18;;;:51;;;:::i;:::-;544:10:14;535:6;;:19;;;;;;;;;;;;;;;;;;602:6;;;;;;;;;;;569:40;;598:1;569:40;;;;;;;;;;;;728:1:7;709:21;;:7;:21;;;;701:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:7;768:8;;:18;;;;;;;;;;;;;;;;;;812:12;796:13;;:28;;;;;;;;;;;;;;;;;;622:209;;374:95:27;;191:2408;;989:158:15;1079:10;1064:25;;:11;:25;;;;;1056:34;;;;;;1136:4;1100:20;:33;1121:11;1100:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;989:158;:::o;191:2408:27:-;;;;;;;",
  "deployedSourceMap": "191:2408:27:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;191:2408:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;777:133:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1663:130:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1663:130:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1663:130:6;;;;;;;;;;;;;;;;;3787:151:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3787:151:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3210:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3210:292:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;932:474:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;932:474:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;932:474:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;932:474:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;932:474:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;932:474:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1925:116:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1925:116:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2176:94:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5343:234:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5343:234:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2047:196:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2047:196:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1842:182:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1842:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6210:132:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6210:132:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2607:148:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2607:148:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1146:54:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1146:54:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1410:358:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1410:358:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;2612:177:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2612:177:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;765:322:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:322:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;765:322:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;765:322:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;765:322:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;765:322:27;;;;;;;;;;;;;;;:::i;:::-;;2215:179:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2215:179:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1417:137:14;;;:::i;:::-;;681:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1287:182:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1287:182:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1287:182:18;;;;;;;;;;;;;;;;;1044:90:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4230:213:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4230:213:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;518:140:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;518:140:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;1093:311;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1093:311:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2507:117:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2507:117:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7047:275:17;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7047:275:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7047:275:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7047:275:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7047:275:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7047:275:17;;;;;;;;;;;;;;;:::i;:::-;;1774:823:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1774:823:27;;;;;;;;;;;;;;;;;:::i;:::-;;2630:616:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2630:616:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1799:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1799:120:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2249:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2249:252:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4764:145:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4764:145:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1728:107:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1728:107:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;3475:306:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3475:306:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3475:306:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3475:306:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3475:306:6;;;;;;;;;;;;:::i;:::-;;777:133:15;847:4;870:20;:33;891:11;870:33;;;;;;;;;;;;;;;;;;;;;;;;;;;863:40;;777:133;;;:::o;1663:130:6:-;1731:16;1766:12;:20;1779:6;1766:20;;;;;;;;;;;;;;;1759:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:130;;;:::o;3787:151:17:-;3846:7;3873:16;3881:7;3873;:16::i;:::-;3865:25;;;;;;3907:15;:24;3923:7;3907:24;;;;;;;;;;;;;;;;;;;;;3900:31;;3787:151;;;:::o;3210:292::-;3273:13;3289:16;3297:7;3289;:16::i;:::-;3273:32;;3329:5;3323:11;;:2;:11;;;;3315:20;;;;;;3367:5;3353:19;;:10;:19;;;:58;;;;3376:35;3393:5;3400:10;3376:16;:35::i;:::-;3353:58;3345:67;;;;;;3450:2;3423:15;:24;3439:7;3423:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3487:7;3483:2;3467:28;;3476:5;3467:28;;;;;;;;;;;;3210:292;;;:::o;932:474:7:-;1153:16;1172:11;1153:30;;1194:19;1216:23;1233:5;1216:16;:23::i;:::-;1194:45;;1249:7;1259:70;1273:11;1286:13;1301:8;1311:6;1319:9;1259:13;:70::i;:::-;1249:80;;1340:21;1346:10;1358:2;1340:5;:21::i;:::-;1376:23;1386:2;1390:8;1376:23;;;;;;;;;;;;;;;;;;;;;;;;932:474;;;;;;;:::o;1925:116:6:-;1990:7;2016:18;2024:9;2016:7;:18::i;:::-;2009:25;;1925:116;;;:::o;2176:94:18:-;2220:7;2246:10;:17;;;;2239:24;;2176:94;:::o;5343:234:17:-;5433:39;5452:10;5464:7;5433:18;:39::i;:::-;5425:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5538:32;5552:4;5558:2;5562:7;5538:13;:32::i;:::-;5343:234;;;:::o;2047:196:6:-;2104:13;2119:10;2146:21;2170:7;2178:9;2170:18;;;;;;;;;;;;;;;;;;2146:42;;2206:6;:15;;;;;;;;;;;;2223:6;:12;;;;;;;;;;;;2198:38;;;;;;;;;;;;;;;2047:196;;;:::o;1842:182:18:-;1922:7;1957:16;1967:5;1957:9;:16::i;:::-;1949:5;:24;1941:33;;;;;;1991:12;:19;2004:5;1991:19;;;;;;;;;;;;;;;2011:5;1991:26;;;;;;;;;;;;;;;;1984:33;;1842:182;;;;:::o;6210:132:17:-;6296:39;6313:4;6319:2;6323:7;6296:39;;;;;;;;;;;;:16;:39::i;:::-;6210:132;;;:::o;2607:148:18:-;2665:7;2700:13;:11;:13::i;:::-;2692:5;:21;2684:30;;;;;;2731:10;2742:5;2731:17;;;;;;;;;;;;;;;;2724:24;;2607:148;;;:::o;1146:54:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;1410:358:27:-;1517:1;1491:28;;:14;:28;;;;1483:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:1;1578:54;;:28;:40;1607:10;1578:40;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;1570:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:14;1704:28;:40;1733:10;1704:40;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;1410:358;:::o;2612:177:17:-;2667:7;2686:13;2702:11;:20;2714:7;2702:20;;;;;;;;;;;;;;;;;;;;;2686:36;;2757:1;2740:19;;:5;:19;;;;2732:28;;;;;;2777:5;2770:12;;;2612:177;;;:::o;765:322:27:-;883:8;;;;;;;;;;;869:22;;:10;:22;;;861:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:1;963:22;;:8;:22;;;;955:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:46;1054:8;1064;1074:5;1034:19;:46::i;:::-;765:322;;;:::o;2215:179:17:-;2270:7;2314:1;2297:19;;:5;:19;;;;2289:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2353:34;:17;:24;2371:5;2353:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2346:41;;2215:179;;;:::o;1417:137:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1515:1;1478:40;;1499:6;;;;;;;;;;;1478:40;;;;;;;;;;;;1545:1;1528:6;;:19;;;;;;;;;;;;;;;;;;1417:137::o;681:76::-;718:7;744:6;;;;;;;;;;;737:13;;681:76;:::o;1287:182:18:-;1351:16;1404:1;1387:19;;:5;:19;;;;1379:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:12;:19;1456:5;1443:19;;;;;;;;;;;;;;;1436:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:182;;;:::o;1044:90:14:-;1084:4;1121:6;;;;;;;;;;;1107:20;;:10;:20;;;1100:27;;1044:90;:::o;4230:213:17:-;4315:10;4309:16;;:2;:16;;;;4301:25;;;;;;4373:8;4336:18;:30;4355:10;4336:30;;;;;;;;;;;;;;;:34;4367:2;4336:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4423:2;4396:40;;4411:10;4396:40;;;4427:8;4396:40;;;;;;;;;;;;;;;;;;;;;;4230:213;;:::o;518:140:27:-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:7:27;633:8;;:18;;;;;;;;;;;;;;;;;;518:140;:::o;1093:311::-;886:9:14;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:1:27;1190:19;;:5;:19;;;;1182:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:1;1266:28;;:14;:28;;;;1258:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:14;1345:28;:35;1374:5;1345:35;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1093:311;;:::o;2507:117:6:-;2568:7;2594;2602:9;2594:18;;;;;;;;;;;;;;;;;;:23;;;2587:30;;2507:117;;;:::o;7047:275:17:-;7153:31;7166:4;7172:2;7176:7;7153:12;:31::i;:::-;7202:48;7225:4;7231:2;7235:7;7244:5;7202:22;:48::i;:::-;7194:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7047:275;;;;:::o;1774:823:27:-;1842:8;1380:10:6;1358:32;;:18;1366:9;1358:7;:18::i;:::-;:32;;;1350:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:1:27;1870:54;;:28;:40;1899:10;1870:40;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;;1862:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2009:7;:14;;;;1998:8;:25;1990:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:21;2079:7;2087:8;2079:17;;;;;;;;;;;;;;;;;;2055:41;;2106:26;2135:28;2156:6;2135:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:28::i;:::-;2106:57;;2204:44;2217:10;2229:8;;;;;;;;;;;2239;2204:12;:44::i;:::-;2301:25;2347:8;;;;;;;;;;;2301:55;;2366:20;2418:13;;;;;;;;;;;2389:42;;:6;:25;;;;;;;;;;;;:42;;;:84;;2445:28;2464:8;2445:18;:28::i;:::-;2389:84;;;2434:8;2389:84;2366:107;;2483:7;:21;;;2505:10;2517:28;:40;2546:10;2517:40;;;;;;;;;;;;;;;;;;;;;;;;;2559:15;2576:13;2483:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2483:107:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2483:107:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2483:107:27;;;;1430:1:6;;;;1774:823:27;;:::o;2630:616:6:-;2701:12;2723;2745:15;2770:24;2804:13;2827:15;2852:14;2876:16;2909:21;2933:7;2941:9;2933:18;;;;;;;;;;;;;;;;;;2909:42;;2968:6;:11;;;2961:18;;2997:6;:12;;;;;;;;;;;;2989:20;;3030:6;:15;;;;;;;;;;;;3019:26;;3075:6;:24;;;;;;;;;;;;3055:44;;3118:6;:13;;;;;;;;;;;;3109:22;;3152:6;:15;;;;;;;;;;;;3141:26;;3187:6;:14;;;;;;;;;;;;3177:24;;3223:6;:16;;;;;;;;;;;;3211:28;;2630:616;;;;;;;;;;:::o;1799:120::-;1869:7;1895:17;1905:6;1895:9;:17::i;:::-;1888:24;;1799:120;;;:::o;2249:252::-;2301:4;2322:21;2346:7;2354:9;2346:18;;;;;;;;;;;;;;;;;;2322:42;;2374:26;2433:2;2410:6;:19;;;;;;;;;;;;2404:25;;:3;:25;2403:32;2374:61;;2477:6;:16;;;;;;;;;;;;2453:40;;:21;:40;2445:49;;;;2249:252;;;:::o;4764:145:17:-;4844:4;4867:18;:25;4886:5;4867:25;;;;;;;;;;;;;;;:35;4893:8;4867:35;;;;;;;;;;;;;;;;;;;;;;;;;4860:42;;4764:145;;;;:::o;1728:107:14:-;886:9;:7;:9::i;:::-;878:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:28;1819:8;1800:18;:28::i;:::-;1728:107;:::o;3475:306:6:-;3556:9;1380:10;1358:32;;:18;1366:9;1358:7;:18::i;:::-;:32;;;1350:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:21;3601:7;3609:9;3601:18;;;;;;;;;;;;;;;;;;3577:42;;3629:17;3649:23;3666:5;;3649:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3649:23:6;;;;;;:16;:23::i;:::-;3629:43;;3703:3;3690:16;;:9;:16;;3682:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:9;3751:6;:11;;:23;;;;1430:1;;3475:306;;;;:::o;7516:152:17:-;7573:4;7589:13;7605:11;:20;7617:7;7605:20;;;;;;;;;;;;;;;;;;;;;7589:36;;7659:1;7642:19;;:5;:19;;;;7635:26;;;7516:152;;;:::o;4162:311:6:-;4234:14;4260:32;4301:7;4260:49;;4353:1;4323:19;:26;:31;4319:72;;;4377:3;4370:10;;;;;;;4319:72;4453:2;4444:7;4440:16;4434:23;4424:33;;4410:57;;;;;:::o;2943:567:7:-;3068:10;3090:24;3117:1;3090:28;;3128:21;3152:1;3128:25;;3163:13;3179:2;3163:18;;3191:15;3209:1;3191:19;;3220:14;3237:1;3220:18;;3248:16;3267:1;3248:20;;3278:16;3297:2;3278:21;;3314:189;3337:6;3345:5;3352:13;3367:6;3375:9;3386:17;3425:14;3441:6;3449:8;3459:7;3468:9;3478;3489:13;;;;;;;;;;;3314:22;:189::i;:::-;3309:194;;2943:567;;;;;;;;;;;;;;:::o;3624:196:18:-;3687:24;3699:2;3703:7;3687:11;:24::i;:::-;3722:40;3750:2;3754:7;3722:27;:40::i;:::-;3773;3805:7;3773:31;:40::i;:::-;3624:196;;:::o;8028:246:17:-;8113:4;8129:13;8145:16;8153:7;8145;:16::i;:::-;8129:32;;8190:5;8179:16;;:7;:16;;;:51;;;;8223:7;8199:31;;:20;8211:7;8199:11;:20::i;:::-;:31;;;8179:51;:87;;;;8234:32;8251:5;8258:7;8234:16;:32::i;:::-;8179:87;8171:96;;;8028:246;;;;:::o;3130:239:18:-;3215:38;3235:4;3241:2;3245:7;3215:19;:38::i;:::-;3264:47;3297:4;3303:7;3264:32;:47::i;:::-;3322:40;3350:2;3354:7;3322:27;:40::i;:::-;3130:239;;;:::o;1743:1194:7:-;1846:18;1868:34;1896:5;1868:27;:34::i;:::-;1846:56;;1912:31;1962:13;;;;;;;;;;;1946:29;;:12;:29;;;1912:63;;1990:26;1986:945;;;2032:56;2049:8;;;;;;;;;;;2060:2;2064:16;2082:5;2032:16;:56::i;:::-;2102:46;2124:16;2142:5;2102:21;:46::i;:::-;1986:945;;;2301:5;2267:39;;:12;:30;2280:16;2267:30;;;;;;;;;;;;;;;;;;;;;:39;;;2263:658;;;2326:12;2341:28;2363:5;2341:21;:28::i;:::-;2326:43;;2428:7;2388:19;:37;2408:16;2388:37;;;;;;;;;;;:47;;;;2485:16;2454:19;:28;2474:7;2454:28;;;;;;;;;;;:47;;;;2552:4;2519:12;:30;2532:16;2519:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2575:18;2581:2;2585:7;2575:5;:18::i;:::-;2263:658;;;;2734:12;2749:19;:37;2769:16;2749:37;;;;;;;;;;;;2734:52;;2804:47;2821:8;;;;;;;;;;;2832:2;2836:7;2845:5;2804:16;:47::i;:::-;2869:37;2891:7;2900:5;2869:21;:37::i;:::-;2263:658;;1986:945;1743:1194;;;;;:::o;1060:112:12:-;1125:7;1151;:14;;;1144:21;;1060:112;;;:::o;10882:347:17:-;11003:4;11028:15;:2;:13;;;:15::i;:::-;11023:58;;11066:4;11059:11;;;;11023:58;11091:13;11123:2;11107:36;;;11144:10;11156:4;11162:7;11171:5;11107:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11107:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11107:70:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11107:70:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11107:70:17;;;;;;;;;;;;;;;;11091:86;;708:10;11205:16;;11195:26;;;:6;:26;;;;11187:35;;;10882:347;;;;;;;:::o;4542:3166:6:-;4617:12;4712:9;4724:2;4712:14;;4791:24;4828:4;4818:15;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;4818:15:6;;;;4791:42;;4844:12;4859:1;4844:16;;4914:6;4923:1;4914:10;;4909:164;4930:2;4926:1;:6;4909:164;;;5030:3;5013:21;;5018:1;5014;:5;5013:21;4995:7;:13;;;:41;52:12:-1;49:1;45:20;29:14;25:41;7:59;;4995:41:6;4984:54;;4961:11;4973:7;4961:20;;;;;;;;;;;:77;;;;;;;;;;;5053:9;;;;;;;4934:3;;;;;;;4909:164;;;;5125:6;5134:1;5125:10;;5120:124;5141:2;5137:1;:6;5120:124;;;5195:7;:12;;;5208:1;5195:15;;;;;;;;;;5172:11;5184:7;5172:20;;;;;;;;;;;:38;;;;;;;;;;;5224:9;;;;;;;5145:3;;;;;;;5120:124;;;;5304:6;5313:1;5304:10;;5299:169;5320:1;5316;:5;5299:169;;;5426:3;5409:21;;5414:1;5410;:5;5409:21;5384:7;:20;;;:47;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5384:47:6;5373:60;;5350:11;5362:7;5350:20;;;;;;;;;;;:83;;;;;;;;;;;5448:9;;;;;;;5323:3;;;;;;;5299:169;;;;5521:6;5530:1;5521:10;;5516:162;5537:1;5533;:5;5516:162;;;5636:3;5619:21;;5624:1;5620;:5;5619:21;5601:7;:13;;;:40;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5601:40:6;5590:53;;5567:11;5579:7;5567:20;;;;;;;;;;;:76;;;;;;;;;;;5658:9;;;;;;;5540:3;;;;;;;5516:162;;;;5734:6;5743:1;5734:10;;5729:165;5750:1;5746;:5;5729:165;;;5852:3;5835:21;;5840:1;5836;:5;5835:21;5814:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;5814:43:6;5803:56;;5780:11;5792:7;5780:20;;;;;;;;;;;:79;;;;;;;;;;;5874:9;;;;;;;5753:3;;;;;;;5729:165;;;;5959:6;5968:1;5959:10;;5954:174;5975:1;5971;:5;5954:174;;;6086:3;6069:21;;6074:1;6070;:5;6069:21;6039:7;:25;;;:52;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6039:52:6;6028:65;;6005:11;6017:7;6005:20;;;;;;;;;;;:88;;;;;;;;;;;6108:9;;;;;;;5978:3;;;;;;;5954:174;;;;6190:6;6199:1;6190:10;;6185:171;6206:1;6202;:5;6185:171;;;6314:3;6297:21;;6302:1;6298;:5;6297:21;6270:7;:22;;;:49;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6270:49:6;6259:62;;6236:11;6248:7;6236:20;;;;;;;;;;;:85;;;;;;;;;;;6336:9;;;;;;;6209:3;;;;;;;6185:171;;;;6409:6;6418:1;6409:10;;6404:163;6425:1;6421;:5;6404:163;;;6525:3;6508:21;;6513:1;6509;:5;6508:21;6489:7;:14;;;:41;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6489:41:6;6478:54;;6455:11;6467:7;6455:20;;;;;;;;;;;:77;;;;;;;;;;;6547:9;;;;;;;6428:3;;;;;;;6404:163;;;;6622:6;6631:1;6622:10;;6617:165;6638:1;6634;:5;6617:165;;;6740:3;6723:21;;6728:1;6724;:5;6723:21;6702:7;:16;;;:43;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6702:43:6;6691:56;;6668:11;6680:7;6668:20;;;;;;;;;;;:79;;;;;;;;;;;6762:9;;;;;;;6641:3;;;;;;;6617:165;;;;6836:6;6845:1;6836:10;;6831:164;6852:1;6848;:5;6831:164;;;6953:3;6936:21;;6941:1;6937;:5;6936:21;6916:7;:15;;;:42;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;6916:42:6;6905:55;;6882:11;6894:7;6882:20;;;;;;;;;;;:78;;;;;;;;;;;6975:9;;;;;;;6855:3;;;;;;;6831:164;;;;7051:6;7060:1;7051:10;;7046:166;7067:1;7063;:5;7046:166;;;7170:3;7153:21;;7158:1;7154;:5;7153:21;7131:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7131:44:6;7120:57;;7097:11;7109:7;7097:20;;;;;;;;;;;:80;;;;;;;;;;;7192:9;;;;;;;7070:3;;;;;;;7046:166;;;;7269:6;7278:1;7269:10;;7264:166;7285:1;7281;:5;7264:166;;;7388:3;7371:21;;7376:1;7372;:5;7371:21;7349:7;:17;;;:44;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7349:44:6;7338:57;;7315:11;7327:7;7315:20;;;;;;;;;;;:80;;;;;;;;;;;7410:9;;;;;;;7288:3;;;;;;;7264:166;;;;7504:6;7513:1;7504:10;;7499:175;7520:1;7516;:5;7499:175;;;7632:3;7615:21;;7620:1;7616;:5;7615:21;7584:7;:26;;;:53;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;7584:53:6;7573:66;;7550:11;7562:7;7550:20;;;;;;;;;;;:89;;;;;;;;;;;7654:9;;;;;;;7523:3;;;;;;;7499:175;;;;7690:11;7683:18;;;;;4542:3166;;;:::o;7690:135:7:-;7761:4;7784:19;:34;7804:13;7784:34;;;;;;;;;;;;7777:41;;7690:135;;;:::o;1982:212:14:-;2075:1;2055:22;;:8;:22;;;;2047:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:8;2122:38;;2143:6;;;;;;;;;;;2122:38;;;;;;;;;;;;2179:8;2170:6;;:17;;;;;;;;;;;;;;;;;;1982:212;:::o;4296:1235:7:-;4702:10;5380:1;4730:7;4756:611;;;;;;;;4788:1;4756:611;;;;4813:1;4756:611;;;;;;4847:13;4756:611;;;;;;5017:6;4756:611;;;;;;5051:9;4756:611;;;;;;4934:18;4756:611;;;;;;5095:15;4756:611;;;;;;5137:7;4756:611;;;;;;5172:9;4756:611;;;;;;5208:8;4756:611;;;;;;5245:10;4756:611;;;;;;5285:10;4756:611;;;;;;5333:19;4756:611;;;;;4730:647;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4730:647:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:651;4725:656;;5486:38;5506:2;5510:6;5518:5;5486:19;:38::i;:::-;4296:1235;;;;;;;;;;;;;;;:::o;8517:188:17:-;8604:2;8581:11;:20;8593:7;8581:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8616:33;:17;:21;8634:2;8616:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8690:7;8686:2;8665:33;;8682:1;8665:33;;;;;;;;;;;;8517:188;;:::o;5078:183:18:-;5191:12;:16;5204:2;5191:16;;;;;;;;;;;;;;;:23;;;;5162:17;:26;5180:7;5162:26;;;;;;;;;;;:52;;;;5224:12;:16;5237:2;5224:16;;;;;;;;;;;;;;;5246:7;5224:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5224:30:18;;;;;;;;;;;;;;;;;;;;;;5078:183;;:::o;5456:161::-;5559:10;:17;;;;5532:15;:24;5548:7;5532:24;;;;;;;;;;;:44;;;;5586:10;5602:7;5586:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5586:24:18;;;;;;;;;;;;;;;;;;;;;;5456:161;:::o;9905:449:17:-;10018:4;9998:24;;:16;10006:7;9998;:16::i;:::-;:24;;;9990:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10099:1;10085:16;;:2;:16;;;;10077:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10156:23;10171:7;10156:14;:23::i;:::-;10190:35;:17;:23;10208:4;10190:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10235:33;:17;:21;10253:2;10235:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10302:2;10279:11;:20;10291:7;10279:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10339:7;10335:2;10320:27;;10329:4;10320:27;;;;;;;;;;;;9905:449;;;:::o;6232:1128:18:-;6494:22;6519:32;6549:1;6519:12;:18;6532:4;6519:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6494:57;;6561:18;6582:17;:26;6600:7;6582:26;;;;;;;;;;;;6561:47;;6726:14;6712:10;:28;6708:323;;6756:19;6778:12;:18;6791:4;6778:18;;;;;;;;;;;;;;;6797:14;6778:34;;;;;;;;;;;;;;;;6756:56;;6860:11;6827:12;:18;6840:4;6827:18;;;;;;;;;;;;;;;6846:10;6827:30;;;;;;;;;;;;;;;:44;;;;6976:10;6943:17;:30;6961:11;6943:30;;;;;;;;;;;:43;;;;6708:323;;7117:12;:18;7130:4;7117:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6232:1128;;;;:::o;11142:147:6:-;11221:18;11272:5;11278:2;11272:9;;;;;;;;;;;;;;;;;11266:16;;;11251:31;;11142:147;;;:::o;5749:751:7:-;5834:11;5855:13;5878:20;5908:13;5931:16;5957:25;5986:40;6020:5;5986:33;:40::i;:::-;5833:193;;;;;;;;;;;;6038:22;6070:14;6094:16;6120:15;6145:17;6172;6199:25;6228:41;6263:5;6228:34;:41::i;:::-;6037:232;;;;;;;;;;;;;;6280:213;6303:8;6313:6;6321:5;6328:13;6343:6;6351:9;6362:18;6402:15;6419:7;6428:9;6439:8;6449:10;6461;6473:19;6280:22;:213::i;:::-;5749:751;;;;;;;;;;;;;;;:::o;3516:774::-;3583:7;3604:11;3625:13;3648:20;3678:13;3701:16;3727:25;3756:40;3790:5;3756:33;:40::i;:::-;3603:193;;;;;;;;;;;;3808:22;3840:14;3864:16;3890:15;3915:17;3942;3969:25;3998:41;4033:5;3998:34;:41::i;:::-;3807:232;;;;;;;;;;;;;;4050:7;4060:203;4083:6;4091:5;4098:13;4113:6;4121:9;4132:18;4172:15;4189:7;4198:9;4209:8;4219:10;4231;4243:19;4060:22;:203::i;:::-;4050:213;;4281:2;4274:9;;;;;;;;;;;;;;;;3516:774;;;:::o;463:615:25:-;523:4;539:12;1037:7;1025:20;1017:28;;1070:1;1063:4;:8;1056:15;;;463:615;;;:::o;5537:206:7:-;5634:21;5658:7;5666:9;5658:18;;;;;;;;;;;;;;;;;;5634:42;;5701:6;5686;:12;;:21;;;;5731:5;5717:6;:11;;:19;;;;5537:206;;;;:::o;1178:89:12:-;1259:1;1241:7;:14;;;:19;;;;;;;;;;;1178:89;:::o;11390:171:17:-;11489:1;11453:38;;:15;:24;11469:7;11453:24;;;;;;;;;;;;;;;;;;;;;:38;;;11449:106;;11542:1;11507:15;:24;11523:7;11507:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11449:106;11390:171;:::o;1273:108:12:-;1353:21;1372:1;1353:7;:14;;;:18;;:21;;;;:::i;:::-;1336:7;:14;;:38;;;;1273:108;:::o;1235:207:13:-;1293:7;1325:1;1320;:6;;1312:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:9;1415:1;1411;:5;1399:17;;1434:1;1427:8;;;1235:207;;;;:::o;7714:1467:6:-;7808:10;7820:12;7834:19;7855:12;7869:15;7886:24;7931:12;7946:1;7931:16;;7987:6;7996:1;7987:10;;7982:186;8003:2;7999:1;:6;7982:186;;;8034:12;8063:5;8069:7;8063:14;;;;;;;;;;;;;;;;;8057:21;;;8049:30;;8034:45;;8106:1;8102;:5;8093:14;;;;;;;8130:4;8121:13;;;;8148:9;;;;;;;7982:186;8007:3;;;;;;;7982:186;;;;8208:27;8220:5;8227:7;8208:11;:27::i;:::-;8201:34;;8256:2;8245:13;;;;8306:6;8315:1;8306:10;;8301:190;8322:1;8318;:5;8301:190;;;8352:11;8379:5;8385:7;8379:14;;;;;;;;;;;;;;;;;8373:21;;;8366:29;;8352:43;;8422:1;8418;:5;8409:14;;;;;;;;;8453:4;8437:20;;;;8471:9;;;;;;;8301:190;8325:3;;;;;;;8301:190;;;;8531:6;8540:1;8531:10;;8526:183;8547:1;8543;:5;8526:183;;;8577:11;8604:5;8610:7;8604:14;;;;;;;;;;;;;;;;;8598:21;;;8591:29;;8577:43;;8647:1;8643;:5;8634:14;;;;;;;;;8671:4;8662:13;;;;8689:9;;;;;;;8526:183;8550:3;;;;;;;8526:183;;;;8752:6;8761:1;8752:10;;8747:186;8768:1;8764;:5;8747:186;;;8798:11;8825:5;8831:7;8825:14;;;;;;;;;;;;;;;;;8819:21;;;8812:29;;8798:43;;8868:1;8864;:5;8855:14;;;;;;;;;8895:4;8883:16;;;;8913:9;;;;;;;8747:186;8771:3;;;;;;;8747:186;;;;8985:6;8994:1;8985:10;;8980:195;9001:1;8997;:5;8980:195;;;9031:11;9058:5;9064:7;9058:14;;;;;;;;;;;;;;;;;9052:21;;;9045:29;;9031:43;;9101:1;9097;:5;9088:14;;;;;;;;;9137:4;9116:25;;;;9155:9;;;;;;;8980:195;9004:3;;;;;;;8980:195;;;;7714:1467;;;;;;;;:::o;9187:1723::-;9281:21;9304:13;9319:15;9336:14;9352:16;9370;9388:24;9424:12;9439:2;9424:17;;9491:6;9500:1;9491:10;;9486:192;9507:1;9503;:5;9486:192;;;9537:11;9564:5;9570:7;9564:14;;;;;;;;;;;;;;;;;9558:21;;;9551:29;;9537:43;;9607:1;9603;:5;9594:14;;;;;;;;;9640:4;9622:22;;;;9658:9;;;;;;;9486:192;9510:3;;;;;;;9486:192;;;;9718:6;9727:1;9718:10;;9713:184;9734:1;9730;:5;9713:184;;;9764:11;9791:5;9797:7;9791:14;;;;;;;;;;;;;;;;;9785:21;;;9778:29;;9764:43;;9834:1;9830;:5;9821:14;;;;;;;;;9859:4;9849:14;;;;9877:9;;;;;;;9713:184;9737:3;;;;;;;9713:184;;;;9939:6;9948:1;9939:10;;9934:186;9955:1;9951;:5;9934:186;;;9985:11;10012:5;10018:7;10012:14;;;;;;;;;;;;;;;;;10006:21;;;9999:29;;9985:43;;10055:1;10051;:5;10042:14;;;;;;;;;10082:4;10070:16;;;;10100:9;;;;;;;9934:186;9958:3;;;;;;;9934:186;;;;10161:6;10170:1;10161:10;;10156:185;10177:1;10173;:5;10156:185;;;10207:11;10234:5;10240:7;10234:14;;;;;;;;;;;;;;;;;10228:21;;;10221:29;;10207:43;;10277:1;10273;:5;10264:14;;;;;;;;;10303:4;10292:15;;;;10321:9;;;;;;;10156:185;10180:3;;;;;;;10156:185;;;;10384:6;10393:1;10384:10;;10379:187;10400:1;10396;:5;10379:187;;;10430:11;10457:5;10463:7;10457:14;;;;;;;;;;;;;;;;;10451:21;;;10444:29;;10430:43;;10500:1;10496;:5;10487:14;;;;;;;;;10528:4;10515:17;;;;10546:9;;;;;;;10379:187;10403:3;;;;;;;10379:187;;;;10610:6;10619:1;10610:10;;10605:187;10626:1;10622;:5;10605:187;;;10656:11;10683:5;10689:7;10683:14;;;;;;;;;;;;;;;;;10677:21;;;10670:29;;10656:43;;10726:1;10722;:5;10713:14;;;;;;;;;10754:4;10741:17;;;;10772:9;;;;;;;10605:187;10629:3;;;;;;;10605:187;;;;10869:5;10875:7;10869:14;;;;;;;;;;;;;;;;;10863:21;;;10841:43;;;;10894:9;;;;;;;9187:1723;;;;;;;;;;:::o;6506:994:7:-;6935:21;6959:7;6967:8;6959:17;;;;;;;;;;;;;;;;;;6935:41;;7001:6;6986;:12;;:21;;;;7031:5;7017:6;:11;;:19;;;;7068:13;7046:6;:19;;;:35;;;;;;;;;;;;;;;;;;7106:6;7091;:12;;;:21;;;;;;;;;;;;;;;;;;7140:9;7122:6;:15;;;:27;;;;;;;;;;;;;;;;;;7186:18;7159:6;:24;;;:45;;;;;;;;;;;;;;;;;;7238:15;7214:6;:21;;;:39;;;;;;;;;;;;;;;;;;7279:7;7263:6;:13;;;:23;;;;;;;;;;;;;;;;;;7314:9;7296:6;:15;;;:27;;;;;;;;;;;;;;;;;;7350:8;7333:6;:14;;;:25;;;;;;;;;;;;;;;;;;7387:10;7368:6;:16;;;:29;;;;;;;;;;;;;;;;;;7426:10;7407:6;:16;;;:29;;;;;;;;;;;;;;;;;;7474:19;7446:6;:25;;;:47;;;;;;;;;;;;;;;;;;6506:994;;;;;;;;;;;;;;;:::o;10916:220:6:-;10995:12;11024:6;11033:1;11024:10;;11019:111;11040:2;11036:1;:6;11019:111;;;11117:1;11113;:5;11103:4;11079:28;;:5;11098:1;11085:10;:14;11079:21;;;;;;;;;;;;;;;;;:28;11071:37;;;:48;52:12:-1;49:1;45:20;29:14;25:41;7:59;;11071:48:6;11063:56;;;;11044:3;;;;;;;11019:111;;;;10916:220;;;;:::o;191:2408:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../common/DragonFactory.sol\";\n\ncontract IDappchainGateway {\n  function depositDragon(address from, address to, uint256 uid, bytes calldata data) external;\n}\n\ncontract DappchainTransferableDragon is DragonFactory {\n\n    // map sidechain address to mainchain address\n    mapping (address => address) private _sidechainAddressToMainchain;\n\n    constructor(address gateway, uint8 blockchainId) DragonFactory(gateway, blockchainId) public {}\n\n    // Setter to update who the gateway is\n    function setGatewayAddress(address gateway) external onlyOwner {\n        //TODO check address is a gateway\n        _gateway = gateway;\n    }\n\n    // Used by the DAppChain Gateway to mint tokens that have been deposited to the Ethereum Gateway\n    function retrieveToken(address receiver, uint256 _tokenId, bytes memory _data) public {\n        require(msg.sender == _gateway, \"only the gateway is allowed to call this function\");\n        require(receiver != address(0), \"Receiver should be a valid address\");\n        _mintReceivedDragon(receiver, _tokenId, _data);\n    }\n\n    function undoMapping(address owner, address mainnetAddress) external onlyOwner {\n        require(owner != address(0), \"Invalid owner address to be mapped\");\n        require(mainnetAddress != address(0), \"Invalid mainnet address to be mapped\");\n        _sidechainAddressToMainchain[owner] = mainnetAddress;\n    }\n\n    function mapContractToMainnet(address mainnetAddress) external {\n        require(mainnetAddress != address(0), \"Invalid mainnet address to be mapped\");\n        require(_sidechainAddressToMainchain[msg.sender] == address(0), \"Address already mapped. Request owner to undo the mapping\");\n        _sidechainAddressToMainchain[msg.sender] = mainnetAddress;\n    }\n\n    function transferToGateway(uint256 _tokenId) public onlyDragonOwner(_tokenId) {\n        require(_sidechainAddressToMainchain[msg.sender] != address(0), \"Blockchains should be mapped to allow transferences\");\n        require(_tokenId < dragons.length, \"Invalid token Id\");\n\n        Dragon storage dragon = dragons[_tokenId];\n        bytes memory encodedDragon = _encodeDragonToBytes(dragon);\n\n        // Transfer ownership\n        transferFrom(msg.sender, _gateway, _tokenId);\n\n        // Trigger trnsference in gateway\n        IDappchainGateway gateway = IDappchainGateway(_gateway);\n        uint originalTokenId = dragon.blockchainOriginId == _blockchainId ? _tokenId : _getForeignTokenId(_tokenId);\n        gateway.depositDragon(msg.sender, _sidechainAddressToMainchain[msg.sender], originalTokenId, encodedDragon);\n    }\n}",
  "sourcePath": "/usr/src/app/main-sv/contracts/dappchain/DappchainTransferableDragon.sol",
  "ast": {
    "absolutePath": "/usr/src/app/main-sv/contracts/dappchain/DappchainTransferableDragon.sol",
    "exportedSymbols": {
      "DappchainTransferableDragon": [
        4682
      ],
      "IDappchainGateway": [
        4471
      ]
    },
    "id": 4683,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4458,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "absolutePath": "/usr/src/app/main-sv/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 4459,
        "nodeType": "ImportDirective",
        "scope": 4683,
        "sourceUnit": 2190,
        "src": "25:37:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4471,
        "linearizedBaseContracts": [
          4471
        ],
        "name": "IDappchainGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 4470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4461,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "118:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4463,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "132:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4465,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "144:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "157:19:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:60:27"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:27"
            },
            "scope": 4471,
            "src": "95:92:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4683,
        "src": "64:125:27"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4472,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2189,
              "src": "231:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2189",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 4473,
            "nodeType": "InheritanceSpecifier",
            "src": "231:13:27"
          }
        ],
        "contractDependencies": [
          1566,
          2189,
          2831,
          2882,
          3800,
          4157,
          4167,
          4354,
          4381
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4682,
        "linearizedBaseContracts": [
          4682,
          2189,
          1566,
          2831,
          4157,
          4381,
          3800,
          4354,
          2882,
          4167
        ],
        "name": "DappchainTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4477,
            "name": "_sidechainAddressToMainchain",
            "nodeType": "VariableDeclaration",
            "scope": 4682,
            "src": "302:65:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4476,
              "keyType": {
                "id": 4474,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "302:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4488,
              "nodeType": "Block",
              "src": "467:2:27",
              "statements": []
            },
            "documentation": null,
            "id": 4489,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4484,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4479,
                    "src": "437:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4485,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4481,
                    "src": "446:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 4486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4483,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2189,
                  "src": "423:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2189_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "423:36:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4479,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "386:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4481,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "403:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4480,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:37:27"
            },
            "returnParameters": {
              "id": 4487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:27"
            },
            "scope": 4682,
            "src": "374:95:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4500,
              "nodeType": "Block",
              "src": "581:77:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4496,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1596,
                      "src": "633:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4497,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4491,
                      "src": "644:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "633:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4499,
                  "nodeType": "ExpressionStatement",
                  "src": "633:18:27"
                }
              ]
            },
            "documentation": null,
            "id": 4501,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4493,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2764,
                  "src": "571:9:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "571:9:27"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4491,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 4501,
                  "src": "545:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:17:27"
            },
            "returnParameters": {
              "id": 4495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:27"
            },
            "scope": 4682,
            "src": "518:140:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4533,
              "nodeType": "Block",
              "src": "851:236:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4511,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8885,
                            "src": "869:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "869:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4513,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "883:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "869:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 4515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:51:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 4510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "861:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:84:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "861:84:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4519,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4503,
                          "src": "963:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "983:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "975:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "963:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 4524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:36:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 4518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "955:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:69:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4526,
                  "nodeType": "ExpressionStatement",
                  "src": "955:69:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4528,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4503,
                        "src": "1054:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4529,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4505,
                        "src": "1064:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4530,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4507,
                        "src": "1074:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4527,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1034:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4532,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:46:27"
                }
              ]
            },
            "documentation": null,
            "id": 4534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4503,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "788:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4505,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "806:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4507,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "824:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4506,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:56:27"
            },
            "returnParameters": {
              "id": 4509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:27"
            },
            "scope": 4682,
            "src": "765:322:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4567,
              "nodeType": "Block",
              "src": "1172:232:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4544,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4536,
                          "src": "1190:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1207:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1199:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1190:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 4549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:36:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 4543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1182:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:66:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4551,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:66:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4553,
                          "name": "mainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4538,
                          "src": "1266:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1284:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1284:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1266:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d61696e6e6574206164647265737320746f206265206d6170706564",
                        "id": 4558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:38:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        },
                        "value": "Invalid mainnet address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        }
                      ],
                      "id": 4552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1258:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:77:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4560,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:77:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4561,
                        "name": "_sidechainAddressToMainchain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "1345:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4563,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4562,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "1374:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1345:35:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4564,
                      "name": "mainnetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4538,
                      "src": "1383:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1345:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4566,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:52:27"
                }
              ]
            },
            "documentation": null,
            "id": 4568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4540,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2764,
                  "src": "1162:9:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1162:9:27"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4536,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "1114:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4538,
                  "name": "mainnetAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "1129:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:39:27"
            },
            "returnParameters": {
              "id": 4542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:27"
            },
            "scope": 4682,
            "src": "1093:311:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4601,
              "nodeType": "Block",
              "src": "1473:295:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4574,
                          "name": "mainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4570,
                          "src": "1491:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1517:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1509:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1509:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1491:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d61696e6e6574206164647265737320746f206265206d6170706564",
                        "id": 4579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1521:38:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        },
                        "value": "Invalid mainnet address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        }
                      ],
                      "id": 4573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1483:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:77:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:77:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4583,
                            "name": "_sidechainAddressToMainchain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "1578:28:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4586,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4584,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8885,
                              "src": "1607:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1607:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1578:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1630:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1622:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1622:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1578:54:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 4591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:59:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 4582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1570:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:124:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4593,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:124:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4594,
                        "name": "_sidechainAddressToMainchain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "1704:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4597,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4595,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "1733:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1733:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1704:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4598,
                      "name": "mainnetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4570,
                      "src": "1747:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1704:57:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4600,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:57:27"
                }
              ]
            },
            "documentation": null,
            "id": 4602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToMainnet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4570,
                  "name": "mainnetAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4602,
                  "src": "1440:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:24:27"
            },
            "returnParameters": {
              "id": 4572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:0:27"
            },
            "scope": 4682,
            "src": "1410:358:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "1852:745:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4611,
                            "name": "_sidechainAddressToMainchain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "1870:28:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4614,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4612,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8885,
                              "src": "1899:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1899:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1870:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1922:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1914:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1914:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1870:54:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 4619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1926:53:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 4610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1862:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:118:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4621,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:118:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4623,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4604,
                          "src": "1998:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4624,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2009:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 4625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2009:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1998:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 4627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:18:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 4622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1990:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:54:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4629,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:54:27"
                },
                {
                  "assignments": [
                    4631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4631,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2055:21:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4630,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2055:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4635,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4632,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2079:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 4634,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4633,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4604,
                      "src": "2087:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2079:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2055:41:27"
                },
                {
                  "assignments": [
                    4637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4637,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2106:26:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4636,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2106:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4639,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4631,
                        "src": "2156:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 4638,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "2135:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:57:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "2217:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2217:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4645,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "2229:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4646,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4604,
                        "src": "2239:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4642,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3500
                      ],
                      "referencedDeclaration": 3500,
                      "src": "2204:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:44:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4648,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:44:27"
                },
                {
                  "assignments": [
                    4650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4650,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2301:25:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                        "typeString": "contract IDappchainGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4649,
                        "name": "IDappchainGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4471,
                        "src": "2301:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                          "typeString": "contract IDappchainGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4652,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "2347:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4651,
                      "name": "IDappchainGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "2329:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDappchainGateway_$4471_$",
                        "typeString": "type(contract IDappchainGateway)"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2329:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                      "typeString": "contract IDappchainGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2301:55:27"
                },
                {
                  "assignments": [
                    4656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4656,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2366:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4655,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2366:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4666,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4657,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "2389:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 4658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2389:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4659,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1582,
                        "src": "2418:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2389:42:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4663,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4604,
                          "src": "2464:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4662,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "2445:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 4664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2445:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2389:84:27",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 4661,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4604,
                      "src": "2434:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2366:107:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "2505:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2505:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4672,
                          "name": "_sidechainAddressToMainchain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4477,
                          "src": "2517:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 4675,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4673,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8885,
                            "src": "2546:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2546:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2517:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4676,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4656,
                        "src": "2559:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4677,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4637,
                        "src": "2576:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4667,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4650,
                        "src": "2483:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                          "typeString": "contract IDappchainGateway"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4470,
                      "src": "2483:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:107:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:107:27"
                }
              ]
            },
            "documentation": null,
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4607,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4604,
                    "src": "1842:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4608,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4606,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "1826:15:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1826:25:27"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4604,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "1801:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1800:18:27"
            },
            "returnParameters": {
              "id": 4609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:27"
            },
            "scope": 4682,
            "src": "1774:823:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4683,
        "src": "191:2408:27"
      }
    ],
    "src": "0:2599:27"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/main-sv/contracts/dappchain/DappchainTransferableDragon.sol",
    "exportedSymbols": {
      "DappchainTransferableDragon": [
        4682
      ],
      "IDappchainGateway": [
        4471
      ]
    },
    "id": 4683,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4458,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "absolutePath": "/usr/src/app/main-sv/contracts/common/DragonFactory.sol",
        "file": "../common/DragonFactory.sol",
        "id": 4459,
        "nodeType": "ImportDirective",
        "scope": 4683,
        "sourceUnit": 2190,
        "src": "25:37:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4471,
        "linearizedBaseContracts": [
          4471
        ],
        "name": "IDappchainGateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 4470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDragon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4461,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "118:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4463,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "132:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4465,
                  "name": "uid",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "144:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4470,
                  "src": "157:19:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:60:27"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:27"
            },
            "scope": 4471,
            "src": "95:92:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4683,
        "src": "64:125:27"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4472,
              "name": "DragonFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2189,
              "src": "231:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DragonFactory_$2189",
                "typeString": "contract DragonFactory"
              }
            },
            "id": 4473,
            "nodeType": "InheritanceSpecifier",
            "src": "231:13:27"
          }
        ],
        "contractDependencies": [
          1566,
          2189,
          2831,
          2882,
          3800,
          4157,
          4167,
          4354,
          4381
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4682,
        "linearizedBaseContracts": [
          4682,
          2189,
          1566,
          2831,
          4157,
          4381,
          3800,
          4354,
          2882,
          4167
        ],
        "name": "DappchainTransferableDragon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4477,
            "name": "_sidechainAddressToMainchain",
            "nodeType": "VariableDeclaration",
            "scope": 4682,
            "src": "302:65:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4476,
              "keyType": {
                "id": 4474,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "302:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4488,
              "nodeType": "Block",
              "src": "467:2:27",
              "statements": []
            },
            "documentation": null,
            "id": 4489,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4484,
                    "name": "gateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4479,
                    "src": "437:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4485,
                    "name": "blockchainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4481,
                    "src": "446:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 4486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4483,
                  "name": "DragonFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2189,
                  "src": "423:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DragonFactory_$2189_$",
                    "typeString": "type(contract DragonFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "423:36:27"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4479,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "386:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4481,
                  "name": "blockchainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "403:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4480,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:37:27"
            },
            "returnParameters": {
              "id": 4487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:27"
            },
            "scope": 4682,
            "src": "374:95:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4500,
              "nodeType": "Block",
              "src": "581:77:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4496,
                      "name": "_gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1596,
                      "src": "633:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4497,
                      "name": "gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4491,
                      "src": "644:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "633:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4499,
                  "nodeType": "ExpressionStatement",
                  "src": "633:18:27"
                }
              ]
            },
            "documentation": null,
            "id": 4501,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4493,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2764,
                  "src": "571:9:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "571:9:27"
              }
            ],
            "name": "setGatewayAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4491,
                  "name": "gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 4501,
                  "src": "545:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:17:27"
            },
            "returnParameters": {
              "id": 4495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:27"
            },
            "scope": 4682,
            "src": "518:140:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4533,
              "nodeType": "Block",
              "src": "851:236:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4511,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8885,
                            "src": "869:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "869:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4513,
                          "name": "_gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "883:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "869:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206761746577617920697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 4515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:51:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        },
                        "value": "only the gateway is allowed to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9bf2465f04573b291c35f8da13c9a2c500a288a74d776b66efdaa5a1cb946bd",
                          "typeString": "literal_string \"only the gateway is allowed to call this function\""
                        }
                      ],
                      "id": 4510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "861:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:84:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "861:84:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4519,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4503,
                          "src": "963:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "983:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "975:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "963:22:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52656365697665722073686f756c6420626520612076616c69642061646472657373",
                        "id": 4524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:36:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        },
                        "value": "Receiver should be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17307e0835bf4631ec73c776468a3d3e422bb557debf0f9d309dbd8923431e24",
                          "typeString": "literal_string \"Receiver should be a valid address\""
                        }
                      ],
                      "id": 4518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "955:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:69:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4526,
                  "nodeType": "ExpressionStatement",
                  "src": "955:69:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4528,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4503,
                        "src": "1054:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4529,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4505,
                        "src": "1064:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4530,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4507,
                        "src": "1074:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4527,
                      "name": "_mintReceivedDragon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "1034:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:46:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4532,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:46:27"
                }
              ]
            },
            "documentation": null,
            "id": 4534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4503,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "788:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4505,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "806:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4507,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "824:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4506,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:56:27"
            },
            "returnParameters": {
              "id": 4509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "851:0:27"
            },
            "scope": 4682,
            "src": "765:322:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4567,
              "nodeType": "Block",
              "src": "1172:232:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4544,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4536,
                          "src": "1190:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1207:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1199:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1199:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1190:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206f776e6572206164647265737320746f206265206d6170706564",
                        "id": 4549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:36:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        },
                        "value": "Invalid owner address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b07551fc3fafe0e64521cddd9dabdfc7d670f84f27c5ea9e982c74c3b8de4e6",
                          "typeString": "literal_string \"Invalid owner address to be mapped\""
                        }
                      ],
                      "id": 4543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1182:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:66:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4551,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:66:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4553,
                          "name": "mainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4538,
                          "src": "1266:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1284:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1284:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1266:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d61696e6e6574206164647265737320746f206265206d6170706564",
                        "id": 4558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:38:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        },
                        "value": "Invalid mainnet address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        }
                      ],
                      "id": 4552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1258:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:77:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4560,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:77:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4561,
                        "name": "_sidechainAddressToMainchain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "1345:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4563,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4562,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "1374:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1345:35:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4564,
                      "name": "mainnetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4538,
                      "src": "1383:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1345:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4566,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:52:27"
                }
              ]
            },
            "documentation": null,
            "id": 4568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4540,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2764,
                  "src": "1162:9:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1162:9:27"
              }
            ],
            "name": "undoMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4536,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "1114:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4538,
                  "name": "mainnetAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "1129:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:39:27"
            },
            "returnParameters": {
              "id": 4542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:27"
            },
            "scope": 4682,
            "src": "1093:311:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4601,
              "nodeType": "Block",
              "src": "1473:295:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4574,
                          "name": "mainnetAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4570,
                          "src": "1491:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1517:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1509:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1509:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1491:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d61696e6e6574206164647265737320746f206265206d6170706564",
                        "id": 4579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1521:38:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        },
                        "value": "Invalid mainnet address to be mapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89379fbc8bb78a78f323e8d3daf70da051e365e6eba39b6f71a979321e22b342",
                          "typeString": "literal_string \"Invalid mainnet address to be mapped\""
                        }
                      ],
                      "id": 4573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1483:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:77:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:77:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4583,
                            "name": "_sidechainAddressToMainchain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "1578:28:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4586,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4584,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8885,
                              "src": "1607:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1607:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1578:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1630:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1622:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1622:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1578:54:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320616c7265616479206d61707065642e2052657175657374206f776e657220746f20756e646f20746865206d617070696e67",
                        "id": 4591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:59:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        },
                        "value": "Address already mapped. Request owner to undo the mapping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80999e651d61bed62a31af43ec764f899552f76bae8302dd3691d65709585cf0",
                          "typeString": "literal_string \"Address already mapped. Request owner to undo the mapping\""
                        }
                      ],
                      "id": 4582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1570:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:124:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4593,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:124:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4594,
                        "name": "_sidechainAddressToMainchain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "1704:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4597,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4595,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "1733:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1733:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1704:40:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4598,
                      "name": "mainnetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4570,
                      "src": "1747:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1704:57:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4600,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:57:27"
                }
              ]
            },
            "documentation": null,
            "id": 4602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mapContractToMainnet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4570,
                  "name": "mainnetAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4602,
                  "src": "1440:22:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1439:24:27"
            },
            "returnParameters": {
              "id": 4572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:0:27"
            },
            "scope": 4682,
            "src": "1410:358:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "1852:745:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4611,
                            "name": "_sidechainAddressToMainchain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "1870:28:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 4614,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4612,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8885,
                              "src": "1899:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1899:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1870:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1922:1:27",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1914:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1914:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1870:54:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426c6f636b636861696e732073686f756c64206265206d617070656420746f20616c6c6f77207472616e73666572656e636573",
                        "id": 4619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1926:53:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        },
                        "value": "Blockchains should be mapped to allow transferences"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e46c5d5492451bcd7667025a16ec2acdbdb7139a3ae22f1e4d5673000268e42d",
                          "typeString": "literal_string \"Blockchains should be mapped to allow transferences\""
                        }
                      ],
                      "id": 4610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1862:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:118:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4621,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:118:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4623,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4604,
                          "src": "1998:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4624,
                            "name": "dragons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "2009:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                              "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                            }
                          },
                          "id": 4625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2009:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1998:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e204964",
                        "id": 4627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:18:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        },
                        "value": "Invalid token Id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b900ee20cf16e71b7429cf96ad10a4d0857387241481f89d1c5eaa044d4b3e6e",
                          "typeString": "literal_string \"Invalid token Id\""
                        }
                      ],
                      "id": 4622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8888,
                        8889
                      ],
                      "referencedDeclaration": 8889,
                      "src": "1990:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:54:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4629,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:54:27"
                },
                {
                  "assignments": [
                    4631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4631,
                      "name": "dragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2055:21:27",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                        "typeString": "struct DragonBase.Dragon"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4630,
                        "name": "Dragon",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 324,
                        "src": "2055:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4635,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4632,
                      "name": "dragons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2079:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dragon_$324_storage_$dyn_storage",
                        "typeString": "struct DragonBase.Dragon storage ref[] storage ref"
                      }
                    },
                    "id": 4634,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4633,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4604,
                      "src": "2087:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2079:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dragon_$324_storage",
                      "typeString": "struct DragonBase.Dragon storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2055:41:27"
                },
                {
                  "assignments": [
                    4637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4637,
                      "name": "encodedDragon",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2106:26:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4636,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2106:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4639,
                        "name": "dragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4631,
                        "src": "2156:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                          "typeString": "struct DragonBase.Dragon storage pointer"
                        }
                      ],
                      "id": 4638,
                      "name": "_encodeDragonToBytes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "2135:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Dragon_$324_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct DragonBase.Dragon memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2106:57:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "2217:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2217:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4645,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "2229:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4646,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4604,
                        "src": "2239:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4642,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3500
                      ],
                      "referencedDeclaration": 3500,
                      "src": "2204:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2204:44:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4648,
                  "nodeType": "ExpressionStatement",
                  "src": "2204:44:27"
                },
                {
                  "assignments": [
                    4650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4650,
                      "name": "gateway",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2301:25:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                        "typeString": "contract IDappchainGateway"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4649,
                        "name": "IDappchainGateway",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4471,
                        "src": "2301:17:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                          "typeString": "contract IDappchainGateway"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4652,
                        "name": "_gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "2347:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4651,
                      "name": "IDappchainGateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "2329:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDappchainGateway_$4471_$",
                        "typeString": "type(contract IDappchainGateway)"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2329:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                      "typeString": "contract IDappchainGateway"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2301:55:27"
                },
                {
                  "assignments": [
                    4656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4656,
                      "name": "originalTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "2366:20:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4655,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2366:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4666,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 4660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4657,
                          "name": "dragon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "2389:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dragon_$324_storage_ptr",
                            "typeString": "struct DragonBase.Dragon storage pointer"
                          }
                        },
                        "id": 4658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "blockchainOriginId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "2389:25:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4659,
                        "name": "_blockchainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1582,
                        "src": "2418:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2389:42:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4663,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4604,
                          "src": "2464:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4662,
                        "name": "_getForeignTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "2445:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 4664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2445:28:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2389:84:27",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 4661,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4604,
                      "src": "2434:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2366:107:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8885,
                          "src": "2505:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2505:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4672,
                          "name": "_sidechainAddressToMainchain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4477,
                          "src": "2517:28:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 4675,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4673,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8885,
                            "src": "2546:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2546:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2517:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4676,
                        "name": "originalTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4656,
                        "src": "2559:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4677,
                        "name": "encodedDragon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4637,
                        "src": "2576:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4667,
                        "name": "gateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4650,
                        "src": "2483:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappchainGateway_$4471",
                          "typeString": "contract IDappchainGateway"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositDragon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4470,
                      "src": "2483:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:107:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:107:27"
                }
              ]
            },
            "documentation": null,
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4607,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4604,
                    "src": "1842:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4608,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4606,
                  "name": "onlyDragonOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "1826:15:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1826:25:27"
              }
            ],
            "name": "transferToGateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4604,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "1801:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1800:18:27"
            },
            "returnParameters": {
              "id": 4609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:27"
            },
            "scope": 4682,
            "src": "1774:823:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4683,
        "src": "191:2408:27"
      }
    ],
    "src": "0:2599:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "13654820909954": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dragonId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewDragon",
          "type": "event",
          "signature": "0x3045fac2aa90b666e53421f7c8b2245fae88d8c0bc2a2b62ff6283daea24f36f"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0xb0A6d565323700453F08d30cb3e5575d1E4381c7",
      "transactionHash": "0xe178712cce351bac5505dfa7a8a4b96bba163ff3753323051705a1cd0e12ef39"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2020-06-01T01:16:08.803Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createDragon(string,uint64,uint32,uint32)": {
        "notice": "Creates new Dragon and give it to its creator."
      },
      "getDragonsIdsByOwner(address)": {
        "notice": "***************************************************************************************** PUBLIC METHODS*******************************************************************************************"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setName(uint256,string)": {
        "notice": "***************************************************************************************** ONLY OWNER ACTIONS*******************************************************************************************"
      }
    }
  }
}